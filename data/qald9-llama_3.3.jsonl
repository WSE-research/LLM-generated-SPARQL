{"question": "List all boardgames by GMT.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “List all boardgames by GMT.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q11453 ;\",\n    \"       wdt:P123 ?publisher .\",\n    \"FILTER (?publisher = wd:Q5517083)\",\n    \"}\"\n  ]\n}"}
{"question": "List all boardgames by GMT.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “List all boardgames by GMT.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q131436 is board game", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q131436;\",\n    \"?item wdt:P123 ?publisher.\",\n    \"FILTER(CONTAINS(STR(?publisher), 'GMT'))\",\n    \"}\"\n  ]\n}"}
{"question": "List all boardgames by GMT.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “List all boardgames by GMT.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8694 is instance of\nkg:9432 is board game", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?game\",\n    \"WHERE {\",\n    \"?game kg:9432 \\\"true\\\"^^xsd:boolean ;\",\n    \"       kg:8694 \\\"GMT\\\"@en .\",\n    \"}\"\n  ]\n}"}
{"question": "Who developed Skype?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who developed Skype?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P112 ?developer.\",\n    \"?item wdt:P178 \\\"Skype\\\".\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Who developed Skype?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who developed Skype?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q40984 is Skype\nwdt:P178 is developer", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?developer\",\n    \"WHERE {\",\n    \"  wd:Q40984 wdt:P178 ?developer .\",\n    \"}\"\n  ]\n}"}
{"question": "Who developed Skype?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who developed Skype?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6211 is Skype\nkg:1548 is developer", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?developer\",\n    \"WHERE {\",\n    \"  kg:6211 kg:developer ?developer .\",\n    \"}\"\n  ]\n}"}
{"question": "Which people were born in Heraklion?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which people were born in Heraklion?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P19 wd:Q182683.\",\n    \"}\"\n  ]\n}"}
{"question": "Which people were born in Heraklion?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which people were born in Heraklion?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P19 is place of birth\nwd:Q160544 is Heraklion", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P19 wd:Q160544.\",\n    \"}\"\n  ]\n}"}
{"question": "Which people were born in Heraklion?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which people were born in Heraklion?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9471 is place of birth\nkg:4255 is Heraklion", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?person\",\n    \"WHERE {\",\n    \"?person kg:9471 kg:4255 .\",\n    \"}\"\n  ]\n}"}
{"question": "In which U.S. state is Area 51 located?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “In which U.S. state is Area 51 located?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P131 wd:Q874793.\",\n    \"}\"\n  ]\n}"}
{"question": "In which U.S. state is Area 51 located?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “In which U.S. state is Area 51 located?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q177397 is Area 51\nwdt:P131 is located in the administrative territorial entity\nwdt:P131 is located in the administrative territorial entity", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q177397 wdt:P131 ?item .\",\n    \"  ?item wdt:P31 wd:Q35657 .\", \"# Q35657 is U.S. state\"\n    ]}\n "}
{"question": "In which U.S. state is Area 51 located?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “In which U.S. state is Area 51 located?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6216 is Area 51\nkg:5375 is located in the administrative territorial entity\nkg:5375 is located in the administrative territorial entity", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?state\",\n    \"WHERE {\",\n    \"  kg:6216 kg:5375 ?state .\",\n    \"  FILTER (REGEX(STR(?state), \\\"^http://example.org/kg/[0-9]+\\\"))\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the mayor of New York City?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is the mayor of New York City?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P6 wd:Q90.\",\n    \"?item wdt:P39 wd:Q17231727.\"\n    ]}\n "}
{"question": "Who is the mayor of New York City?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is the mayor of New York City?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q60 is New York City\nwdt:P6 is head of government", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?mayor\",\n    \"WHERE {\",\n    \"  wd:Q60 wdt:P6 ?mayor .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the mayor of New York City?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is the mayor of New York City?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2848 is New York City\nkg:9377 is head of government", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?mayor\",\n    \"WHERE {\",\n    \"  kg:2848 kg:9377 ?mayor .\",\n    \"}\"\n  ]\n}"}
{"question": "Where did Abraham Lincoln die?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Where did Abraham Lincoln die?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q91 AS ?lincoln).\",\n    \"  ?lincoln wdt:P119 ?deathPlace.\",\n    \"  BIND(?deathPlace AS ?item).\",\n    \"}\"\n  ]\n}"}
{"question": "Where did Abraham Lincoln die?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Where did Abraham Lincoln die?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q91 is Abraham Lincoln\nwdt:P20 is place of death", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q91 wdt:P20 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "Where did Abraham Lincoln die?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Where did Abraham Lincoln die?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9211 is Abraham Lincoln\nkg:6252 is place of death", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?place\",\n    \"WHERE {\",\n    \"  kg:9211 kg:6252 ?place .\",\n    \"}\"\n  ]\n}"}
{"question": "Which airports does Air China serve?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which airports does Air China serve?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?airport\",\n    \"WHERE {\",\n    \"?airline wdt:P137 123057 ;\",\n    \"       wdt:P1126 ?airport .\",\n    \"FILTER (?airline = wd:Q279634)\",\n    \"}\"\n  ]\n}"}
{"question": "Which airports does Air China serve?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which airports does Air China serve?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q51747 is Air China\nwdt:P113 is airline hub", "response": "{\n  \"query\": [\n    \"SELECT ?airport\",\n    \"WHERE {\",\n    \"  wd:Q51747 wdt:P1373 ?route .\",\n    \"  ?route wdt:P618 ?airport .\",\n    \"  FILTER NOT EXISTS { ?route wdt:P931 [] }\",\n    \"}\"\n  ]\n}"}
{"question": "Which airports does Air China serve?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which airports does Air China serve?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3523 is Air China\nkg:2174 is airline hub", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?airport\",\n    \"WHERE {\",\n    \"  kg:3523 kg:serves ?airport .\",\n    \"  FILTER (?airport != kg:2174)\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all actors starring in movies directed by and starring William Shatner.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all actors starring in movies directed by and starring William Shatner.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"?movie wdt:P57 wd:Q106994.\",\n    \"?movie wdt:P161 ?actor.\",\n    \"?movie wdt:P57 ?actor.}\",\n    \"FILTER (?actor != wd:Q106994)\"\n  ]\n}"}
{"question": "Give me all actors starring in movies directed by and starring William Shatner.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all actors starring in movies directed by and starring William Shatner.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P57 is director\nwd:Q16297 is William Shatner\nwdt:P161 is cast member\nwd:Q16297 is William Shatner\nwdt:P161 is cast member", "response": "{\n  \"query\": [\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"?movie wdt:P57 wd:Q16297;\",\n    \"       wdt:P161 wd:Q16297;\",\n    \"       wdt:P161 ?actor.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all actors starring in movies directed by and starring William Shatner.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all actors starring in movies directed by and starring William Shatner.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3840 is director\nkg:6889 is William Shatner\nkg:7140 is cast member\nkg:6889 is William Shatner\nkg:7140 is cast member", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"?movie kg:3840 kg:6889 .\",\n    \"?movie kg:7140 ?actor .\",\n    \"?movie kg:7140 kg:6889 .\",\n    \"}\"\n  ]\n}"}
{"question": "What are the official languages of the Philippines?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What are the official languages of the Philippines?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q928 AS ?country).\",\n    \"  ?country wdt:P37 ?item.\",\n    \"}\"\n  ]\n}"}
{"question": "What are the official languages of the Philippines?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What are the official languages of the Philippines?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q928 is Philippines\nwdt:P37 is official language", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q928 wdt:P37 ?item.\",\n    \"}\"\n  ]\n}"}
{"question": "What are the official languages of the Philippines?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What are the official languages of the Philippines?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5866 is Philippines\nkg:9978 is official language", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?language\",\n    \"WHERE {\",\n    \"  kg:5866 kg:9978 ?language .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all Danish films.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all Danish films.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q11424.\",\n    \"?item wdt:P495 wd:Q35.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all Danish films.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all Danish films.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P279 is subclass of\nwd:Q11424 is film\nwdt:P31 is instance of\nwdt:P495 is country of origin\nwd:Q35 is Denmark", "response": "{\n  \"query\": [\n    \"SELECT\",\n    \"?item\",\n    \"WHERE\",\n    \"{\",\n    \"?item\",\n    \"wdt:P31\",\n    \"wd:Q11424\",\n    \";\",\n    \"wdt:P495\",\n    \"wd:Q35\",\n    \".\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Give me all Danish films.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all Danish films.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8808 is subclass of\nkg:6517 is film\nkg:8359 is instance of\nkg:1180 is country of origin\nkg:5463 is Denmark", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?film\",\n    \"WHERE {\",\n    \"?film kg:6517 true .\",\n    \"?film kg:1180 kg:5463 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which movies starring Brad Pitt were directed by Guy Ritchie?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which movies starring Brad Pitt were directed by Guy Ritchie?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?movie\",\n    \"WHERE {\",\n    \"?movie wdt:P161 wd:Q22609 ;\",\n    \"       wdt:P57 wd:Q200524 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which movies starring Brad Pitt were directed by Guy Ritchie?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which movies starring Brad Pitt were directed by Guy Ritchie?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P279 is subclass of\nwd:Q11424 is film\nwdt:P31 is instance of\nwdt:P161 is cast member\nwd:Q35332 is Brad Pitt\nwdt:P57 is director\nwd:Q192990 is Guy Ritchie", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"PREFIX wd: <http://www.wikidata.org/entity/>\",\n    \"SELECT ?movie\",\n    \"WHERE {\",\n    \"?movie wdt:P31 wd:Q11424 ;\",\n    \"       wdt:P161 wd:Q35332 ;\",\n    \"       wdt:P57 wd:Q192990 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which movies starring Brad Pitt were directed by Guy Ritchie?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which movies starring Brad Pitt were directed by Guy Ritchie?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5285 is subclass of\nkg:4255 is film\nkg:0188 is instance of\nkg:3943 is cast member\nkg:8245 is Brad Pitt\nkg:6493 is director\nkg:1627 is Guy Ritchie", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?movie\",\n    \"WHERE {\",\n    \"?movie kg:4255 .\",\n    \"?movie kg:3943 kg:8245 .\",\n    \"?movie kg:6493 kg:1627 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which other weapons did the designer of the Uzi develop?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which other weapons did the designer of the Uzi develop?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q216616 AS ?uzi).\", \"# Uzi submachine gun\",\n    \"  ?uzi wdt:P61 ?designer.\", \"# designer of the Uzi\",\n    \"  ?designer wdt:P800 ?item.\", \"# other weapons developed by the designer\",\n    \"  FILTER(?item != ?uzi).\", \"# exclude the Uzi itself\",\n    \"}\"\n  ]\n}"}
{"question": "Which other weapons did the designer of the Uzi develop?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which other weapons did the designer of the Uzi develop?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P279 is subclass of\nwd:Q728 is weapon\nwd:Q155644 is Uzi\nwdt:P287 is designed by\nwdt:P279 is subclass of\nwdt:P287 is designed by\nwd:Q155644 is Uzi", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P279 wd:Q728.\",\n    \"?item wdt:P287 ?designer.\",\n    \"wd:Q155644 wdt:P287 ?designer.\",\n    \"FILTER (?item != wd:Q155644).\",\n    \"}\"\n  ]\n}"}
{"question": "Which other weapons did the designer of the Uzi develop?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which other weapons did the designer of the Uzi develop?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2838 is subclass of\nkg:7386 is weapon\nkg:6166 is Uzi\nkg:5784 is designed by\nkg:2838 is subclass of\nkg:5784 is designed by\nkg:6166 is Uzi", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?weapon\",\n    \"WHERE {\",\n    \"?uzi kg:7386 kg:6166 .\",\n    \"?designer kg:5784 ?uzi .\",\n    \"?weapon kg:7386 [] .\",\n    \"?weapon kg:5784 ?designer .\",\n    \"FILTER (?weapon != ?uzi)\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the owner of Universal Studios?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is the owner of Universal Studios?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P361 wd:Q170497 .\" ,\n    \"}\"\n  ]\n}"}
{"question": "Who is the owner of Universal Studios?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is the owner of Universal Studios?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q168383 is Universal Pictures\nwdt:P127 is owned by", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?owner\",\n    \"WHERE {\",\n    \"  wd:Q168383 wdt:P127 ?owner .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the owner of Universal Studios?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is the owner of Universal Studios?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1265 is Universal Pictures\nkg:8712 is owned by", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?owner\",\n    \"WHERE {\",\n    \"  kg:1265 kg:8712 ?owner .\",\n    \"}\"\n  ]\n}"}
{"question": "Which state of the USA has the highest population density?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which state of the USA has the highest population density?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?state\",\n    \"WHERE {\",\n    \"?state wdt:P31 wd:Q35657 ;\", \"# state of the USA\",\n    \"  wdt:P276* wd:Q30 ;\", \"# located in the USA\",\n    \"  p:P1082 ?populationStatement .\", \"# population statement\",\n    \"?populationStatement ps:P1082 ?population ;\", \"# population value\",\n    \"  pq:P585 ?date .\", \"# population date, ideally recent for comparison\",\n    \"FILTER NOT EXISTS { ?state wdt:P31 wd:Q131196 }\", \"# exclude federal district (Washington D.C.) if necessary\",\n    \"} ORDER BY DESC(?population) LIMIT 1\"\n  ]\n}"}
{"question": "Which state of the USA has the highest population density?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which state of the USA has the highest population density?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q35657 is U.S. state\nwdt:P2046 is area\nwdt:P1082 is population", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?state\",\n    \"WHERE {\",\n    \"?state wdt:P31 wd:Q35657.\",\n    \"?state wdt:P2046 ?area.\",\n    \"?state wdt:P1082 ?population.\",\n    \"BIND (?population / ?area AS ?density).\",\n    \"{ SELECT ?state (MAX(?density) AS ?maxDensity) WHERE {\",\n    \"?state wdt:P31 wd:Q35657.\",\n    \"?state wdt:P2046 ?area.\",\n    \"?state wdt:P1082 ?population.\",\n    \"BIND (?population / ?area AS ?density).\",\n    \"} GROUP BY ?state }\",\n    \"FILTER (?density = ?maxDensity).\",\n    \"}\"\n  ]\n}"}
{"question": "Which state of the USA has the highest population density?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which state of the USA has the highest population density?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0953 is instance of\nkg:1730 is U.S. state\nkg:4667 is area\nkg:4199 is population", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?state\",\n    \"WHERE {\",\n    \"?state kg:0953 kg:1730;\",\n    \"?state kg:4667 ?area;\",\n    \"?state kg:4199 ?population.\",\n    \"{ SELECT ?state (xsd:decimal(?population) / xsd:decimal(?area) AS ?density)\",\n    \"WHERE {\",\n    \"?state kg:0953 kg:1730;\",\n    \"?state kg:4667 ?area;\",\n    \"?state kg:4199 ?population.\",\n    \"}\",\n    \"ORDER BY DESC(?density)\",\n    \"LIMIT 1 }\"\n  ]\n}\n   "}
{"question": "Which monarchs were married to a German?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which monarchs were married to a German?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P26 ?spouse .\",\n    \"?spouse wdt:P27 wd:Q183 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which monarchs were married to a German?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which monarchs were married to a German?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P106 is occupation\nwd:Q116 is monarch\nwdt:P26 is spouse\nwdt:P27 is country of citizenship\nwd:Q183 is Germany", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q5; # instance of human\",\n    \"      wdt:P106 wd:Q116; # occupation monarch\",\n    \"      wdt:P26 ?spouse. # spouse\",\n    \"?spouse wdt:P27 wd:Q183. # country of citizenship Germany\",\n    \"}\"\n  ]\n}"}
{"question": "Which monarchs were married to a German?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which monarchs were married to a German?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9875 is occupation\nkg:9875 is monarch\nkg:7072 is spouse\nkg:1801 is country of citizenship\nkg:2266 is Germany", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?monarch\",\n    \"WHERE {\",\n    \"?monarch kg:9875 \\\"monarch\\\";\",\n    \"       kg:7072 ?spouse.\",\n    \"?spouse kg:1801 kg:2266.\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "Who created the comic Captain America?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who created the comic Captain America?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?creator\",\n    \"WHERE {\",\n    \"  wd:Q190593 wdt:P61 ?creator .\",\n    \"}\"\n  ]\n}"}
{"question": "Who created the comic Captain America?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who created the comic Captain America?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q190679 is Captain America\nwdt:P170 is creator", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?creator\",\n    \"WHERE {\",\n    \"  wd:Q190679 wdt:P170 ?creator .\",\n    \"}\"\n  ]\n}"}
{"question": "Who created the comic Captain America?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who created the comic Captain America?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2488 is Captain America\nkg:1582 is creator", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?creator\",\n    \"WHERE {\",\n    \"  kg:2488 kg:1582 ?creator .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me the Apollo 14 astronauts.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me the Apollo 14 astronauts.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?astronaut\",\n    \"WHERE {\",\n    \"  wd:Q182685 wdt:P828 ?mission.\",\n    \"  ?mission wdt:P2937 ?astronaut.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me the Apollo 14 astronauts.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me the Apollo 14 astronauts.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q178871 is Apollo 14\nwdt:P1029 is crew member(s)", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?astronauts\",\n    \"WHERE {\",\n    \"  wd:Q178871 wdt:P1029 ?astronauts .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me the Apollo 14 astronauts.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me the Apollo 14 astronauts.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9400 is Apollo 14\nkg:6757 is crew member(s)", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?astronaut\",\n    \"WHERE {\",\n    \"  kg:9400 kg:6757 ?astronaut .\",\n    \"}\"\n  ]\n}"}
{"question": "Who wrote the book The pillars of the Earth?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who wrote the book The pillars of the Earth?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?author\",\n    \"WHERE {\",\n    \"  wd:Q11293 wdt:P50 ?author .\",\n    \"}\"\n  ]\n}"}
{"question": "Who wrote the book The pillars of the Earth?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who wrote the book The pillars of the Earth?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q1163227 is The Pillars of the Earth\nwdt:P50 is author", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?author\",\n    \"WHERE {\",\n    \"  wd:Q1163227 wdt:P50 ?author .\",\n    \"}\"\n  ]\n}"}
{"question": "Who wrote the book The pillars of the Earth?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who wrote the book The pillars of the Earth?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3489 is The Pillars of the Earth\nkg:7086 is author", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?author\",\n    \"WHERE {\",\n    \"  kg:3489 kg:7086 ?author .\",\n    \"}\"\n  ]\n}"}
{"question": "Which state of the United States of America has the highest density?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which state of the United States of America has the highest density?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?state\",\n    \"WHERE {\",\n    \"?state wdt:P31 wd:Q35657 ;\", \"# instance of administrative territorial entity of the United States\",\n    \"wdt:P276 wd:Q30 .\", \"# located in United States\",\n    \"?state wdt:P2046 ?population .\", \"# population\",\n    \"?state wdt:P2049 ?area .\", \"# area\",\n    \"{ SELECT ?state ( ?population / ?area AS ?density )\",\n    \"WHERE {\",\n    \"?state wdt:P31 wd:Q35657 ;\",\n    \"wdt:P276 wd:Q30 ;\",\n    \"wdt:P2046 ?population ;\",\n    \"wdt:P2049 ?area .\",\n    \"} ORDER BY DESC(?density) LIMIT 1 }\"\n  ]\n  }\n "}
{"question": "Which state of the United States of America has the highest density?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which state of the United States of America has the highest density?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q35657 is U.S. state\nwdt:P2046 is area\nwdt:P1082 is population", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?state\",\n    \"WHERE {\",\n    \"?state wdt:P31 wd:Q35657.\",\n    \"?state wdt:P2046 ?area.\",\n    \"?state wdt:P1082 ?population.\",\n    \"BIND(?population / ?area AS ?density).\",\n    \"{ SELECT ?state (MAX(?density) AS ?maxDensity) WHERE {\",\n    \"?state wdt:P31 wd:Q35657.\",\n    \"?state wdt:P2046 ?area.\",\n    \"?state wdt:P1082 ?population.\",\n    \"BIND(?population / ?area AS ?density).\",\n    \"} GROUP BY ?state }\",\n    \"FILTER(?density = ?maxDensity).\",\n    \"}\"\n  ]\n}"}
{"question": "Which state of the United States of America has the highest density?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which state of the United States of America has the highest density?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1504 is instance of\nkg:4691 is U.S. state\nkg:6036 is area\nkg:6748 is population", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?state\",\n    \"WHERE {\",\n    \"?state a kg:4691 ;\",\n    \"       kg:6036 ?area ;\",\n    \"       kg:6748 ?population .\",\n    \"BIND (?population / ?area AS ?density)\",\n    \"ORDER BY DESC(?density)\",\n    \"LIMIT 1\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "Which spaceflights were launched from Baikonur?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which spaceflights were launched from Baikonur?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?spaceflight\",\n    \"WHERE {\",\n    \"?spaceflight wdt:P31 wd:Q44216 ;\", \"# spaceflight is an instance of spaceflight\",\n    \"wdt:P207 ?launchSite .\", \"# launch site property\",\n    \"?launchSite wdt:P131 wd:Q5326 .\" ,\"# launch site is Baikonur\"\n    ]}\n   \t\t\t\t\t\t    \t  \t   "}
{"question": "Which spaceflights were launched from Baikonur?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which spaceflights were launched from Baikonur?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P1427 is start point\nwd:Q177477 is Baikonur Cosmodrome", "response": "{\n  \"query\": [\n    \"SELECT\",\n    \"?item\",\n    \"WHERE\",\n    \"{\",\n    \"?item wdt:P31 wd:Q44216 ;\", \"# spaceflight\",\n    \"wdt:P1427 wd:Q177477 .\" ,\", # start point is Baikonur\"\n    ]}\n \t\t \t\t    \t  \t\t    \t"}
{"question": "Which spaceflights were launched from Baikonur?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which spaceflights were launched from Baikonur?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3950 is start point\nkg:1434 is Baikonur Cosmodrome", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?spaceflight\",\n    \"WHERE {\",\n    \"?spaceflight kg:3950 kg:1434 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me a list of all trumpet players that were bandleaders.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me a list of all trumpet players that were bandleaders.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P106 wd:Q63549390;\",\n    \"       wdt:P241 wd:Q84947093.\"\n    ]}\n "}
{"question": "Give me a list of all trumpet players that were bandleaders.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me a list of all trumpet players that were bandleaders.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P106 is occupation\nwd:Q158852 is conductor\nwdt:P1303 is instrument\nwd:Q8338 is trumpet", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P106 wd:Q158852 ;\",\n    \"       wdt:P106 ?occupation ;\",\n    \"       wdt:P1303 wd:Q8338 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me a list of all trumpet players that were bandleaders.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me a list of all trumpet players that were bandleaders.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9126 is occupation\nkg:5599 is conductor\nkg:3375 is instrument\nkg:5858 is trumpet", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"?s kg:9126 kg:5599 ;\",\n    \"      kg:3375 kg:5858 .\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "Which U.S. states are in the same timezone as Utah?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which U.S. states are in the same timezone as Utah?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?state\",\n    \"WHERE {\",\n    \"?state wdt:P31 wd:Q35657 ;\", \"# instance of administrative territorial entity of the United States\",\n    \"wdt:P421 ?timezone .\", \"# timezone\"\n    ,\"FILTER (?timezone = (SELECT ?tz WHERE { wd:Q11843 wdt:P421 ?tz }))\", \"# Utah's timezone\"\n    ,\"}\"\n  ]\n}"}
{"question": "Which U.S. states are in the same timezone as Utah?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which U.S. states are in the same timezone as Utah?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q829 is Utah\nwdt:P421 is located in time zone\nwdt:P31 is instance of\nwd:Q35657 is U.S. state\nwdt:P421 is located in time zone\nwd:Q829 is Utah", "response": "{\n  \"query\": [\n    \"SELECT ?state\",\n    \"WHERE {\",\n    \"?state wdt:P31 wd:Q35657.\",\n    \"?state wdt:P421 ?tz.\",\n    \"wd:Q829 wdt:P421 ?tz.\",\n    \"}\"\n  ]\n}"}
{"question": "Which U.S. states are in the same timezone as Utah?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which U.S. states are in the same timezone as Utah?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0110 is Utah\nkg:3176 is located in time zone\nkg:7966 is instance of\nkg:4285 is U.S. state\nkg:3176 is located in time zone\nkg:0110 is Utah", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?state\",\n    \"WHERE {\",\n    \"?state kg:7966 kg:4285 .\",\n    \"?state kg:3176 ?tz .\",\n    \"kg:0110 kg:3176 ?tz .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the daughter of Ingrid Bergman married to?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is the daughter of Ingrid Bergman married to?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?husband\",\n    \"WHERE {\",\n    \"  ?daughter wdt:P22 wd:Q58728;\",\n    \"  ?daughter wdt:P25 ?sex;\",\n    \"  FILTER(?sex = wd:Q6581072);\",\n    \"  ?daughter wdt:P26 ?husband.\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the daughter of Ingrid Bergman married to?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is the daughter of Ingrid Bergman married to?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q43247 is Ingrid Bergman\nwdt:P40 is child\nwdt:P26 is spouse", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?x\",\n    \"WHERE {\",\n    \"  wd:Q43247 wdt:P40 ?y .\",\n    \"  FILTER((?y != wd:Q181786) && (?y != wd:Q291850))\",\n    \"  ?y wdt:P21 wd:Q6581079 .\",\n    \"  ?y wdt:P26 ?x\"\n    ]}\n                 \t\t"}
{"question": "Who is the daughter of Ingrid Bergman married to?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is the daughter of Ingrid Bergman married to?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1029 is Ingrid Bergman\nkg:6032 is child\nkg:4891 is spouse", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?x\",\n    \"WHERE {\",\n    \"  kg:1029 kg:6032 ?y .\",\n    \"  FILTER (NOT EXISTS { ?y kg:6032 [] })\",\n    \"  ?y kg:4891 ?x .\"\n    ]}\n "}
{"question": "Show me all museums in London.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Show me all museums in London.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q838948 ;\", \"# museum\",\n    \"wdt:P131 wd:Q84 .\", \"# located in London\"\n    ]}\n "}
{"question": "Show me all museums in London.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Show me all museums in London.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q33506 is museum\nwdt:P276 is location\nwd:Q84 is London", "response": "{\n  \"query\": [\n    \"SELECT\",\n    \"?item\",\n    \"WHERE\",\n    \"{\",\n    \"?item wdt:P31 wd:Q33506;\",\n    \"?item wdt:P276 wd:Q84.\",\n    \"}\"\n  ]\n}"}
{"question": "Show me all museums in London.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Show me all museums in London.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2426 is instance of\nkg:8333 is museum\nkg:0559 is location\nkg:8155 is London", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?museum\",\n    \"WHERE {\",\n    \"?museum kg:8333 true .\",\n    \"?museum kg:0559 ?location .\",\n    \"?location kg:8155 true .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the tallest player of the Atlanta Falcons?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is the tallest player of the Atlanta Falcons?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?player\",\n    \"WHERE {\",\n    \"?team wdt:P31 wd:Q14596873;\",\n    \"?team wdt:P1448 \\\"Atlanta Falcons\\\";\",\n    \"?player wdt:P54 ?team;\",\n    \"?player wdt:P6 ?height.\",\n    \"FILTER NOT EXISTS { ?otherPlayer wdt:P54 ?team; wdt:P6 ?otherHeight . FILTER (?otherHeight > ?height) }\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the tallest player of the Atlanta Falcons?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is the tallest player of the Atlanta Falcons?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P54 is member of sports team\nwd:Q272059 is Atlanta Falcons\nwdt:P2048 is height", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?player WHERE {\",\n    \"?player wdt:P54 wd:Q272059 ;\",\n    \"          wdt:P2048 ?height .\",\n    \"FILTER NOT EXISTS {\",\n    \"?otherPlayer wdt:P54 wd:Q272059 ;\",\n    \"              wdt:P2048 ?otherHeight .\",\n    \"FILTER (?otherHeight > ?height)\",\n    \"}\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the tallest player of the Atlanta Falcons?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is the tallest player of the Atlanta Falcons?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1796 is member of sports team\nkg:3447 is Atlanta Falcons\nkg:1244 is height", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?player\",\n    \"WHERE {\",\n    \"?player kg:1796 kg:3447 .\",\n    \"?player kg:1244 ?height .\",\n    \"{ SELECT ?player (MAX(?height) AS ?maxHeight) \",\n    \"WHERE { ?player kg:1796 kg:3447 . ?player kg:1244 ?height . }\",\n    \"GROUP BY ?player }\",\n    \"OPTIONAL { ?player kg:1244 ?height . FILTER (?height = ?maxHeight) }\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all writers that won the Nobel Prize in literature.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all writers that won the Nobel Prize in literature.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?writer\",\n    \"WHERE {\",\n    \"?writer wdt:P166 wd:Q38006 .\",\n    \"?writer wdt:P106 wd:Q36180 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all writers that won the Nobel Prize in literature.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all writers that won the Nobel Prize in literature.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P106 is occupation\nwd:Q36180 is writer\nwdt:P166 is award received\nwd:Q37922 is Nobel Prize in Literature", "response": "{\n  \"query\": [\n    \"SELECT ?writer\",\n    \"WHERE {\",\n    \"?writer wdt:P106 wd:Q36180.\",\n    \"?writer wdt:P166 wd:Q37922.\"\n    ]}\n \t\t \t\t    \t  \t   \t\t\t"}
{"question": "Give me all writers that won the Nobel Prize in literature.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all writers that won the Nobel Prize in literature.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3248 is occupation\nkg:6280 is writer\nkg:9080 is award received\nkg:4831 is Nobel Prize in Literature", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?writer\",\n    \"WHERE {\",\n    \"?writer kg:9080 kg:4831 ;\",\n    \"       kg:3248 kg:6280 .\",\n    \"}\"\n  ]\n}"}
{"question": "Show me all basketball players that are higher than 2 meters.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Show me all basketball players that are higher than 2 meters.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P106 wd:Q3665640 ;\", \"# basketball player\",\n    \"      wdt:P2048 ?height .\", \"# height\",\n    \"FILTER (?height > 2)\", \"# filter by height > 2 meters\",\n    \"}\"\n  ]\n}"}
{"question": "Show me all basketball players that are higher than 2 meters.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Show me all basketball players that are higher than 2 meters.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P106 is occupation\nwd:Q3665646 is basketball player\nwdt:P2048 is height", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P106 wd:Q3665646;\",\n    \"?item wdt:P2048 ?height.\",\n    \"FILTER (?height > 2).\",\n    \"}\"\n  ]\n}"}
{"question": "Show me all basketball players that are higher than 2 meters.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Show me all basketball players that are higher than 2 meters.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7450 is occupation\nkg:6446 is basketball player\nkg:6984 is height", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?player\",\n    \"WHERE {\",\n    \"?player kg:7450 kg:6446 ;\",\n    \"       kg:6984 ?height .\",\n    \"FILTER (?height > 2)\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "When was the Statue of Liberty built?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “When was the Statue of Liberty built?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q6888689.\",\n    \"?item wdt:P577 ?inception.\"\n    ]}\n "}
{"question": "When was the Statue of Liberty built?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “When was the Statue of Liberty built?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q9202 is Statue of Liberty\nwdt:P571 is inception", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q9202 AS ?item).\",\n    \"  ?item wdt:P571 ?inception.\",\n    \"}\"\n  ]\n}"}
{"question": "When was the Statue of Liberty built?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “When was the Statue of Liberty built?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9932 is Statue of Liberty\nkg:2835 is inception", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"  kg:9932 kg:2835 ?resource .\",\n    \"}\"\n  ]\n}"}
{"question": "Which states border Illinois?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which states border Illinois?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?state\",\n    \"WHERE {\",\n    \"?state wdt:P47 wd:Q1204.\",\n    \"}\"\n  ]\n}"}
{"question": "Which states border Illinois?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which states border Illinois?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q1204 is Illinois\nwdt:P47 is shares border with", "response": "{\n  \"query\": [\n    \"SELECT ?state\",\n    \"WHERE {\",\n    \"  wd:Q1204 wdt:P47 ?state.\",\n    \"}\"\n  ]\n}"}
{"question": "Which states border Illinois?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which states border Illinois?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0369 is Illinois\nkg:2142 is shares border with", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?state\",\n    \"WHERE {\",\n    \"  ?state kg:2142 kg:0369 .\",\n    \"  FILTER (?state != kg:0369)\",\n    \"}\"\n  ]\n}"}
{"question": "Who developed Minecraft?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who developed Minecraft?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q14827240;\",\n    \"       wdt:P178 wd:Q684.\",\n    \"}\"\n  ]\n}"}
{"question": "Who developed Minecraft?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who developed Minecraft?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q49740 is Minecraft\nwdt:P178 is developer", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?developer\",\n    \"WHERE {\",\n    \"  wd:Q49740 wdt:P178 ?developer .\",\n    \"}\"\n  ]\n}"}
{"question": "Who developed Minecraft?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who developed Minecraft?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5174 is Minecraft\nkg:0620 is developer", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?developer\",\n    \"WHERE {\",\n    \"  kg:5174 kg:0620 ?developer .\",\n    \"}\"\n  ]\n}"}
{"question": "Where did Hillel Slovak die?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Where did Hillel Slovak die?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q1069943 AS ?hillel)\",\n    \"  ?hillel wdt:P20 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "Where did Hillel Slovak die?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Where did Hillel Slovak die?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q186924 is Hillel Slovak\nwdt:P20 is place of death", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q186924 wdt:P20 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "Where did Hillel Slovak die?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Where did Hillel Slovak die?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8632 is Hillel Slovak\nkg:3889 is place of death", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?place\",\n    \"WHERE {\",\n    \"  kg:8632 kg:3889 ?place .\",\n    \"}\"\n  ]\n}"}
{"question": "What movies does Jesse Eisenberg play in?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What movies does Jesse Eisenberg play in?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?movie\",\n    \"WHERE {\",\n    \"?person wdt:P106 wd:Q107270791 .\", \"# actor\",\n    \"?person wdt:P1477 \\\"Jesse Eisenberg\\\" .\", \"# name of the person\",\n    \"?movie wdt:P161 ?person .\", \"# movie starring this person\",\n    \"}\"\n  ]\n}"}
{"question": "What movies does Jesse Eisenberg play in?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What movies does Jesse Eisenberg play in?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P161 is cast member\nwd:Q219512 is Jesse Eisenberg", "response": "{\n  \"query\": [\n    \"SELECT ?movie\",\n    \"WHERE {\",\n    \"  wd:Q219512 wdt:P161 ?movie .\",\n    \"}\"\n  ]\n}"}
{"question": "What movies does Jesse Eisenberg play in?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What movies does Jesse Eisenberg play in?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4329 is cast member\nkg:1690 is Jesse Eisenberg", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?movie\",\n    \"WHERE {\",\n    \"  kg:1690 kg:4329 ?movie .\",\n    \"}\"\n  ]\n}"}
{"question": "Give all swimmers that were born in Moscow.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give all swimmers that were born in Moscow.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?swimmer\",\n    \"WHERE {\",\n    \"?swimmer wdt:P106 wd:Q3977079 ;\", \"# Swimmers (occupation)\",\n    \"wdt:P19 wd:Q649 .\" ,\", # Born in Moscow\"\n    ]}\n "}
{"question": "Give all swimmers that were born in Moscow.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give all swimmers that were born in Moscow.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P106 is occupation\nwd:Q10843402 is swimmer\nwdt:P19 is place of birth\nwd:Q649 is Moscow", "response": "{\n  \"query\": [\n    \"SELECT ?swimmer\",\n    \"WHERE {\",\n    \"?swimmer wdt:P106 wd:Q10843402 ;\",\n    \"         wdt:P19 wd:Q649 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give all swimmers that were born in Moscow.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give all swimmers that were born in Moscow.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5904 is occupation\nkg:1103 is swimmer\nkg:7585 is place of birth\nkg:8931 is Moscow", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"?s kg:5904 kg:1103.\",\n    \"?s kg:7585 kg:8931.\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "Give me all cosmonauts.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all cosmonauts.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"SELECT ?cosmonaut\",\n    \"WHERE {\",\n    \"?cosmonaut wdt:P106 wd:Q8229.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all cosmonauts.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all cosmonauts.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P106 is occupation\nwd:Q11631 is astronaut\nwdt:P27 is country of citizenship\nwd:Q15180 is Soviet Union\nwdt:P27 is country of citizenship\nwd:Q159 is Russia", "response": "{\n  \"query\": [\n    \"SELECT ?cosmonaut\",\n    \"WHERE {\",\n    \"?cosmonaut wdt:P106 wd:Q11631 ;\",\n    \"(wdt:P27 wd:Q15180 || wdt:P27 wd:Q159).}\",\n    \"LIMIT 10000\"\n  ]\n}"}
{"question": "Give me all cosmonauts.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all cosmonauts.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1826 is occupation\nkg:1573 is astronaut\nkg:9428 is country of citizenship\nkg:0187 is Soviet Union\nkg:9428 is country of citizenship\nkg:4328 is Russia", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?cosmonaut\",\n    \"WHERE {\",\n    \"?cosmonaut kg:1826 kg:1573.\",\n    \"?cosmonaut kg:9428 kg:0187.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all Swiss non-profit organizations.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all Swiss non-profit organizations.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q43229 ;\", \"# instance of organization\",\n    \"wdt:P17 wd:Q39 ;\", \"# country Switzerland\",\n    \"wdt:P461 wd:Q48904\" ,\"# non-profit organization\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "Give me all Swiss non-profit organizations.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all Swiss non-profit organizations.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q163740 is nonprofit organization\nwdt:P159 is headquarters location\nwd:Q39 is Switzerland\nwdt:P159 is headquarters location\nwdt:P31 is instance of\nwd:Q70208 is municipality of Switzerland", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q163740 ;\",\n    \"       wdt:P159 wd:Q39 .\"\n    ]}\n "}
{"question": "Give me all Swiss non-profit organizations.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all Swiss non-profit organizations.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0996 is instance of\nkg:6895 is nonprofit organization\nkg:0121 is headquarters location\nkg:3997 is Switzerland\nkg:0121 is headquarters location\nkg:0996 is instance of\nkg:0663 is municipality of Switzerland", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"?s kg:0996 kg:6895 ;\",\n    \"kg:0121 kg:3997 .\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "Which presidents were born in 1945?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which presidents were born in 1945?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q5 ;\", \"# instance of human\",\n    \"      wdt:P106 wd:Q823471 ;\", \"# occupation: politician\",\n    \"      wdt:P39 wd:Q11696 ;\", \"# position held: president\",\n    \"      wdt:P569 ?birth ;\", \"# birth date\",\n    \"      FILTER(YEAR(?birth) = 1945)\",\n    \"}\"\n  ]\n}"}
{"question": "Which presidents were born in 1945?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which presidents were born in 1945?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P39 is position held\nwdt:P279 is subclass of\nwd:Q30461 is president\nwdt:P569 is date of birth", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P39 wd:Q30461;\",\n    \"?item wdt:P569 ?date.\",\n    \"FILTER(YEAR(?date) = 1945)\",\n    \"}\"\n  ]\n}"}
{"question": "Which presidents were born in 1945?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which presidents were born in 1945?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9721 is position held\nkg:7772 is subclass of\nkg:4201 is president\nkg:9072 is date of birth", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?president\",\n    \"WHERE {\",\n    \"?president kg:4201 [] ;\",\n    \"         kg:9072 \\\"1945-01-01\\\"^^xsd:date .\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "What kind of music did Lou Reed play?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What kind of music did Lou Reed play?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?musicGenre\",\n    \"WHERE {\",\n    \"  wd:Q188034 wdt:P136 ?musicGenre .\",\n    \"}\"\n  ]\n}"}
{"question": "What kind of music did Lou Reed play?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What kind of music did Lou Reed play?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q189080 is Lou Reed\nwdt:P136 is genre", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?genre\",\n    \"WHERE {\",\n    \"  wd:Q189080 wdt:P136 ?genre .\",\n    \"}\"\n  ]\n}"}
{"question": "What kind of music did Lou Reed play?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What kind of music did Lou Reed play?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5974 is Lou Reed\nkg:2540 is genre", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?genre\",\n    \"WHERE {\",\n    \"  kg:5974 kg:performs ?music .\",\n    \"  ?music kg:hasGenre ?genre .\",\n    \"  FILTER (?genre = kg:2540)\",\n    \"}\"\n  ]\n}"}
{"question": "Where do the Red Sox play?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Where do the Red Sox play?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q122921 AS ?team).\",\n    \"  ?team wdt:P115 ?item.\",\n    \"}\"\n  ]\n}"}
{"question": "Where do the Red Sox play?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Where do the Red Sox play?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q213959 is Boston Red Sox\nwdt:P115 is home venue", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?venue\",\n    \"WHERE {\",\n    \"  wd:Q213959 wdt:P115 ?venue .\",\n    \"}\"\n  ]\n}"}
{"question": "Where do the Red Sox play?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Where do the Red Sox play?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4308 is Boston Red Sox\nkg:3920 is home venue", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?venue\",\n    \"WHERE {\",\n    \"  kg:4308 kg:3920 ?venue .\",\n    \"}\"\n  ]\n}"}
{"question": "Show a list of soccer clubs that play in the Bundesliga.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Show a list of soccer clubs that play in the Bundesliga.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q476028.\",\n    \"?item wdt:P361 wd:Q6197.\"\n    ]}\n "}
{"question": "Show a list of soccer clubs that play in the Bundesliga.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Show a list of soccer clubs that play in the Bundesliga.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q476028 is association football club\nwdt:P118 is league\nwd:Q82595 is Bundesliga", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q476028.\",\n    \"?item wdt:P118 wd:Q82595.\"\n    ]}\n \t\t \t\t    \t  \t   \t\t\t"}
{"question": "Show a list of soccer clubs that play in the Bundesliga.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Show a list of soccer clubs that play in the Bundesliga.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7599 is instance of\nkg:6882 is association football club\nkg:9691 is league\nkg:5778 is Bundesliga", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?club\",\n    \"WHERE {\",\n    \"?club kg:6882 kg:7599 ;\",\n    \"       kg:9691 kg:5778 .\"\n    ]}\n \t\t\t\t\t  \t\t\t\t\t"}
{"question": "Which bridges cross the Seine?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which bridges cross the Seine?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?bridge\",\n    \"WHERE {\",\n    \"?bridge wdt:P31 wd:Q12280 ;\", \"# bridge is an instance of bridge\",\n    \"wdt:P177 wd:Q90 .\" ,\", # crosses the Seine\"\n    ]}\n "}
{"question": "Which bridges cross the Seine?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which bridges cross the Seine?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q12280 is bridge\nwdt:P177 is crosses\nwd:Q1471 is Seine", "response": "{\n  \"query\": [\n    \"SELECT ?bridge\",\n    \"WHERE {\",\n    \"?bridge wdt:P31 wd:Q12280.\",\n    \"?bridge wdt:P177 wd:Q1471.\"\n    ]}\n "}
{"question": "Which bridges cross the Seine?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which bridges cross the Seine?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5104 is instance of\nkg:3688 is bridge\nkg:6698 is crosses\nkg:3188 is Seine", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?bridge\",\n    \"WHERE {\",\n    \"?bridge kg:3688 .\",\n    \"?bridge kg:6698 kg:3188 .\",\n    \"}\"\n  ]\n}"}
{"question": "How many films did Hal Roach produce?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many films did Hal Roach produce?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?film\",\n    \"WHERE {\",\n    \"  ?film wdt:P162 wd:Q213452.\",\n    \"}\"\n  ]\n}"}
{"question": "How many films did Hal Roach produce?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many films did Hal Roach produce?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P162 is producer\nwd:Q72792 is Hal Roach", "response": "{\n  \"query\": [\n    \"SELECT ?film\",\n    \"WHERE {\",\n    \"  wd:Q72792 wdt:P162 ?film .\",\n    \"}\"\n  ]\n}"}
{"question": "How many films did Hal Roach produce?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many films did Hal Roach produce?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7838 is producer\nkg:2222 is Hal Roach", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?film\",\n    \"WHERE {\",\n    \"  kg:2222 kg:7838 ?film .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all Danish movies.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all Danish movies.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q11424;\",\n    \"       wdt:P577 ?publicationDate;\",\n    \"       wdt:P495 wd:Q35\"\n    ]}\n "}
{"question": "Give me all Danish movies.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all Danish movies.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P279 is subclass of\nwd:Q11424 is film\nwdt:P31 is instance of\nwdt:P495 is country of origin\nwd:Q35 is Denmark", "response": "{\n  \"query\": [\n    \"SELECT\",\n    \"?item\",\n    \"WHERE\",\n    \"{\",\n    \"?item\",\n    \"wdt:P31\",\n    \"wd:Q11424\",\n    \";\",\n    \"wdt:P495\",\n    \"wd:Q35\",\n    \".\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Give me all Danish movies.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all Danish movies.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7611 is subclass of\nkg:0455 is film\nkg:5857 is instance of\nkg:5175 is country of origin\nkg:4426 is Denmark", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?movie\",\n    \"WHERE {\",\n    \"?movie kg:5857 kg:0455 ;\",\n    \"       kg:5175 kg:4426 .\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "What is the most frequent cause of death?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the most frequent cause of death?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q5 ;\",\n    \"       wdt:P509 ?causeOfDeath .\",\n    \"       ?causeOfDeath wdt:P279* wd:Q12096 .\",\n    \"       SERVICE wikibase:label { bd:serviceParam wikibase:language \\\"en\\\" }\",\n    \"} ORDER BY DESC(COUNT(?item)) LIMIT 1\"\n  ]\n}"}
{"question": "What is the most frequent cause of death?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the most frequent cause of death?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P509 is cause of death", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P509 wd:Q845748.\",\n    \"}\"\n  ]\n}"}
{"question": "What is the most frequent cause of death?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the most frequent cause of death?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4613 is cause of death", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?cause_of_death\",\n    \"WHERE {\",\n    \"?cause_of_death kg:4613 ?death .\",\n    \"} ORDER BY DESC(COUNT(?death)) LIMIT 1\"\n  ]\n}"}
{"question": "Who are the four youngest MVP basketball players?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who are the four youngest MVP basketball players?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?player\",\n    \"WHERE {\",\n    \"?player wdt:P106 wd:Q3665646 ;\", \"# basketball player\",\n    \"      wdt:P373 ?name ;\", \"# name of the player\",\n    \"      wdt:P1319 ?award .\", \"# award won (MVP)\",\n    \"FILTER (?award = wd:Q868505) .\", \"# filter for NBA Most Valuable Player award\"\n    ]}\n "}
{"question": "Give me all companies in Munich.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all companies in Munich.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q688151; wdt:P131 wd:Q1731.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all companies in Munich.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all companies in Munich.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P279 is subclass of\nwd:Q4830453 is business\nwdt:P31 is instance of\nwdt:P159 is headquarters location\nwd:Q1726 is Munich", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q4830453;\",\n    \"       wdt:P159 wd:Q1726.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all companies in Munich.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all companies in Munich.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7379 is subclass of\nkg:3056 is business\nkg:3902 is instance of\nkg:9118 is headquarters location\nkg:4859 is Munich", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?company\",\n    \"WHERE {\",\n    \"?company kg:3056 true .\",\n    \"?company kg:9118 kg:4859 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me the capitals of all countries that the Himalayas run through.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me the capitals of all countries that the Himalayas run through.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?capital\",\n    \"WHERE {\",\n    \"  ?country wdt:P361 wd:Q9153;\",\n    \"         wdt:P36 ?capital.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me the capitals of all countries that the Himalayas run through.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me the capitals of all countries that the Himalayas run through.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q5451 is Himalayas\nwdt:P17 is country\nwdt:P36 is capital", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?capital\",\n    \"WHERE {\",\n    \"?country wdt:P31 wd:Q6256 .\",\n    \"?mountain wdt:P31 wd:Q5451 .\",\n    \"?country wdt:P361 ?mountain .\",\n    \"?country wdt:P36 ?capital .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me the capitals of all countries that the Himalayas run through.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me the capitals of all countries that the Himalayas run through.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3281 is Himalayas\nkg:7625 is country\nkg:0169 is capital", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?capital\",\n    \"WHERE {\",\n    \"?country kg:7625 [] .\",\n    \"?mountain kg:3281 [] .\",\n    \"?country kg:location ?mountain .\",\n    \"?country kg:0169 ?capital .\",\n    \"}\"\n  ]\n}"}
{"question": "How many movies did Park Chan-wook direct?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many movies did Park Chan-wook direct?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?movie\",\n    \"WHERE {\",\n    \"  BIND(wd:Q1347938 AS ?director).\",\n    \"  ?movie wdt:P57 ?director.\",\n    \"}\"\n  ]\n}"}
{"question": "How many movies did Park Chan-wook direct?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many movies did Park Chan-wook direct?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P57 is director\nwd:Q315484 is Park Chan-wook", "response": "{\n  \"query\": [\n    \"SELECT ?movie\",\n    \"WHERE {\",\n    \"?movie wdt:P57 wd:Q315484 .\"\n    ]}\n "}
{"question": "How many movies did Park Chan-wook direct?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many movies did Park Chan-wook direct?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6511 is director\nkg:3320 is Park Chan-wook", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?movie\",\n    \"WHERE {\",\n    \"  ?movie kg:6511 kg:3320 .\",\n    \"}\"\n  ]\n}"}
{"question": "How many airlines are there?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many airlines are there?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q46970.\",\n    \"}\"\n  ]\n}"}
{"question": "How many airlines are there?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many airlines are there?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q46970 is airline", "response": "{\n  \"query\": [\n    \"SELECT ?airline\",\n    \"WHERE {\",\n    \"?airline wdt:P31 wd:Q46970.\",\n    \"}\"\n  ]\n}"}
{"question": "How many airlines are there?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many airlines are there?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6911 is instance of\nkg:8786 is airline", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?airline\",\n    \"WHERE {\",\n    \"?airline kg:8786 \\\"true\\\"^^xsd:boolean .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all islands that belong to Japan.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all islands that belong to Japan.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P17 wd:Q17.\",\n    \"?item wdt:P31 wd:Q23442.\"\n    ]}\n "}
{"question": "Give me all islands that belong to Japan.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all islands that belong to Japan.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q23442 is island\nwdt:P17 is country\nwd:Q17 is Japan", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q23442.\",\n    \"?item wdt:P17 wd:Q17.\"\n    ]}\n "}
{"question": "Give me all islands that belong to Japan.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all islands that belong to Japan.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7714 is instance of\nkg:7851 is island\nkg:2897 is country\nkg:2425 is Japan", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?island\",\n    \"WHERE {\",\n    \"?island kg:7714 kg:7851 ;\",\n    \"       kg:2897 kg:2425 .\",\n    \"}\"\n  ]\n}"}
{"question": "How many inhabitants does Maribor have?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many inhabitants does Maribor have?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q3449 AS ?item).\",\n    \"  ?item wdt:P1082 ?inhabitants.\",\n    \"}\"\n  ]\n}"}
{"question": "How many inhabitants does Maribor have?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many inhabitants does Maribor have?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q1010 is Maribor\nwdt:P1082 is population", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q1010 AS ?item).\",\n    \"  ?item wdt:P1082 [] .\",\n    \"}\"\n  ]\n}"}
{"question": "How many inhabitants does Maribor have?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many inhabitants does Maribor have?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8389 is Maribor\nkg:2929 is population", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?inhabitant\",\n    \"WHERE {\",\n    \"  kg:8389 kg:2929 ?inhabitant .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all Apollo 14 astronauts.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all Apollo 14 astronauts.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q5 ;\",\n    \"       wdt:P450 wd:Q186453 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all Apollo 14 astronauts.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all Apollo 14 astronauts.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q178871 is Apollo 14\nwdt:P1029 is crew member(s)", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?astronaut\",\n    \"WHERE {\",\n    \"  wd:Q178871 wdt:P1029 ?astronaut .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all Apollo 14 astronauts.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all Apollo 14 astronauts.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3406 is Apollo 14\nkg:0698 is crew member(s)", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?astronaut\",\n    \"WHERE {\",\n    \"  kg:3406 kg:0698 ?astronaut .\",\n    \"}\"\n  ]\n}"}
{"question": "Which companies have more than 1 million employees?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which companies have more than 1 million employees?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?company\",\n    \"WHERE {\",\n    \"?company wdt:P112  ?number_of_employees .\",\n    \"FILTER (?number_of_employees > 1000000)\",\n    \"}\"\n  ]\n}"}
{"question": "Which companies have more than 1 million employees?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which companies have more than 1 million employees?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P279 is subclass of\nwd:Q4830453 is business\nwdt:P31 is instance of\nwdt:P1128 is employees", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?company\",\n    \"WHERE {\",\n    \"?company wdt:P31 wd:Q4830453;\",\n    \"?company wdt:P1128 ?employees.\",\n    \"FILTER (?employees > 1000000)\",\n    \"}\"\n  ]\n}"}
{"question": "Which companies have more than 1 million employees?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which companies have more than 1 million employees?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4170 is subclass of\nkg:5338 is business\nkg:1104 is instance of\nkg:8891 is employees", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?company\",\n    \"WHERE {\",\n    \"?company kg:1104 kg:5338 .\",\n    \"?company kg:8891 ?employees .\",\n    \"FILTER (?employees > 1000000)\",\n    \"}\"\n  ]\n}"}
{"question": "In which films directed by Garry Marshall was Julia Roberts starring?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “In which films directed by Garry Marshall was Julia Roberts starring?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?film\",\n    \"WHERE {\",\n    \"?film wdt:P57 wd:Q228035.\",\n    \"?film wdt:P161 wd:Q172758.\",\n    \"?film wdt:P57 wd:Q168873.\",\n    \"}\"\n  ]\n}"}
{"question": "In which films directed by Garry Marshall was Julia Roberts starring?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “In which films directed by Garry Marshall was Julia Roberts starring?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q11424 is film\nwdt:P57 is director\nwd:Q315087 is Garry Marshall\nwdt:P161 is cast member\nwd:Q40523 is Julia Roberts", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?film\",\n    \"WHERE {\",\n    \"?film wdt:P31 wd:Q11424;\",\n    \"       wdt:P57 wd:Q315087;\",\n    \"       wdt:P161 wd:Q40523.\",\n    \"}\"\n  ]\n}"}
{"question": "In which films directed by Garry Marshall was Julia Roberts starring?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “In which films directed by Garry Marshall was Julia Roberts starring?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5953 is instance of\nkg:4237 is film\nkg:9816 is director\nkg:6470 is Garry Marshall\nkg:4262 is cast member\nkg:2003 is Julia Roberts", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?film\",\n    \"WHERE {\",\n    \"?film kg:9816 kg:6470 ;\",\n    \"       kg:4237 ?movie ;\",\n    \"       kg:4262 kg:2003 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all soccer clubs in the Premier League.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all soccer clubs in the Premier League.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P1686 wd:Q1857 ;\", \"# Premier League\",\n    \"   wdt:P279 wd:Q476028 .\", \"# soccer club\"\n    ]}\n "}
{"question": "Give me all soccer clubs in the Premier League.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all soccer clubs in the Premier League.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q476028 is association football club\nwdt:P118 is league\nwd:Q9448 is Premier League", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q476028.\",\n    \"?item wdt:P118 wd:Q9448.\"\n    ]}\n \t\t \t\t    \t  \t   \t\t\t"}
{"question": "Give me all soccer clubs in the Premier League.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all soccer clubs in the Premier League.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8917 is instance of\nkg:9198 is association football club\nkg:7069 is league\nkg:5830 is Premier League", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"?s kg:8917 kg:9198 ;\",\n    \"      kg:7069 kg:5830 .\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "What is the highest place of the Urals?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the highest place of the Urals?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q41176 ;\", \"# mountain\",\n    \"wdt:P361 wd:Q2196 ;   # part of the Urals\",\n    \"?p ?value . FILTER (?p = wdt:P2044) . # elevation above sea level\",\n    \"}\"\n  ]\n}"}
{"question": "What is the highest place of the Urals?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the highest place of the Urals?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q35600 is Ural Mountains\nwdt:P610 is highest point", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P361 wd:Q35600.\",\n    \"?item wdt:P610 ?highestPoint.\",\n    \"}\"\n  ]\n}"}
{"question": "What is the highest place of the Urals?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the highest place of the Urals?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4847 is Ural Mountains\nkg:1765 is highest point", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?place\",\n    \"WHERE {\",\n    \"  kg:4847 kg:1765 ?place .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the governor of Wyoming?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is the governor of Wyoming?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P6 wd:Q1219; wdt:P39 wd:Q11696.\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the governor of Wyoming?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is the governor of Wyoming?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q1214 is Wyoming\nwdt:P6 is head of government", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q1214 wdt:P6 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the governor of Wyoming?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is the governor of Wyoming?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1605 is Wyoming\nkg:5742 is head of government", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?governor\",\n    \"WHERE {\",\n    \"  kg:1605 kg:5742 ?governor .\",\n    \"}\"\n  ]\n}"}
{"question": "Where did the architect of the Eiffel Tower study?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Where did the architect of the Eiffel Tower study?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?university\",\n    \"WHERE {\",\n    \"  wd:Q90 wdt:P800 ?architect.\",\n    \"  ?architect wdt:P69 ?university.\"\n    ]}\n                 \t\t"}
{"question": "Where did the architect of the Eiffel Tower study?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Where did the architect of the Eiffel Tower study?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q243 is Eiffel Tower\nwdt:P84 is architect\nwdt:P69 is educated at", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q243 wdt:P84 ?architect.\",\n    \"  ?architect wdt:P69 ?item.\"\n    ]}\n "}
{"question": "Where did the architect of the Eiffel Tower study?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Where did the architect of the Eiffel Tower study?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8697 is Eiffel Tower\nkg:0724 is architect\nkg:7890 is educated at", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?x\",\n    \"WHERE {\",\n    \"  kg:8697 kg:0724 ?y .\",\n    \"  ?y kg:7890 ?x .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all actors who were born in Paris after 1950.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all actors who were born in Paris after 1950.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"?actor wdt:P31 wd:Q5 ;\", \"# actor is a human\",\n    \"      wdt:P106 wd:Q33999 ;\", \"# actor is an actor\",\n    \"      wdt:P19 wd:Q90 ;\", \"# born in Paris\",\n    \"      wdt:P569 ?birthDate .\", \"# get birth date\",\n    \"FILTER (xsd:date(?birthDate) > xsd:date('1950-01-01'))\", \"# filter by birth year\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "Give me all actors who were born in Paris after 1950.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all actors who were born in Paris after 1950.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P106 is occupation\nwd:Q33999 is actor\nwdt:P19 is place of birth\nwd:Q90 is Paris\nwdt:P569 is date of birth", "response": "{\n  \"query\": [\n    \"SELECT\",\n    \"?actor\",\n    \"WHERE\",\n    \"{\",\n    \"?actor wdt:P106 wd:Q33999 ;\",\n    \"       wdt:P19 wd:Q90 ;\",\n    \"       wdt:P569 ?dateOfBirth .\",\n    \"FILTER (YEAR(?dateOfBirth) > 1950)\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all actors who were born in Paris after 1950.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all actors who were born in Paris after 1950.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2117 is occupation\nkg:6645 is actor\nkg:4144 is place of birth\nkg:5863 is Paris\nkg:5702 is date of birth", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"?actor kg:2117 kg:6645 ;\",\n    \"       kg:4144 kg:5863 ;\",\n    \"       kg:5702 ?dob .\",\n    \"FILTER (xsd:integer(?dob) > 1950)\",\n    \"}\"\n  ]\n}"}
{"question": "Which movies star both Liz Taylor and Richard Burton?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which movies star both Liz Taylor and Richard Burton?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P161 wd:Q151973.\", \"# Liz Taylor\",\n    \"?item wdt:P161 wd:Q151308.\", \"# Richard Burton\",\n    \"}\"\n  ]\n}"}
{"question": "Which movies star both Liz Taylor and Richard Burton?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which movies star both Liz Taylor and Richard Burton?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P161 is cast member\nwd:Q34851 is Elizabeth Taylor\nwdt:P161 is cast member\nwd:Q151973 is Richard Burton", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P161 wd:Q34851;\",\n    \"       wdt:P161 wd:Q151973.\",\n    \"}\"\n  ]\n}"}
{"question": "Which movies star both Liz Taylor and Richard Burton?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which movies star both Liz Taylor and Richard Burton?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3549 is cast member\nkg:8585 is Elizabeth Taylor\nkg:3549 is cast member\nkg:7795 is Richard Burton", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?movie\",\n    \"WHERE {\",\n    \"?movie kg:3549 kg:8585 ;\",\n    \"       kg:3549 kg:7795 .\"\n    ]}\n "}
{"question": "Give me all Australian nonprofit organizations.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all Australian nonprofit organizations.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q2385804 ;\", \"# instance of nonprofit organization\",\n    \"      wdt:P17 wd:Q408 .\" ,\"# country Australia\"\n    ]}\n "}
{"question": "Give me all Australian nonprofit organizations.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all Australian nonprofit organizations.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q163740 is nonprofit organization\nwdt:P159 is headquarters location\nwdt:P17 is country\nwd:Q408 is Australia\nwdt:P159 is headquarters location\nwdt:P17 is country\nwdt:P159 is headquarters location\nwd:Q408 is Australia", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q163740;\",\n    \"?item wdt:P159 ?location.\",\n    \"?location wdt:P17 wd:Q408.\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Give me all Australian nonprofit organizations.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all Australian nonprofit organizations.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4777 is instance of\nkg:7142 is nonprofit organization\nkg:9739 is headquarters location\nkg:5338 is country\nkg:0600 is Australia\nkg:9739 is headquarters location\nkg:5338 is country\nkg:9739 is headquarters location\nkg:0600 is Australia", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"?s kg:7142 \\\"true\\\"^^xsd:boolean.\",\n    \"?s kg:9739 ?o.\",\n    \"?o kg:5338 kg:0600.\"\n    ]}\n "}
{"question": "Which pope succeeded John Paul II?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which pope succeeded John Paul II?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q989 ?predecessor wdt:P1566 ?item .\",\n    \"  FILTER(wd:Q989 = wdt:P402 ?predecessor)\",\n    \"}\"\n  ]\n}"}
{"question": "Which pope succeeded John Paul II?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which pope succeeded John Paul II?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q989 is John Paul II\np:P39 is position held\nps:P39 is position held\nwd:Q19546 is pope\npq:P1366 is replaced by", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"PREFIX wd: <http://www.wikidata.org/entity/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q989 p:P39 ?statement .\",\n    \"  ?statement pq:P1366 ?item .\",\n    \"  ?item wdt:P39 wd:Q19546 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which pope succeeded John Paul II?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which pope succeeded John Paul II?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4431 is John Paul II\nkg:3917 is position held\nkg:8695 is position held\nkg:5502 is pope\nkg:5825 is replaced by", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?pope\",\n    \"WHERE {\",\n    \"  kg:4431 kg:5825 ?pope .\",\n    \"  ?pope kg:3917 kg:5502 .\",\n    \"}\"\n  ]\n}"}
{"question": "Who was president of Pakistan in 1978?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who was president of Pakistan in 1978?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P39 wd:Q11544 ;\",\n    \"       wdt:P580 \\\"1978-01-01\\\"^^xsd:date .\",\n    \"FILTER (NOT EXISTS { ?item wdt:P582 ?end && ?end < \\\"1978-12-31\\\"^^xsd:date })\",\n    \"}\"\n  ]\n}"}
{"question": "Who was president of Pakistan in 1978?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who was president of Pakistan in 1978?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P39 is position held\nwd:Q473984 is President of Pakistan\np:P39 is position held\npq:P580 is start time\npq:P582 is end time", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"PREFIX wd: <http://www.wikidata.org/entity/>\",\n    \"PREFIX p: <http://www.wikidata.org/prop/>\",\n    \"PREFIX pq: <http://www.wikidata.org/prop/qualifier/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item p:P39 ?position.\",\n    \"?position ps:P39 wd:Q473984 ;\",\n    \"pq:P580 ?startTime ;\",\n    \"pq:P582 ?endTime.\",\n    \"FILTER (?startTime <= \\\"1978-01-01T00:00:00Z\\\"^^xsd:dateTime && ?endTime >= \\\"1978-01-01T00:00:00Z\\\"^^xsd:dateTime).\",\n    \"}\"\n  ]\n}"}
{"question": "Who was president of Pakistan in 1978?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who was president of Pakistan in 1978?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8206 is position held\nkg:4349 is President of Pakistan\nkg:3509 is position held\nkg:2536 is start time\nkg:0612 is end time", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?president\",\n    \"WHERE {\",\n    \"?position kg:8206 kg:4349 ;\",\n    \"         kg:2536 ?startTime ;\",\n    \"         kg:0612 ?endTime .\",\n    \"FILTER (?startTime <= \\\"1978-12-31\\\"^^xsd:date && ?endTime >= \\\"1978-01-01\\\"^^xsd:date)\",\n    \"?president kg:3509 ?position .\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Who is the owner of Rolls-Royce?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is the owner of Rolls-Royce?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?owner\",\n    \"WHERE {\",\n    \"  wd:Q483595 wdt:P156 ?owner .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the owner of Rolls-Royce?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is the owner of Rolls-Royce?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q243278 is Rolls-Royce\nwdt:P127 is owned by", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?owner\",\n    \"WHERE {\",\n    \"  wd:Q243278 wdt:P127 ?owner .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the owner of Rolls-Royce?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is the owner of Rolls-Royce?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5136 is Rolls-Royce\nkg:4524 is owned by", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?owner\",\n    \"WHERE {\",\n    \"  kg:5136 kg:4524 ?owner .\",\n    \"}\"\n  ]\n}"}
{"question": "How many museums does Paris have?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many museums does Paris have?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q33506;\",\n    \"       wdt:P131 wd:Q90\"\n    ]}\n "}
{"question": "How many museums does Paris have?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many museums does Paris have?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q33506 is museum\nwdt:P131 is located in the administrative territorial entity\nwd:Q90 is Paris", "response": "{\n  \"query\": [\n    \"SELECT ?museum\",\n    \"WHERE {\",\n    \"?museum wdt:P31 wd:Q33506.\",\n    \"?museum wdt:P131 wd:Q90.\"\n    ]}\n "}
{"question": "How many museums does Paris have?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many museums does Paris have?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8603 is instance of\nkg:3705 is museum\nkg:5581 is located in the administrative territorial entity\nkg:2715 is Paris", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?museum\",\n    \"WHERE {\",\n    \"?museum kg:3705 \\\"true\\\"^^xsd:boolean .\",\n    \"?museum kg:5581 kg:2715 .\",\n    \"}\"\n  ]\n}"}
{"question": "Where was JFK assassinated?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Where was JFK assassinated?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q1339 AS ?jfk).\",\n    \"  ?jfk wdt:P20 ?assassinationEvent.\",\n    \"  ?assassinationEvent wdt:P276 ?location.\",\n    \"  BIND(?location AS ?item)\",\n    \"}\"\n  ]\n}"}
{"question": "Where was JFK assassinated?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Where was JFK assassinated?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q9696 is John F. Kennedy\nwdt:P20 is place of death", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q9696 wdt:P20 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "Where was JFK assassinated?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Where was JFK assassinated?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0170 is John F. Kennedy\nkg:4823 is place of death", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?place\",\n    \"WHERE {\",\n    \"  kg:0170 kg:4823 ?place .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all federal chancellors of Germany.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all federal chancellors of Germany.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P39 wd:Q14211.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all federal chancellors of Germany.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all federal chancellors of Germany.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P39 is position held\nwd:Q4970706 is Federal Chancellor of Germany", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P39 wd:Q4970706.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all federal chancellors of Germany.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all federal chancellors of Germany.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0430 is position held\nkg:8057 is Federal Chancellor of Germany", "response": "{\n  \"query\": [\n    \"PREFIX kg: <https://example.org/kg/>\",\n    \"SELECT ?chancellor\",\n    \"WHERE {\",\n    \"?chancellor kg:0430 kg:8057 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which beer originated in Ireland?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which beer originated in Ireland?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q2449794;\", \"# beer\",\n    \"?item wdt:P495 wd:Q27 .\", \"# country of origin = Ireland\"\n    ]}\n "}
{"question": "Which beer originated in Ireland?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which beer originated in Ireland?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q44 is beer\nwd:Q15075508 is beer brand\nwdt:P31 is instance of\nwdt:P17 is country\nwd:Q27 is Republic of Ireland", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"PREFIX wd: <http://www.wikidata.org/entity/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q44 ;\",\n    \"       wdt:P17 wd:Q27 .\"\n    ]}\n "}
{"question": "Which beer originated in Ireland?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which beer originated in Ireland?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6618 is beer\nkg:6574 is beer brand\nkg:0525 is instance of\nkg:3428 is country\nkg:7048 is Republic of Ireland", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?beer\",\n    \"WHERE {\",\n    \"?beer kg:0525 kg:6618 ;\",\n    \"       kg:6574 ?brand .\",\n    \"?brand kg:3428 kg:7048 .\",\n    \"}\"\n  ]\n}"}
{"question": "To which countries does the Himalayan mountain system extend?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “To which countries does the Himalayan mountain system extend?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"  wd:Q35657 wdt:P361 ?mountainRange.\",\n    \"  ?mountainRange wdt:P17 ?country.\",\n    \"}\"\n  ]\n}"}
{"question": "To which countries does the Himalayan mountain system extend?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “To which countries does the Himalayan mountain system extend?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q5451 is Himalayas\nwdt:P17 is country", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"  wd:Q5451 wdt:P54 ?mountainRange.\",\n    \"  ?mountainRange wdt:P17 ?country.\",\n    \"}\"\n  ]\n}"}
{"question": "To which countries does the Himalayan mountain system extend?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “To which countries does the Himalayan mountain system extend?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0335 is Himalayas\nkg:4276 is country", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"  kg:0335 wdt:P276 ?mountainRange.\",\n    \"  ?mountainRange wdt:P17 ?country.\",\n    \"  FILTER (?country = ?s && ?s = kg:4276).\",\n    \"}\"\n  ]\n}"}
{"question": "Which actors were born in Germany?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which actors were born in Germany?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"?actor wdt:P31 wd:Q5 ;\",\n    \"       wdt:P106 wd:Q33999 ;\",\n    \"       wdt:P19 wd:Q183 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which actors were born in Germany?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which actors were born in Germany?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P106 is occupation\nwd:Q10800557 is film actor\nwdt:P19 is place of birth\nwd:Q183 is Germany\nwdt:P19 is place of birth\nwdt:P17 is country\nwd:Q183 is Germany", "response": "{\n  \"query\": [\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"?actor wdt:P106 wd:Q10800557.\",\n    \"?actor wdt:P19 ?birthPlace.\",\n    \"?birthPlace wdt:P17 wd:Q183.\"\n    ]}\n \t\t \t\t    \t  \t   \t\t\t"}
{"question": "Which actors were born in Germany?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which actors were born in Germany?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9522 is occupation\nkg:1808 is film actor\nkg:0224 is place of birth\nkg:5013 is Germany\nkg:0224 is place of birth\nkg:2561 is country\nkg:5013 is Germany", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"?actor kg:9522 kg:1808 ;\",\n    \"       kg:0224 ?birthPlace .\",\n    \"?birthPlace kg:2561 kg:5013 .\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "Who produced the most films?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who produced the most films?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P161 wd:Q201658.\",\n    \"?item wdt:P106/wdt:P279* wd:Q2526255.\",\n    \"}\"\n  ]\n}"}
{"question": "Who produced the most films?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who produced the most films?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q11424 is film\nwdt:P162 is producer", "response": "{\n  \"query\": [\n    \"SELECT ?entity\",\n    \"WHERE {\",\n    \"?film wdt:P31 wd:Q11424.\",\n    \"?entity wdt:P162 ?film.\",\n    \"}\"\n  ]\n}"}
{"question": "Who produced the most films?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who produced the most films?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8519 is instance of\nkg:0983 is film\nkg:9722 is producer", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?producer\",\n    \"WHERE {\",\n    \"?film kg:0983 ?f .\",\n    \"?producer kg:9722 ?film .\",\n    \"} GROUP BY ?producer ORDER BY COUNT(?film) DESC LIMIT 1\"\n  ]\n}"}
{"question": "How many employees does Google have?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many employees does Google have?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  ?item wdt:P112 Q95 .\",\n    \"}\"\n  ]\n}"}
{"question": "How many employees does Google have?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many employees does Google have?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q95 is Google\nwdt:P1128 is employees", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q95 wdt:P1128 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "How many employees does Google have?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many employees does Google have?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1346 is Google\nkg:0226 is employees", "response": "{\n  \"query\": [\n    \"PREFIX kg: <https://kg.example.com/>\",\n    \"SELECT ?employee\",\n    \"WHERE {\",\n    \"  kg:1346 kg:0226 ?employee .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all actors who were born in Berlin.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all actors who were born in Berlin.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"?actor wdt:P31 wd:Q5 ;\", \"# actor is a human\",\n    \"wdt:P106 wd:Q33999 ;\", \"# actor is an actor\",\n    \"wdt:P19 wd:Q64 .\" ,\", # born in Berlin\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "Give me all actors who were born in Berlin.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all actors who were born in Berlin.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P106 is occupation\nwd:Q33999 is actor\nwdt:P19 is place of birth\nwd:Q64 is Berlin", "response": "{\n  \"query\": [\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"?actor wdt:P106 wd:Q33999 ;\",\n    \"         wdt:P19 wd:Q64 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all actors who were born in Berlin.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all actors who were born in Berlin.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5174 is occupation\nkg:4298 is actor\nkg:3614 is place of birth\nkg:5337 is Berlin", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"?actor kg:5174 kg:4298 ;\",\n    \"       kg:3614 kg:5337 .\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "Who created Goofy?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who created Goofy?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?creator\",\n    \"WHERE {\",\n    \"  wd:Q131105 wdt:P162 ?creator .\",\n    \"}\"\n  ]\n}"}
{"question": "Who created Goofy?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who created Goofy?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q111135 is Goofy\nwdt:P170 is creator", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?creator\",\n    \"WHERE {\",\n    \"  wd:Q111135 wdt:P170 ?creator .\",\n    \"}\"\n  ]\n}"}
{"question": "Who created Goofy?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who created Goofy?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9459 is Goofy\nkg:7536 is creator", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?creator\",\n    \"WHERE {\",\n    \"  kg:9459 kg:7536 ?creator .\",\n    \"}\"\n  ]\n}"}
{"question": "When was Alberta admitted as province?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “When was Alberta admitted as province?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q7275 ;\",\n    \"       wdt:P17 wd:Q16 ;\",\n    \"       wdt:P577 ?date .\",\n    \"FILTER (LANGMATCHES(LANG(?itemLabel), 'en'))\",\n    \"}\"\n  ]\n}"}
{"question": "When was Alberta admitted as province?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “When was Alberta admitted as province?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q1951 is Alberta\nwdt:P571 is inception", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q1951 AS ?item).\",\n    \"  ?item wdt:P571 ?inception.\",\n    \"}\"\n  ]\n}"}
{"question": "When was Alberta admitted as province?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “When was Alberta admitted as province?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8461 is Alberta\nkg:3974 is inception", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"  kg:8461 kg:3974 ?resource .\",\n    \"  FILTER(isURI(?resource))\",\n    \"}\"\n  ]\n}"}
{"question": "How many missions does the Soyuz programme have?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many missions does the Soyuz programme have?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?mission\",\n    \"WHERE {\",\n    \"?programme wdt:P279* wd:Q192544;\", \"# Soyuz programme\",\n    \"?programme wdt:P527 ?mission .\", \"# missions\"\n    ]}\n "}
{"question": "How many missions does the Soyuz programme have?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many missions does the Soyuz programme have?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P361 is part of\nwd:Q207329 is Soyuz programme", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?mission\",\n    \"WHERE {\",\n    \"?mission wdt:P361 wd:Q207329 .\"\n    ]}\n "}
{"question": "How many missions does the Soyuz programme have?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many missions does the Soyuz programme have?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4715 is part of\nkg:9205 is Soyuz programme", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?mission\",\n    \"WHERE {\",\n    \"?mission kg:is_part_of kg:9205 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all the TV shows with Neil Patrick Harris.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all the TV shows with Neil Patrick Harris.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P161 wd:Q132916.\",\n    \"?item wdt:P31 wd:Q2119120.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all the TV shows with Neil Patrick Harris.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all the TV shows with Neil Patrick Harris.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P279 is subclass of\nwd:Q15416 is television program\nwdt:P161 is cast member\nwd:Q485310 is Neil Patrick Harris\nwdt:P31 is instance of", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q15416.\",\n    \"?item wdt:P161 wd:Q485310.\"\n    ]}\n "}
{"question": "Give me all the TV shows with Neil Patrick Harris.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all the TV shows with Neil Patrick Harris.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2058 is subclass of\nkg:5497 is television program\nkg:8214 is cast member\nkg:9534 is Neil Patrick Harris\nkg:3632 is instance of", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?tvShow\",\n    \"WHERE {\",\n    \"?tvShow kg:5497 .\",\n    \"?tvShow kg:8214 kg:9534 .\",\n    \"}\"\n  ]\n}"}
{"question": "When were the Hells Angels founded?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “When were the Hells Angels founded?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P112 ?foundingDate.\",\n    \"?item wdt:P407 \\\"en\\\".\",\n    \"?item wdt:P31 wd:Q6896618.\",\n    \"FILTER(CONTAINS(LCASE(?itemLabel), LCASE(\\\"Hells Angels\\\")))\",\n    \"}\"\n  ]\n}"}
{"question": "When were the Hells Angels founded?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “When were the Hells Angels founded?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q622188 is Hells Angels\nwdt:P571 is inception", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q622188 AS ?item).\",\n    \"  ?item wdt:P571 ?inception.\",\n    \"}\"\n  ]\n}"}
{"question": "When were the Hells Angels founded?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “When were the Hells Angels founded?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6885 is Hells Angels\nkg:8843 is inception", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"  kg:6885 kg:8843 ?resource .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the net income of Apple?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the net income of Apple?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P1128 ?netIncome.\",\n    \"?item wdt:P161 \\\"Apple Inc.\\\".\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "What is the net income of Apple?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the net income of Apple?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q312 is Apple\nwdt:P2295 is net profit", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?netIncome\",\n    \"WHERE {\",\n    \"  wd:Q312 wdt:P2295 ?netIncome .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the net income of Apple?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the net income of Apple?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9309 is Apple\nkg:5852 is net profit", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?netIncome\",\n    \"WHERE {\",\n    \"  kg:9309 kg:5852 ?netIncome .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all Swedish holidays.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all Swedish holidays.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q484652.\", \"# instance of holiday\",\n    \"?item wdt:P17 wd:Q34.     # country Sweden\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all Swedish holidays.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all Swedish holidays.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q1401522 is public holidays in Sweden", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q1401522.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all Swedish holidays.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all Swedish holidays.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5437 is instance of\nkg:1431 is public holidays in Sweden", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?holiday\",\n    \"WHERE {\",\n    \"?holiday kg:1431 kg:Sweden .\",\n    \"}\"\n  ]\n}"}
{"question": "In which city was the former Dutch queen Juliana buried?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “In which city was the former Dutch queen Juliana buried?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q5;\",\n    \"?item wdt:P106 wd:Q672838;\", \"# former Dutch queen\",\n    \"?item wdt:P20 ?burialPlace.\",\n    \"?burialPlace wdt:P131 ?city.\"\n    ]}\n "}
{"question": "In which city was the former Dutch queen Juliana buried?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “In which city was the former Dutch queen Juliana buried?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q154946 is Juliana of the Netherlands\nwdt:P119 is place of burial", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q154946 wdt:P119 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "In which city was the former Dutch queen Juliana buried?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “In which city was the former Dutch queen Juliana buried?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7722 is Juliana of the Netherlands\nkg:1563 is place of burial", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?city\",\n    \"WHERE {\",\n    \"  kg:7722 kg:1563 ?city .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all companies in the advertising industry.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all companies in the advertising industry.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?company\",\n    \"WHERE {\",\n    \"?company wdt:P31 wd:Q6881511 .\", \"# instance of company\",\n    \"?company wdt:P452 ?industry .\", \"# operates in industry\",\n    \"?industry wdt:P279* wd:Q8147 .\" ,\"# subclass of advertising\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Give me all companies in the advertising industry.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all companies in the advertising industry.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q4830453 is business\nwdt:P452 is industry\nwd:Q39809 is marketing", "response": "{\n  \"query\": [\n    \"SELECT ?company\",\n    \"WHERE {\",\n    \"?company wdt:P31 wd:Q4830453;\",\n    \"?company wdt:P452/wdt:P31 wd:Q39809.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all companies in the advertising industry.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all companies in the advertising industry.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6959 is instance of\nkg:4237 is business\nkg:0680 is industry\nkg:5161 is marketing", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?company\",\n    \"WHERE {\",\n    \"?company kg:4237 kg:6959 .\",\n    \"?industry kg:0680 \\\"advertising\\\" .\",\n    \"?company kg:5161 ?industry .\",\n    \"}\"\n  ]\n}"}
{"question": "Who killed John Lennon?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who killed John Lennon?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?killer\",\n    \"WHERE {\",\n    \"  wd:Q34858 wdt:P25 ?killer .\",\n    \"}\"\n  ]\n}"}
{"question": "Who killed John Lennon?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who killed John Lennon?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q1203 is John Lennon\nwdt:P157 is killed by", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?killer\",\n    \"WHERE {\",\n    \"  wd:Q1203 wdt:P157 ?killer .\",\n    \"}\"\n  ]\n}"}
{"question": "Who killed John Lennon?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who killed John Lennon?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2917 is John Lennon\nkg:5682 is killed by", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?x\",\n    \"WHERE { kg:2917 kg:5682 ?x . }\"\n  ]\n}"}
{"question": "Which writers studied in Istanbul?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which writers studied in Istanbul?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?writer\",\n    \"WHERE {\",\n    \"?writer wdt:P69 wd:Q380\",\n    \"?writer wdt:P106/wdt:P279* wd:Q36180\"\n    ]}\n "}
{"question": "Which writers studied in Istanbul?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which writers studied in Istanbul?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P106 is occupation\nwd:Q36180 is writer\nwdt:P69 is educated at\nwdt:P131 is located in the administrative territorial entity\nwd:Q406 is Istanbul", "response": "{\n  \"query\": [\n    \"SELECT ?writer\",\n    \"WHERE {\",\n    \"?writer wdt:P106 wd:Q36180.\",\n    \"?writer wdt:P69 ?education.\",\n    \"?education wdt:P131 wd:Q406.\"\n    ]}\n \t\t \t\t    \t  \t   \t\t\t"}
{"question": "Which writers studied in Istanbul?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which writers studied in Istanbul?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5704 is occupation\nkg:0260 is writer\nkg:7091 is educated at\nkg:8154 is located in the administrative territorial entity\nkg:9339 is Istanbul", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?writer\",\n    \"WHERE {\",\n    \"?writer kg:0260 [] .\",\n    \"?writer kg:7091 ?education .\",\n    \"?education kg:8154 ?location .\",\n    \"?location kg:9339 [] .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all Australian metalcore bands.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all Australian metalcore bands.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P136 gd:Q9869823 ;\", \"# metalcore music genre\",\n    \"?item wdt:P495 wd:Q408.\", \"# Australia country\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Give me all Australian metalcore bands.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all Australian metalcore bands.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q215380 is musical group\nwdt:P495 is country of origin\nwd:Q408 is Australia\nwdt:P136 is genre\nwd:Q183862 is metalcore", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q215380;\",\n    \"       wdt:P495 wd:Q408;\",\n    \"       wdt:P136 wd:Q183862.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all Australian metalcore bands.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all Australian metalcore bands.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2057 is instance of\nkg:5941 is musical group\nkg:6595 is country of origin\nkg:4070 is Australia\nkg:5506 is genre\nkg:6845 is metalcore", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?band\",\n    \"WHERE {\",\n    \"?band kg:5941 .\",\n    \"?band kg:6595 kg:4070 .\",\n    \"?band kg:5506 kg:6845 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which countries adopted the Euro?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which countries adopted the Euro?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?country wdt:P38 wd:Q4916 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which countries adopted the Euro?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which countries adopted the Euro?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q6256 is country\nwdt:P38 is currency\nwd:Q4916 is euro", "response": "{\n  \"query\": [\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?country wdt:P31 wd:Q6256.\",\n    \"?country wdt:P38 wd:Q4916.\"\n    ]}\n "}
{"question": "Which countries adopted the Euro?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which countries adopted the Euro?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4911 is instance of\nkg:8401 is country\nkg:8909 is currency\nkg:8143 is euro", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?country kg:8401 .\",\n    \"?country kg:4911 ?x .\",\n    \"?x kg:8909 kg:8143 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all types of eating disorders.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all types of eating disorders.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q11059453 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all types of eating disorders.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all types of eating disorders.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P279 is subclass of\nwd:Q373822 is eating disorder", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P279* wd:Q373822.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all types of eating disorders.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all types of eating disorders.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6601 is subclass of\nkg:7808 is eating disorder", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"?s kg:7808 \\\"true\\\"^^xsd:boolean .\",\n    \"}\"\n  ]\n}"}
{"question": "Was Marc Chagall a jew?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Was Marc Chagall a jew?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q5 .\",\n    \"?item wdt:P227 \\\"Marc Chagall\\\" .\",\n    \"?item wdt:P1401 wd:Q14142 .\",\n    \"}\"\n  ]\n}"}
{"question": "Was Marc Chagall a jew?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Was Marc Chagall a jew?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q93284 is Marc Chagall\nwdt:P172 is ethnic group\nwd:Q7325 is Jewish people", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q93284 wdt:P172 wd:Q7325.\",\n    \"  BIND(wd:Q93284 AS ?item)\",\n    \"}\"\n  ]\n}"}
{"question": "Was Marc Chagall a jew?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Was Marc Chagall a jew?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3776 is Marc Chagall\nkg:7566 is ethnic group\nkg:9691 is Jewish people", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"  kg:3776 kg:7566 ?s .\",\n    \"  FILTER (?s = kg:9691)\",\n    \"}\"\n  ]\n}"}
{"question": "What was Brazil's lowest rank in the FIFA World Ranking?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What was Brazil's lowest rank in the FIFA World Ranking?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P1086 ?rank.\",\n    \"?item wdt:P17 wd:Q155.\",\n    \"FILTER (?rank = (MIN(?rank)))\",\n    \"}\"\n  ]\n}"}
{"question": "What was Brazil's lowest rank in the FIFA World Ranking?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What was Brazil's lowest rank in the FIFA World Ranking?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q83459 is Brazil national football team\np:P1352 is ranking\npq:P459 is determination method\nwd:Q180825 is FIFA World Rankings\nps:P1352 is ranking", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"PREFIX wd: <http://www.wikidata.org/entity/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  ?item wdt:P1352 ?rank .\",\n    \"  ?item wdt:P459 wd:Q180825 .\",\n    \"  ?item wdt:P17 wd:Q838 .\",\n    \"  FILTER NOT EXISTS { ?item wdt:P1352 ?lowerRank . FILTER (?lowerRank < ?rank) }\",\n    \"}\"\n  ]\n}"}
{"question": "What was Brazil's lowest rank in the FIFA World Ranking?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What was Brazil's lowest rank in the FIFA World Ranking?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1028 is Brazil national football team\nkg:5752 is ranking\nkg:7102 is determination method\nkg:1734 is FIFA World Rankings\nkg:0187 is ranking", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?rank\",\n    \"WHERE {\",\n    \"  kg:1028 kg:5752 ?rank .\",\n    \"  ?rank kg:7102 kg:1734 .\",\n    \"  ?rank kg:0187 ?value .\",\n    \"  FILTER NOT EXISTS {\",\n    \"    ?otherRank kg:0187 ?otherValue .\",\n    \"    ?otherRank kg:7102 kg:1734 .\",\n    \"    ?otherRank kg:5752 kg:1028 .\",\n    \"    FILTER (?otherValue < ?value)\",\n    \"  }\",\n    \"}\"\n  ]\n}"}
{"question": "How many films did Leonardo DiCaprio star in?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many films did Leonardo DiCaprio star in?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?film\",\n    \"WHERE {\",\n    \"  ?film wdt:P161 wd:Q359.\",\n    \"}\"\n  ]\n}"}
{"question": "How many films did Leonardo DiCaprio star in?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many films did Leonardo DiCaprio star in?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q11424 is film\nwdt:P161 is cast member\nwd:Q38111 is Leonardo DiCaprio", "response": "{\n  \"query\": [\n    \"SELECT ?film\",\n    \"WHERE {\",\n    \"  wd:Q38111 wdt:P161 ?film.\",\n    \"  ?film wdt:P31 wd:Q11424.\"\n    ]}\n "}
{"question": "How many films did Leonardo DiCaprio star in?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many films did Leonardo DiCaprio star in?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2490 is instance of\nkg:5000 is film\nkg:4337 is cast member\nkg:0455 is Leonardo DiCaprio", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?film\",\n    \"WHERE {\",\n    \"  kg:0455 kg:4337 ?film .\",\n    \"  ?film kg:5000 ?type .\",\n    \"  FILTER (?type = kg:5000)\",\n    \"}\"\n  ]\n}"}
{"question": "Was Margaret Thatcher a chemist?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Was Margaret Thatcher a chemist?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q8927 AS ?item).\",\n    \"  ?item wdt:P106 wd:Q169432.\",\n    \"}\"\n  ]\n}"}
{"question": "Was Margaret Thatcher a chemist?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Was Margaret Thatcher a chemist?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q7416 is Margaret Thatcher\nwdt:P106 is occupation\nwd:Q593644 is chemist", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q7416 AS ?item).\",\n    \"  ?item wdt:P106 wd:Q593644.\",\n    \"}\"\n  ]\n}"}
{"question": "Was Margaret Thatcher a chemist?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Was Margaret Thatcher a chemist?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1806 is Margaret Thatcher\nkg:4297 is occupation\nkg:0500 is chemist", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"  kg:1806 kg:4297 ?o .\",\n    \"  FILTER (?o = kg:0500)\",\n    \"}\"\n  ]\n}"}
{"question": "Which U.S. states are in the same time zone as Utah?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which U.S. states are in the same time zone as Utah?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?state\",\n    \"WHERE {\",\n    \"?state wdt:P31 wd:Q35657 ;\", \"# state of the United States\",\n    \"wdt:P421 ?tz .\", \"# located in time zone\",\n    \"{ SELECT ?tz WHERE { wd:Q11843 wdt:P421 ?tz } }\" ,\", # Utah's time zone\",\n    \"}\"\n  ]\n}"}
{"question": "Which U.S. states are in the same time zone as Utah?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which U.S. states are in the same time zone as Utah?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q829 is Utah\nwdt:P421 is located in time zone\nwdt:P31 is instance of\nwd:Q35657 is U.S. state\nwdt:P421 is located in time zone\nwd:Q829 is Utah", "response": "{\n  \"query\": [\n    \"SELECT ?state\",\n    \"WHERE {\",\n    \"?state wdt:P31 wd:Q35657.\",\n    \"?state wdt:P421 ?tz.\",\n    \"wd:Q829 wdt:P421 ?tz.\",\n    \"}\"\n  ]\n}"}
{"question": "Which U.S. states are in the same time zone as Utah?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which U.S. states are in the same time zone as Utah?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2386 is Utah\nkg:4838 is located in time zone\nkg:9877 is instance of\nkg:7634 is U.S. state\nkg:4838 is located in time zone\nkg:2386 is Utah", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?state\",\n    \"WHERE {\",\n    \"?state kg:9877 kg:7634 .\",\n    \"?state kg:4838 ?tz .\",\n    \"kg:2386 kg:4838 ?tz .\",\n    \"}\"\n  ]\n}"}
{"question": "Which country has the most official languages?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which country has the most official languages?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?country wdt:P37 [] .\", \"# official language\",\n    \"?country wdt:P31 wd:Q6256 .\", \"# instance of country\",\n    \"} GROUP BY ?country ORDER BY (COUNT(?lang) AS ?numLangs) DESC LIMIT 1\"\n  ]\n}"}
{"question": "Which country has the most official languages?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which country has the most official languages?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q6256 is country\nwdt:P37 is official language", "response": "{\n  \"query\": [\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?country wdt:P31 wd:Q6256.\",\n    \"?country wdt:P37 ?language.\",\n    \"}\"\n  ]\n}"}
{"question": "Which country has the most official languages?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which country has the most official languages?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8689 is instance of\nkg:9409 is country\nkg:1656 is official language", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?country kg:9409 .\",\n    \"?country kg:1656 ?language .\",\n    \"}\",\n    \"GROUP BY ?country\",\n    \"ORDER BY COUNT(DISTINCT ?language) DESC\",\n    \"LIMIT 1\"\n  ]\n}"}
{"question": "Which actor played Chewbacca?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which actor played Chewbacca?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"?character wdt:P1441 dbpedia-fr:Chewbacca.\",\n    \"?character wdt:P161 ?actor.\"\n    ]}\n "}
{"question": "Which actor played Chewbacca?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which actor played Chewbacca?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q51803 is Chewbacca\nwdt:P175 is performer", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"  wd:Q51803 wdt:P175 ?actor .\",\n    \"}\"\n  ]\n}"}
{"question": "Which actor played Chewbacca?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which actor played Chewbacca?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5480 is Chewbacca\nkg:2106 is performer", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"  kg:5480 kg:performer ?actor .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all libraries established earlier than 1400.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all libraries established earlier than 1400.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q15632617;\",\n    \"       wdt:P577 ?inception;\",\n    \"       FILTER (YEAR(?inception) < 1400)\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all libraries established earlier than 1400.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all libraries established earlier than 1400.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q7075 is library\nwdt:P571 is inception", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q7075.\",\n    \"?item wdt:P571 ?inception.\",\n    \"FILTER (?inception < \\\"1400-01-01\\\"^^xsd:date).\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all libraries established earlier than 1400.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all libraries established earlier than 1400.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0606 is instance of\nkg:8682 is library\nkg:1036 is inception", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?library\",\n    \"WHERE {\",\n    \"?library kg:0606 kg:8682 .\",\n    \"?library kg:1036 ?inception .\",\n    \"FILTER (?inception < \\\"1400-01-01\\\"^^xsd:date)\",\n    \"}\"\n  ]\n}"}
{"question": "Which programming languages were influenced by Perl?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which programming languages were influenced by Perl?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P211 ?perl.\",\n    \"FILTER(CONTAINS(STR(?perl), \\\"Perl\\\"))\",\n    \"}\"\n  ]\n}"}
{"question": "Which programming languages were influenced by Perl?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which programming languages were influenced by Perl?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q9143 is programming language\nwdt:P737 is influenced by\nwd:Q42478 is Perl", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q9143.\",\n    \"?item wdt:P737 wd:Q42478.\",\n    \"}\"\n  ]\n}"}
{"question": "Which programming languages were influenced by Perl?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which programming languages were influenced by Perl?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1023 is instance of\nkg:5919 is programming language\nkg:3304 is influenced by\nkg:2765 is Perl", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"?resource kg:5919 .\",\n    \"?resource kg:3304 kg:2765 .\",\n    \"}\"\n  ]\n}"}
{"question": "In which U.S. state is Mount McKinley located?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “In which U.S. state is Mount McKinley located?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?state\",\n    \"WHERE {\",\n    \"  wd:Q35160 wdt:P131 ?state .\",\n    \"  FILTER(EXISTS { ?state wdt:P31 wd:Q35657 })\",\n    \"}\"\n  ]\n}"}
{"question": "In which U.S. state is Mount McKinley located?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “In which U.S. state is Mount McKinley located?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q130018 is Denali\nwdt:P131 is located in the administrative territorial entity", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q130018 wdt:P131 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "In which U.S. state is Mount McKinley located?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “In which U.S. state is Mount McKinley located?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5195 is Denali\nkg:2752 is located in the administrative territorial entity", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?state\",\n    \"WHERE {\",\n    \"  kg:5195 kg:2752 ?state .\",\n    \"}\"\n  ]\n}"}
{"question": "What airlines are part of the SkyTeam alliance?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What airlines are part of the SkyTeam alliance?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?airline\",\n    \"WHERE {\",\n    \"?airline wdt:P161 wd:Q131596.\",\n    \"}\"\n  ]\n}"}
{"question": "What airlines are part of the SkyTeam alliance?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What airlines are part of the SkyTeam alliance?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P114 is airline alliance\nwd:Q212282 is SkyTeam", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?airline\",\n    \"WHERE {\",\n    \"?airline wdt:P114 wd:Q212282.\",\n    \"}\"\n  ]\n}"}
{"question": "What airlines are part of the SkyTeam alliance?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What airlines are part of the SkyTeam alliance?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2866 is airline alliance\nkg:2419 is SkyTeam", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?airline\",\n    \"WHERE {\",\n    \"?airline kg:2866 kg:2419 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all Methodist politicians.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all Methodist politicians.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P106 wd:Q82955 ;\", \"# politician\",\n    \"  wdt:P140 wd:Q11005 .   # Methodist\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Give me all Methodist politicians.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all Methodist politicians.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P106 is occupation\nwd:Q82955 is politician\nwdt:P140 is religion or worldview\nwd:Q33203 is Methodism", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P106 wd:Q82955.\",\n    \"?item wdt:P140 wd:Q33203.\"\n    ]}\n \t\t \t\t    \t  \t   \t\t\t"}
{"question": "Give me all Methodist politicians.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all Methodist politicians.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8888 is occupation\nkg:9878 is politician\nkg:3778 is religion or worldview\nkg:3252 is Methodism", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"?s kg:8888 kg:9878 ;\",\n    \"kg:3778 kg:3252 .\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "What other books have been written by the author of The Fault in Our Stars?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What other books have been written by the author of The Fault in Our Stars?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?book\",\n    \"WHERE {\",\n    \"?author wdt:P800 \\\"The Fault in Our Stars\\\".\",\n    \"?author wdt:P50 ?book.\",\n    \"FILTER (?book != wd:Q18545723).\",\n    \"}\"\n  ]\n}"}
{"question": "What other books have been written by the author of The Fault in Our Stars?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What other books have been written by the author of The Fault in Our Stars?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q658375 is The Fault in Our Stars\nwdt:P50 is author\nwdt:P50 is author\nwd:Q658375 is The Fault in Our Stars", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?book\",\n    \"WHERE {\",\n    \"?author wdt:P50 wd:Q658375.\",\n    \"?author wdt:P50 ?book.\",\n    \"FILTER (?book != wd:Q658375).\",\n    \"}\"\n  ]\n}"}
{"question": "What other books have been written by the author of The Fault in Our Stars?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What other books have been written by the author of The Fault in Our Stars?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5896 is The Fault in Our Stars\nkg:1268 is author\nkg:1268 is author\nkg:5896 is The Fault in Our Stars", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?book\",\n    \"WHERE {\",\n    \"  kg:5896 kg:author ?author .\",\n    \"  ?book kg:author ?author .\",\n    \"  FILTER (?book != kg:5896)\",\n    \"}\"\n  ]\n}"}
{"question": "What is the highest mountain?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the highest mountain?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q8502.\",\n    \"?item wdt:P2044 ?elevation.\",\n    \"{ SELECT ?item (MAX(?elevation) AS ?maxElevation)\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q8502.\",\n    \"?item wdt:P2044 ?elevation.\",\n    \"}\",\n    \"} \",\n    \"FILTER (?elevation = ?maxElevation).\",\n    \"}\"\n  ]\n}"}
{"question": "What is the highest mountain?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the highest mountain?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q8502 is mountain\nwdt:P2044 is elevation above sea level", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?mountain\",\n    \"WHERE {\",\n    \"?mountain wdt:P31 wd:Q8502.\",\n    \"?mountain wdt:P2044 ?elevation.\",\n    \"{ SELECT ?mountain (MAX(?elevation) AS ?maxElevation)\",\n    \"WHERE {\",\n    \"?mountain wdt:P31 wd:Q8502.\",\n    \"?mountain wdt:P2044 ?elevation.\",\n    \"}\",\n    \"} \",\n    \"FILTER (?elevation = ?maxElevation).\",\n    \"}\"\n  ]\n  }\n "}
{"question": "What is the highest mountain?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the highest mountain?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1292 is instance of\nkg:3850 is mountain\nkg:9375 is elevation above sea level", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?mountain\",\n    \"WHERE {\",\n    \"?mountain a kg:3850.\",\n    \"?mountain kg:9375 ?elevation.\",\n    \"{ SELECT ?mountain (MAX(?elevation) AS ?maxElevation)\",\n    \"WHERE {\",\n    \"?mountain a kg:3850.\",\n    \"?mountain kg:9375 ?elevation.\",\n    \"}\",\n    \"} \",\n    \"FILTER (?elevation = ?maxElevation).\",\n    \"}\"\n  ]\n}"}
{"question": "Which poet wrote the most books?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which poet wrote the most books?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?poet\",\n    \"WHERE {\",\n    \"?poet wdt:P106 wd:Q36180;\",\n    \"?poet wdt:P800 ?book.\",\n    \"}\"\n  ]\n}"}
{"question": "Which poet wrote the most books?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which poet wrote the most books?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P106 is occupation\nwd:Q49757 is poet\nwdt:P50 is author\nwdt:P31 is instance of\nwd:Q571 is book", "response": "{\n  \"query\": [\n    \"SELECT ?poet\",\n    \"WHERE {\",\n    \"?poet wdt:P106 wd:Q49757.\",\n    \"?book wdt:P31 wd:Q571;\",\n    \"?book wdt:P50 ?poet.\",\n    \"}\"\n  ]\n}"}
{"question": "Which poet wrote the most books?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which poet wrote the most books?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0120 is occupation\nkg:2954 is poet\nkg:1704 is author\nkg:0061 is instance of\nkg:7243 is book", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?poet\",\n    \"WHERE {\",\n    \"?poet kg:0061 kg:2954 .\",\n    \"?poet kg:1704 ?book .\",\n    \"?book kg:0061 kg:7243 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which programming languages influenced Javascript?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which programming languages influenced Javascript?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q864) AS ?javascript .\", \"# Q864 is the Wikidata ID for JavaScript\",\n    \"  ?influencedLanguage wdt:P1269 ?javascript .\", \"# P1269 is 'influenced by'\",\n    \"  ?item wdt:P112 ?influencedLanguage .\", \"# P112 is 'influenced'\"\n    ,\n    \"} LIMIT 100\"\n  ]\n}"}
{"question": "Which programming languages influenced Javascript?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which programming languages influenced Javascript?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q2005 is JavaScript\nwdt:P737 is influenced by", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?influencer\",\n    \"WHERE {\",\n    \"  wd:Q2005 wdt:P737 ?influencer .\",\n    \"}\"\n  ]\n}"}
{"question": "Which programming languages influenced Javascript?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which programming languages influenced Javascript?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5218 is JavaScript\nkg:8409 is influenced by", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?influencer\",\n    \"WHERE {\",\n    \"  kg:5218 kg:8409 ?influencer .\",\n    \"}\"\n  ]\n}"}
{"question": "Which musician wrote the most books?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which musician wrote the most books?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P106 wd:Q639669.\",\n    \"?item wdt:P800 ?book.\",\n    \"}\"\n  ]\n}"}
{"question": "Which musician wrote the most books?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which musician wrote the most books?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P106 is occupation\nwd:Q639669 is musician\nwdt:P31 is instance of\nwd:Q571 is book\nwdt:P50 is author", "response": "{\n  \"query\": [\n    \"SELECT ?musician\",\n    \"WHERE {\",\n    \"?musician wdt:P106 wd:Q639669.\",\n    \"?book wdt:P50 ?musician.\",\n    \"?book wdt:P31 wd:Q571.\",\n    \"}\"\n  ]\n}"}
{"question": "Which musician wrote the most books?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which musician wrote the most books?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4826 is occupation\nkg:0324 is musician\nkg:0683 is instance of\nkg:5954 is book\nkg:5686 is author", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?musician\",\n    \"WHERE {\",\n    \"?musician kg:0683 kg:0324 .\",\n    \"?book kg:5954 ?book .\",\n    \"?musician kg:5686 ?book .\",\n    \"}\"\n  ]\n}"}
{"question": "Which films starring Clint Eastwood did he direct himself?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which films starring Clint Eastwood did he direct himself?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?film\",\n    \"WHERE {\",\n    \"?film wdt:P161 wd:Q48337 .\", \"# Clint Eastwood as actor\",\n    \"?film wdt:P57 wd:Q48337 .\", \"# Clint Eastwood as director\",\n    \"} \"\n  ]\n}"}
{"question": "Which films starring Clint Eastwood did he direct himself?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which films starring Clint Eastwood did he direct himself?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P57 is director\nwd:Q43203 is Clint Eastwood\nwdt:P161 is cast member\nwd:Q43203 is Clint Eastwood", "response": "{\n  \"query\": [\n    \"SELECT ?film\",\n    \"WHERE {\",\n    \"?film wdt:P161 wd:Q43203.\",\n    \"?film wdt:P57 wd:Q43203.\",\n    \"}\"\n  ]\n}"}
{"question": "Which films starring Clint Eastwood did he direct himself?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which films starring Clint Eastwood did he direct himself?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7571 is director\nkg:1404 is Clint Eastwood\nkg:2987 is cast member\nkg:1404 is Clint Eastwood", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?film\",\n    \"WHERE {\",\n    \"?film kg:7571 kg:1404 ;\",\n    \"       kg:2987 kg:1404 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which instruments does Cat Stevens play?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which instruments does Cat Stevens play?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?instrument\",\n    \"WHERE {\",\n    \"  wd:Q187439 wdt:P1303 ?instrument .\",\n    \"}\"\n  ]\n}"}
{"question": "Which instruments does Cat Stevens play?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which instruments does Cat Stevens play?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q154216 is Cat Stevens\nwdt:P1303 is instrument", "response": "{\n  \"query\": [\n    \"SELECT ?instrument\",\n    \"WHERE {\",\n    \"  wd:Q154216 wdt:P1303 ?instrument.\",\n    \"}\"\n  ]\n}"}
{"question": "Which instruments does Cat Stevens play?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which instruments does Cat Stevens play?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9496 is Cat Stevens\nkg:7890 is instrument", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?instrument\",\n    \"WHERE {\",\n    \"  kg:9496 kg:plays ?instrument .\",\n    \"  ?instrument rdf:type kg:7890 .\",\n    \"}\"\n  ]\n}"}
{"question": "How many airlines are members of the Star Alliance?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many airlines are members of the Star Alliance?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?airline\",\n    \"WHERE {\",\n    \"?airline wdt:P161 wd:Q159168\" ,\n    \"}\"\n  ]\n}"}
{"question": "How many airlines are members of the Star Alliance?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many airlines are members of the Star Alliance?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P114 is airline alliance\nwd:Q189709 is Star Alliance", "response": "{\n  \"query\": [\n    \"SELECT ?airline\",\n    \"WHERE {\",\n    \"?airline wdt:P361 wd:Q189709 .\",\n    \"?airline wdt:P31 wd:Q46970 .\",\n    \"}\"\n  ]\n}"}
{"question": "How many airlines are members of the Star Alliance?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many airlines are members of the Star Alliance?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1615 is airline alliance\nkg:9546 is Star Alliance", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?airline\",\n    \"WHERE {\",\n    \"?airline kg:member_of kg:9546 .\",\n    \"?airline rdf:type kg:1615 .\"\n    ]}\n \t\t \t\t    \t  \t   \t\t\t"}
{"question": "Who wrote The Hunger Games?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who wrote The Hunger Games?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?author\",\n    \"WHERE {\",\n    \"  wd:Q2105 wdt:P50 ?author .\",\n    \"}\"\n  ]\n}"}
{"question": "Who wrote The Hunger Games?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who wrote The Hunger Games?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q11679 is The Hunger Games\nwdt:P50 is author", "response": "{\n  \"query\": [\n    \"SELECT ?author\",\n    \"WHERE {\",\n    \"  wd:Q11679 wdt:P50 ?author .\",\n    \"}\"\n  ]\n}"}
{"question": "Who wrote The Hunger Games?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who wrote The Hunger Games?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0284 is The Hunger Games\nkg:4529 is author", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?author\",\n    \"WHERE {\",\n    \"  kg:0284 kg:4529 ?author .\",\n    \"}\"\n  ]\n}"}
{"question": "For which label did Elvis record his first album?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “For which label did Elvis record his first album?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?label\",\n    \"WHERE {\",\n    \"  wd:Q303 ba:P106 wd:Q108589491 .\", \"# Elvis is an instance of singer\",\n    \"  wd:Q303 wdt:P264 ?label .\", \"# recorded for label\",\n    \"  FILTER(NOT EXISTS{wd:Q303 wdt:P577 ?date1 . ?other wdt:P577 ?date2 . FILTER(?date1 > ?date2) . ?other wdt:P264 ?label})\",\n    \"} LIMIT 1\"\n  ]\n}"}
{"question": "For which label did Elvis record his first album?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “For which label did Elvis record his first album?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q59150527 is Elvis Presley's albums in chronological order\nwdt:P527 is has part(s)\nwdt:P577 is publication date\nwdt:P264 is record label", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?label\",\n    \"WHERE {\",\n    \"  BIND(wd:Q59150527 AS ?elvisAlbums)\",\n    \"  ?firstAlbum wdt:P527 ?elvisAlbums.\",\n    \"  ?firstAlbum wdt:P264 ?label.\",\n    \"  OPTIONAL { ?nextAlbum wdt:P577 ?nextDate. }\",\n    \"  FILTER NOT EXISTS {\",\n    \"    ?previousAlbum wdt:P577 ?previousDate.\",\n    \"    ?previousAlbum wdt:P527 ?elvisAlbums.\",\n    \"    ?firstAlbum wdt:P577 ?firstDate.\",\n    \"    FILTER(?previousDate < ?firstDate)\",\n    \"  }\",\n    \"}\"\n  ]\n}"}
{"question": "For which label did Elvis record his first album?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “For which label did Elvis record his first album?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1729 is Elvis Presley's albums in chronological order\nkg:4335 is has part(s)\nkg:9322 is publication date\nkg:4784 is record label", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?label\",\n    \"WHERE {\",\n    \"  ?album kg:4335 ?part .\",\n    \"  ?part kg:9322 ?date .\",\n    \"  ?album kg:4784 ?label .\",\n    \"  FILTER NOT EXISTS {\",\n    \"    ?other_album kg:4335 ?other_part .\",\n    \"    ?other_part kg:9322 ?earlier_date .\",\n    \"    FILTER (?earlier_date < ?date)\",\n    \"  }\",\n    \"}\"\n  ]\n}"}
{"question": "Is Christian Bale starring in Batman Begins?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Is Christian Bale starring in Batman Begins?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P161 wd:Q193436.\",\n    \"?item wdt:P577 ?publicationDate.\",\n    \"FILTER(YEAR(?publicationDate) = 2005).\",\n    \"}\"\n  ]\n}"}
{"question": "Is Christian Bale starring in Batman Begins?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Is Christian Bale starring in Batman Begins?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q166262 is Batman Begins\nwdt:P161 is cast member\nwd:Q45772 is Christian Bale", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q166262 wdt:P161 ?item.\",\n    \"  FILTER(?item = wd:Q45772).\",\n    \"}\"\n  ]\n}"}
{"question": "Is Christian Bale starring in Batman Begins?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Is Christian Bale starring in Batman Begins?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2663 is Batman Begins\nkg:2232 is cast member\nkg:6261 is Christian Bale", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"  kg:6261 kg:2232 ?resource .\",\n    \"  ?resource kg:2232 kg:2663 .\",\n    \"}\"\n  ]\n}"}
{"question": "Where is the residence of the prime minister of Spain?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Where is the residence of the prime minister of Spain?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?residence\",\n    \"WHERE {\",\n    \"  BIND(wd:Q746715 AS ?primeMinister)\",\n    \"  ?primeMinister wdt:P263 ?residence .\",\n    \"}\"\n  ]\n}"}
{"question": "Where is the residence of the prime minister of Spain?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Where is the residence of the prime minister of Spain?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q844587 is Prime Minister of Spain\nwdt:P263 is official residence", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?residence\",\n    \"WHERE {\",\n    \"  wd:Q844587 wdt:P263 ?residence .\",\n    \"}\"\n  ]\n}"}
{"question": "Where is the residence of the prime minister of Spain?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Where is the residence of the prime minister of Spain?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6526 is Prime Minister of Spain\nkg:7770 is official residence", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?residence\",\n    \"WHERE {\",\n    \"  kg:6526 kg:officialResidence ?residence .\",\n    \"  FILTER (?residence = kg:7770)\",\n    \"}\"\n  ]\n}"}
{"question": "Which actor was casted in the most movies?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which actor was casted in the most movies?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"?actor wdt:P106 wd:Q33999.\",\n    \"?movie wdt:P161 ?actor.\",\n    \"}\",\n    \"GROUP BY ?actor\",\n    \"ORDER BY COUNT(?movie) DESC\",\n    \"LIMIT 1\"\n  ]\n}"}
{"question": "Which actor was casted in the most movies?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which actor was casted in the most movies?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P106 is occupation\nwd:Q33999 is actor\nwdt:P161 is cast member", "response": "{\n  \"query\": [\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"?movie wdt:P161 ?actor.\",\n    \"?actor wdt:P106 wd:Q33999.\",\n    \"} GROUP BY ?actor ORDER BY COUNT(DISTINCT ?movie) DESC LIMIT 1\"\n  ]\n}"}
{"question": "Which actor was casted in the most movies?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which actor was casted in the most movies?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0813 is occupation\nkg:4987 is actor\nkg:5950 is cast member", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"?movie kg:5950 ?actor .\",\n    \"?actor kg:0813 kg:4987 .\",\n    \"} GROUP BY ?actor ORDER BY COUNT(DISTINCT ?movie) DESC LIMIT 1\"\n  ]\n}"}
{"question": "Which countries have more than two official languages?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which countries have more than two official languages?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?country wdt:P37 ?language.\",\n    \"{ SELECT ?country (COUNT(?language) AS ?langCount)\",\n    \"WHERE { ?country wdt:P37 ?language. }\",\n    \"GROUP BY ?country HAVING (?langCount > 2)\",\n    \"} \"\n  ]\n}\n "}
{"question": "Which countries have more than two official languages?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which countries have more than two official languages?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q6256 is country\nwdt:P37 is official language", "response": "{\n  \"query\": [\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?country wdt:P31 wd:Q6256.\",\n    \"?country wdt:P37 ?language1.\",\n    \"?country wdt:P37 ?language2.\",\n    \"FILTER (?language1 != ?language2).\",\n    \"}\"\n  ]\n}"}
{"question": "Which countries have more than two official languages?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which countries have more than two official languages?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1484 is instance of\nkg:4940 is country\nkg:4371 is official language", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?country kg:4940 .\",\n    \"?country kg:4371 ?language1.\",\n    \"?country kg:4371 ?language2.\",\n    \"FILTER (?language1 != ?language2)\",\n    \"}\"\n  ]\n}"}
{"question": "Show me all songs from Bruce Springsteen released between 1980 and 1990.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Show me all songs from Bruce Springsteen released between 1980 and 1990.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q2188189 ;\", \"# song\",\n    \"wdt:P86 wd:Q297384 ;\", \"# performed by Bruce Springsteen\",\n    \"FILTER (?releaseYear >= 1980 && ?releaseYear <= 1990)\",\n    \"?item wdt:P577 ?releaseDate .\",\n    \"BIND (YEAR(?releaseDate) AS ?releaseYear)\",\n    \"}\"\n  ]\n}"}
{"question": "Show me all songs from Bruce Springsteen released between 1980 and 1990.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Show me all songs from Bruce Springsteen released between 1980 and 1990.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q7366 is song\nwdt:P577 is publication date\nwdt:P175 is performer\nwd:Q1225 is Bruce Springsteen", "response": "{\n  \"query\": [\n    \"SELECT\",\n    \"?song\",\n    \"WHERE\",\n    \"{\",\n    \"?song wdt:P31 wd:Q7366 ;\",\n    \"       wdt:P577 ?date ;\",\n    \"       wdt:P175 wd:Q1225 .\",\n    \"FILTER(YEAR(?date) >= 1980 && YEAR(?date) <= 1990)\",\n    \"}\"\n  ]\n}"}
{"question": "Show me all songs from Bruce Springsteen released between 1980 and 1990.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Show me all songs from Bruce Springsteen released between 1980 and 1990.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1132 is instance of\nkg:4316 is song\nkg:3779 is publication date\nkg:4925 is performer\nkg:3345 is Bruce Springsteen", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?song\",\n    \"WHERE {\",\n    \"?song kg:4316 ?song .\",\n    \"?song kg:4925 kg:3345 .\",\n    \"?song kg:3779 ?date .\",\n    \"FILTER (?date >= 1980 && ?date <= 1990)\",\n    \"}\"\n  ]\n}"}
{"question": "Which television shows were created by John Cleese?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which television shows were created by John Cleese?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P61 wd:Q193893.\" ,\n    \"?item wdt:P31 wd:Q201658.\" ,\n    \"}\"\n  ]\n}"}
{"question": "Which television shows were created by John Cleese?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which television shows were created by John Cleese?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q5398426 is television series\nwdt:P170 is creator\nwd:Q25014 is John Cleese\nwdt:P170 is creator\nwdt:P527 is has part(s)\nwd:Q25014 is John Cleese", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q5398426;\",\n    \"?item wdt:P170 wd:Q25014.\",\n    \"}\"\n  ]\n}"}
{"question": "Which television shows were created by John Cleese?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which television shows were created by John Cleese?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2623 is instance of\nkg:1395 is television series\nkg:4844 is creator\nkg:3811 is John Cleese\nkg:4844 is creator\nkg:4191 is has part(s)\nkg:3811 is John Cleese", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?tvShow\",\n    \"WHERE {\",\n    \"?tvShow kg:1395 \\\"true\\\"^^xsd:boolean .\",\n    \"?tvShow kg:4844 kg:3811 .\",\n    \"}\"\n  ]\n}"}
{"question": "When did Latvia join the EU?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “When did Latvia join the EU?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P27 wd:Q211.\",\n    \"?item wdt:P463 ?euMembership.\",\n    \"FILTER (NOT EXISTS {?euMembership wdt:P582 []}).\",\n    \"}\"\n  ]\n}"}
{"question": "When did Latvia join the EU?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “When did Latvia join the EU?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q211 is Latvia\np:P463 is member of\nps:P463 is member of\nwd:Q458 is European Union\npq:P580 is start time", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q211 AS ?item).\",\n    \"  ?item p:P463 ?statement.\",\n    \"  ?statement ps:P463 wd:Q458.\",\n    \"  ?statement pq:P580 ?time.\"\n    ]}\n "}
{"question": "When did Latvia join the EU?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “When did Latvia join the EU?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1273 is Latvia\nkg:0998 is member of\nkg:7272 is member of\nkg:6578 is European Union\nkg:8789 is start time", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"  kg:1273 kg:0998 ?resource .\",\n    \"  ?resource kg:7272 kg:6578 .\",\n    \"  ?resource kg:8789 ?startTime .\",\n    \"}\"\n  ]\n}"}
{"question": "Which soccer players were born on Malta?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which soccer players were born on Malta?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P106 wd:Q937857; # soccer player\",\n    \"      wdt:P19 wd:Q233.\" , \"# born on Malta\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "Which soccer players were born on Malta?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which soccer players were born on Malta?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P106 is occupation\nwd:Q937857 is association football player\nwdt:P19 is place of birth\nwdt:P17 is country\nwd:Q233 is Malta", "response": "{\n  \"query\": [\n    \"SELECT\",\n    \"?item\",\n    \"WHERE\",\n    \"{\",\n    \"?item wdt:P106 wd:Q937857;\",\n    \"?item wdt:P19 ?birthPlace.\",\n    \"?birthPlace wdt:P17 wd:Q233.\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Which soccer players were born on Malta?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which soccer players were born on Malta?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5683 is occupation\nkg:5225 is association football player\nkg:7932 is place of birth\nkg:9554 is country\nkg:8345 is Malta", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?player\",\n    \"WHERE {\",\n    \"?player kg:5683 kg:5225 ;\",\n    \"         kg:7932 ?birthPlace .\",\n    \"?birthPlace kg:9554 kg:8345 .\"\n    ]}\n \t\t           \t\t"}
{"question": "How many politicians graduated from Columbia University?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many politicians graduated from Columbia University?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?politician\",\n    \"WHERE {\",\n    \"?politician wdt:P106 wd:Q82955 ;\", \"# politician\",\n    \"wdt:P69 wd:Q190312 .\", \"# educated at Columbia University\",\n    \"}\"\n  ]\n}"}
{"question": "How many politicians graduated from Columbia University?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many politicians graduated from Columbia University?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P106 is occupation\nwd:Q82955 is politician\nwdt:P69 is educated at\nwd:Q49088 is Columbia University", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P106 wd:Q82955;\",\n    \"?item wdt:P69 wd:Q49088.\",\n    \"}\"\n  ]\n}"}
{"question": "How many politicians graduated from Columbia University?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many politicians graduated from Columbia University?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0795 is occupation\nkg:2450 is politician\nkg:5792 is educated at\nkg:4111 is Columbia University", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?politician\",\n    \"WHERE {\",\n    \"?politician kg:0795 kg:2450.\",\n    \"?politician kg:5792 kg:4111.\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "Give me the birthdays of all actors of the television show Charmed.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me the birthdays of all actors of the television show Charmed.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?actor ?birthday\",\n    \"WHERE {\",\n    \"?tvShow wdt:P31 wd:Q1213344;\",\n    \"       wdt:P577 ?title.\",\n    \"FILTER(CONTAINS(lcase(?title), \\\"charmed\\\"))\",\n    \"?actor wdt:P106 wd:Q33999;\",\n    \"      wdt:P161 ?tvShow;\",\n    \"      wdt:P569 ?birthday.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me the birthdays of all actors of the television show Charmed.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me the birthdays of all actors of the television show Charmed.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q162371 is Charmed\nwdt:P161 is cast member\nwdt:P569 is date of birth", "response": "{\n  \"query\": [\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"?tvShow wdt:P161 ?actor.\",\n    \"?tvShow wd:P31/wd:Q5398426 ; wdt:P361 wd:Q162371.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me the birthdays of all actors of the television show Charmed.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me the birthdays of all actors of the television show Charmed.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3786 is Charmed\nkg:4319 is cast member\nkg:9526 is date of birth", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"  ?tvShow kg:3786 \\\"Charmed\\\".\",\n    \"  ?actor kg:4319 ?tvShow.\",\n    \"  ?actor kg:9526 ?birthday.\",\n    \"  FILTER (isLiteral(?birthday))\",\n    \"}\"\n  ]\n}"}
{"question": "Which telecommunications organizations are located in Belgium?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which telecommunications organizations are located in Belgium?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P1366 wd:Q31;\",\n    \"?item wdt:P112 wd:Q878114;\",\n    \"?item wdt:P161 wd:Q741.\",\n    \"}\"\n  ]\n}"}
{"question": "Which telecommunications organizations are located in Belgium?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which telecommunications organizations are located in Belgium?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q43229 is organization\nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q43229 is organization\nwdt:P452 is industry\nwd:Q418 is telecommunication\nwdt:P17 is country\nwd:Q31 is Belgium", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q43229;\",\n    \"       wdt:P452 wd:Q418;\",\n    \"       wdt:P17 wd:Q31.\",\n    \"}\"\n  ]\n}"}
{"question": "Which telecommunications organizations are located in Belgium?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which telecommunications organizations are located in Belgium?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9044 is instance of\nkg:1736 is organization\nkg:9044 is instance of\nkg:7648 is subclass of\nkg:1736 is organization\nkg:4913 is industry\nkg:1531 is telecommunication\nkg:8115 is country\nkg:9094 is Belgium", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?organization\",\n    \"WHERE {\",\n    \"?organization kg:1736 \\\"organization\\\";\",\n    \"       kg:4913 ?industry.\",\n    \"?industry kg:7648 kg:1531;\",\n    \"?organization kg:9044 ?location.\",\n    \"?location kg:8115 kg:9094.\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Give me a list of all lakes in Denmark.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me a list of all lakes in Denmark.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q23397 ;\",\n    \"       wdt:P17 wd:Q35 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me a list of all lakes in Denmark.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me a list of all lakes in Denmark.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q23397 is lake\nwdt:P17 is country\nwd:Q35 is Denmark", "response": "{\n  \"query\": [\n    \"SELECT ?lake\",\n    \"WHERE {\",\n    \"?lake wdt:P31 wd:Q23397.\",\n    \"?lake wdt:P17 wd:Q35.\"\n    ]}\n \t\t \t\t    \t    \t"}
{"question": "Give me a list of all lakes in Denmark.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me a list of all lakes in Denmark.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1420 is instance of\nkg:5783 is lake\nkg:3411 is country\nkg:8492 is Denmark", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?lake\",\n    \"WHERE {\",\n    \"?lake kg:5783 kg:1420 ;\",\n    \"       kg:3411 kg:8492 .\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "How many children does Eddie Murphy have?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many children does Eddie Murphy have?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?child\",\n    \"WHERE {\",\n    \"  wd:Q486397 wdt:P40 ?child .\",\n    \"  ?child wdt:P31 wd:Q5 .\",\n    \"  ?child wdt:P25 wd:Q486397 .\",\n    \"}\"\n  ]\n}"}
{"question": "How many children does Eddie Murphy have?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many children does Eddie Murphy have?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q43874 is Eddie Murphy\nwdt:P40 is child", "response": "{\n  \"query\": [\n    \"SELECT ?child\",\n    \"WHERE {\",\n    \"  wd:Q43874 wdt:P40 ?child .\",\n    \"}\"\n  ]\n}"}
{"question": "How many children does Eddie Murphy have?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many children does Eddie Murphy have?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1572 is Eddie Murphy\nkg:3910 is child", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?child\",\n    \"WHERE {\",\n    \"  kg:1572 kg:3910 ?child .\",\n    \"}\"\n  ]\n}"}
{"question": "Show me all English Gothic buildings in Kent.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Show me all English Gothic buildings in Kent.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q12271 ;\", \"# instance of building\",\n    \"wdt:P131* wd:Q23197 ;\", \"# located in Kent\",\n    \"wdt:P149 wd:Q172193 .\" ,\", # architectural style English Gothic\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "Show me all English Gothic buildings in Kent.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Show me all English Gothic buildings in Kent.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P279 is subclass of\nwd:Q176483 is Gothic architecture\nwdt:P149 is architectural style\nwdt:P7959 is historic county\nwd:Q67479626 is Kent", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P149 wd:Q176483 ;\",\n    \"       wdt:P7959 wd:Q67479626 ;\",\n    \"       wdt:P407 \\\"en\\\" .\",\n    \"}\"\n  ]\n}"}
{"question": "Show me all English Gothic buildings in Kent.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Show me all English Gothic buildings in Kent.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5143 is subclass of\nkg:8740 is Gothic architecture\nkg:5026 is architectural style\nkg:8611 is historic county\nkg:6316 is Kent", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?building\",\n    \"WHERE {\",\n    \"?building kg:5143 kg:8740 ;\",\n    \"         kg:5026 kg:8740 ;\",\n    \"         kg:8611 kg:6316 .\",\n    \"FILTER (langMatches(lang(?building), 'en'))\"\n  ]\n}\n "}
{"question": "In which countries can you pay using the West African CFA franc?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “In which countries can you pay using the West African CFA franc?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?country wdt:P38 wd:Q200124.\",\n    \"}\"\n  ]\n}"}
{"question": "In which countries can you pay using the West African CFA franc?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “In which countries can you pay using the West African CFA franc?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P38 is currency\nwd:Q861690 is West African CFA franc", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?country wdt:P38 wd:Q861690.\",\n    \"}\"\n  ]\n}"}
{"question": "In which countries can you pay using the West African CFA franc?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “In which countries can you pay using the West African CFA franc?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9173 is currency\nkg:9648 is West African CFA franc", "response": "{\n  \"query\": [\n    \"PREFIX kg: <https://example.org/kg/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?country kg:usesCurrency kg:9648 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which holidays are celebrated around the world?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which holidays are celebrated around the world?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q42889.\",\n    \"?item wdt:P17 ?country.\",\n    \"}\"\n  ]\n}"}
{"question": "Which holidays are celebrated around the world?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which holidays are celebrated around the world?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P279 is subclass of\nwd:Q1445650 is holiday\nwdt:P31 is instance of", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q1445650.\",\n    \"}\"\n  ]\n}"}
{"question": "Which holidays are celebrated around the world?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which holidays are celebrated around the world?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2965 is subclass of\nkg:6347 is holiday\nkg:9668 is instance of", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?holiday\",\n    \"WHERE {\",\n    \"?holiday kg:6347 \\\"true\\\"^^xsd:boolean .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the longest river?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the longest river?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q4022.\",\n    \"?item wdt:P2043 ?length.\",\n    \"FILTER NOT EXISTS { ?item2 wdt:P31 wd:Q4022 ; wdt:P2043 ?length2 . FILTER (?length2 > ?length) }\",\n    \"}\"\n  ]\n}"}
{"question": "Which organizations were founded in 1930?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which organizations were founded in 1930?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P577 ?inception.\",\n    \"FILTER(YEAR(?inception) = 1930).\",\n    \"}\"\n  ]\n}"}
{"question": "Which organizations were founded in 1930?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which organizations were founded in 1930?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P571 is inception\nwdt:P31 is instance of\nwdt:P131 is located in the administrative territorial entity\nwd:Q43229 is organization", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q43229;\",\n    \"       wdt:P571 ?inception.\",\n    \"FILTER(YEAR(?inception) = 1930)\",\n    \"}\"\n  ]\n}"}
{"question": "Which organizations were founded in 1930?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which organizations were founded in 1930?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9081 is inception\nkg:5779 is instance of\nkg:9493 is located in the administrative territorial entity\nkg:3317 is organization", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?organization\",\n    \"WHERE {\",\n    \"?organization kg:3317 ?o.\",\n    \"?organization kg:9081 ?inception.\",\n    \"FILTER (?inception = \\\"1930\\\"^^xsd:gYear)\",\n    \"}\"\n  ]\n}"}
{"question": "What is the birth name of Angela Merkel?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the birth name of Angela Merkel?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q5656 AS ?item).\",\n    \"  ?item wdt:P1477 ?birthName.\",\n    \"}\"\n  ]\n}"}
{"question": "What is the birth name of Angela Merkel?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the birth name of Angela Merkel?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q567 is Angela Merkel\nwdt:P1477 is birth name", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q567 wdt:P1477 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the birth name of Angela Merkel?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the birth name of Angela Merkel?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7977 is Angela Merkel\nkg:7333 is birth name", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?o\",\n    \"WHERE {\",\n    \"  kg:7977 kg:7333 ?o .\",\n    \"}\"\n  ]\n}"}
{"question": "Who has Tom Cruise been married to?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who has Tom Cruise been married to?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q3939 AS ?tomCruise).\",\n    \"  ?tomCruise wdt:P26 ?item.\",\n    \"}\"\n  ]\n}"}
{"question": "Who has Tom Cruise been married to?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who has Tom Cruise been married to?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q37079 is Tom Cruise\nwdt:P26 is spouse", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q37079 wdt:P26 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "Who has Tom Cruise been married to?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who has Tom Cruise been married to?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1550 is Tom Cruise\nkg:9184 is spouse", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?spouse\",\n    \"WHERE {\",\n    \"  kg:1550 kg:9184 ?spouse .\",\n    \"}\"\n  ]\n}"}
{"question": "Which weapons did Heckler & Koch develop?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which weapons did Heckler & Koch develop?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q161706 wd:Q156911)\",\n    \"  ?item wdt:P162 wd:Q156911 .\",\n    \"  ?item wdt:P279* wd:Q12704 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which weapons did Heckler & Koch develop?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which weapons did Heckler & Koch develop?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P176 is manufacturer\nwd:Q152815 is Heckler & Koch\nwdt:P279 is subclass of\nwdt:P31 is instance of\nwd:Q15142889 is weapon family", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  ?item wdt:P176 wd:Q152815 .\",\n    \"  ?item wdt:P31/wdt:P279* wd:Q15142889 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which weapons did Heckler & Koch develop?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which weapons did Heckler & Koch develop?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5256 is manufacturer\nkg:4371 is Heckler & Koch\nkg:4662 is subclass of\nkg:6302 is instance of\nkg:5753 is weapon family", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?weapon\",\n    \"WHERE {\",\n    \"  kg:4371 kg:5256 ?manufacturer .\",\n    \"  ?weapon kg:6302 ?manufacturer .\",\n    \"  ?weapon kg:5753 ?family .\",\n    \"  FILTER (?manufacturer = kg:4371)\",\n    \"}\"\n  ]\n}"}
{"question": "What is the smallest city by area in Germany?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the smallest city by area in Germany?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q515; # instance of city\",\n    \"  wdt:P17 wd:Q183; # located in Germany\",\n    \"  wdt:P2046 ?area. # area\",\n    \"}\",\n    \"ORDER BY ?area\",\n    \"LIMIT 1\"\n  ]\n}"}
{"question": "What is the smallest city by area in Germany?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the smallest city by area in Germany?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P17 is country\nwd:Q183 is Germany\nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q515 is city\nwdt:P1082 is population", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?city\",\n    \"WHERE {\",\n    \"?city wdt:P31 wd:Q515 .\", \"# city is instance of city\",\n    \"?city wdt:P17 wd:Q183 .\", \"# city is in Germany\",\n    \"?city wdt:P2046 ?area .\", \"# get area of the city\",\n    \"}\",\n    \"ORDER BY ?area\",\n    \"LIMIT 1\"\n  ]\n}"}
{"question": "What is the smallest city by area in Germany?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the smallest city by area in Germany?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2369 is country\nkg:2341 is Germany\nkg:0421 is instance of\nkg:6572 is subclass of\nkg:7298 is city\nkg:7495 is population", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?city\",\n    \"WHERE {\",\n    \"?city kg:0421 kg:7298 .\",\n    \"?city kg:6572 ?subclass .\",\n    \"?subclass kg:6572 kg:2341 .\",\n    \"?city kg:7495 ?population .\",\n    \"FILTER NOT EXISTS {\",\n    \"?otherCity kg:0421 kg:7298 .\",\n    \"?otherCity kg:6572 ?otherSubclass .\",\n    \"?otherSubclass kg:6572 kg:2341 .\",\n    \"?otherCity kg:7495 ?otherPopulation .\",\n    \"?otherCity kg:2369 ?area .\",\n    \"FILTER (?area < ?population)\",\n    \"}\",\n    \"}\"\n  ]\n}"}
{"question": "What is the ruling party in Lisbon?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the ruling party in Lisbon?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P1376 wd:Q2746.\",\n    \"?item wdt:P31 wd:Q7278.\"\n    ]}\n "}
{"question": "What is the ruling party in Lisbon?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the ruling party in Lisbon?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q5 is human\np:P39 is position held\nps:P39 is position held\nwd:Q43185970 is Mayor of Lisbon\npq:P580 is start time\nwdt:P102 is member of political party", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"PREFIX wd: <http://www.wikidata.org/entity/>\",\n    \"PREFIX p: <http://www.wikidata.org/prop/>\",\n    \"PREFIX ps: <http://www.wikidata.org/prop/statement/>\",\n    \"PREFIX pq: <http://www.wikidata.org/prop/qualifier/>\",\n    \"SELECT ?party\",\n    \"WHERE {\",\n    \"?mayor p:P39 ps:P39 wd:Q43185970;\",\n    \"       wdt:P102 ?party.\",\n    \"}\"\n  ]\n}"}
{"question": "What is the ruling party in Lisbon?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the ruling party in Lisbon?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4480 is instance of\nkg:1012 is human\nkg:3232 is position held\nkg:0592 is position held\nkg:0692 is Mayor of Lisbon\nkg:7694 is start time\nkg:7386 is member of political party", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?party\",\n    \"WHERE {\",\n    \"?mayor kg:0692 kg:4480 .\",\n    \"?mayor kg:3232 ?position .\",\n    \"?mayor kg:7386 ?party .\",\n    \"}\"\n  ]\n}"}
{"question": "How heavy is Jupiter's lightest moon?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How heavy is Jupiter's lightest moon?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?moon ?mass\",\n    \"WHERE {\",\n    \"?jupiter wdt:P397 wd:Q319.\",\n    \"?moon wdt:P31 wd:Q8057;\",\n    \"      wdt:P397 ?jupiter.\",\n    \"?moon wdt:P2067 ?mass.\",\n    \"}\",\n    \"ORDER BY ?mass\",\n    \"LIMIT 1\"\n  ]\n}"}
{"question": "How heavy is Jupiter's lightest moon?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How heavy is Jupiter's lightest moon?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q61702557 is moon of Jupiter\nwdt:P2067 is mass", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?moon WHERE {\",\n    \"?moon wdt:P31 wd:Q2537 ;\", \"# moon of a planet\",\n    \"wdt:P361 wd:Q319.\", \"# part of Jupiter system, i.e., moon of Jupiter\",\n    \"} ORDER BY ASC(?mass)\",\n    \"LIMIT 1\"\n  ]\n}"}
{"question": "How heavy is Jupiter's lightest moon?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How heavy is Jupiter's lightest moon?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8904 is instance of\nkg:5838 is moon of Jupiter\nkg:6958 is mass", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?moon\",\n    \"WHERE {\",\n    \"?moon kg:5838 kg:8904 .\",\n    \"?moon kg:6958 ?mass .\",\n    \"FILTER NOT EXISTS {\",\n    \"?otherMoon kg:5838 kg:8904 .\",\n    \"?otherMoon kg:6958 ?otherMass .\",\n    \"FILTER (?otherMass < ?mass)\",\n    \"}\",\n    \"}\"\n  ]\n}"}
{"question": "How many employees does IBM have?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many employees does IBM have?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q37157 AS ?item).\",\n    \"  ?item wdt:P1128 ?employees.\",\n    \"}\"\n  ]\n}"}
{"question": "How many employees does IBM have?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many employees does IBM have?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q37156 is IBM\nwdt:P1128 is employees", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q37156 AS ?item).\",\n    \"  ?item wdt:P1128 [] .\",\n    \"}\"\n  ]\n}"}
{"question": "How many employees does IBM have?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many employees does IBM have?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1608 is IBM\nkg:9125 is employees", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?employee\",\n    \"WHERE {\",\n    \"  kg:1608 kg:9125 ?employee .\",\n    \"}\"\n  ]\n}"}
{"question": "List all episodes of the first season of the HBO television series The Sopranos!", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “List all episodes of the first season of the HBO television series The Sopranos!” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?episode\",\n    \"WHERE {\",\n    \"?season wdt:P361 wd:Q845290;\", \"# The Sopranos season 1\",\n    \"  wdt:P674 ?episode.\", \"# episodes\"\n    ]}\n "}
{"question": "List all episodes of the first season of the HBO television series The Sopranos!", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “List all episodes of the first season of the HBO television series The Sopranos!” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P4908 is season\nwd:Q5274359 is The Sopranos, season 1", "response": "{\n  \"query\": [\n    \"SELECT ?episode\",\n    \"WHERE {\",\n    \"?season wdt:P31 wd:Q179191 ; wdt:P361 wd:Q5274359.\",\n    \"?episode wdt:P361 ?season.\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "List all episodes of the first season of the HBO television series The Sopranos!", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “List all episodes of the first season of the HBO television series The Sopranos!” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8906 is season\nkg:9900 is The Sopranos, season 1", "response": "{\n  \"query\": [\n    \"PREFIX kg: <https://example.org/kg/>\",\n    \"SELECT ?episode\",\n    \"WHERE {\",\n    \"  kg:9900 kg:hasEpisode ?episode .\",\n    \"}\"\n  ]\n}"}
{"question": "Does the new Battlestar Galactica series have more episodes than the old one?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Does the new Battlestar Galactica series have more episodes than the old one?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?newSeries ?oldSeries\",\n    \"WHERE {\",\n    \"?newSeries wdt:P31 wd:Q121331.\",\n    \"?newSeries wdt:P577 \\\"2004-01-01\\\"^^xsd:date.\",\n    \"?oldSeries wdt:P31 wd:Q121331.\",\n    \"?oldSeries wdt:P577 \\\"1978-01-01\\\"^^xsd:date.\",\n    \"?newSeries wdt:P1113 ?newEpisodes.\",\n    \"?oldSeries wdt:P1113 ?oldEpisodes.\",\n    \"FILTER (?newEpisodes > ?oldEpisodes)\",\n    \"}\"\n  ]\n}"}
{"question": "Does the new Battlestar Galactica series have more episodes than the old one?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Does the new Battlestar Galactica series have more episodes than the old one?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q237072 is Battlestar Galactica\nwdt:P1113 is number of episodes\nwd:Q2367132 is Battlestar Galactica\nwdt:P1113 is number of episodes", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?newSeries ?oldSeries\",\n    \"WHERE {\",\n    \"  BIND(wd:Q237072 AS ?newSeries).\",\n    \"  BIND(wd:Q2367132 AS ?oldSeries).\",\n    \"  ?newSeries wdt:P1113 ?newEpisodes.\",\n    \"  ?oldSeries wdt:P1113 ?oldEpisodes.\",\n    \"  FILTER (?newEpisodes > ?oldEpisodes)\",\n    \"}\"\n  ]\n}"}
{"question": "Does the new Battlestar Galactica series have more episodes than the old one?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Does the new Battlestar Galactica series have more episodes than the old one?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3093 is Battlestar Galactica\nkg:3046 is number of episodes\nkg:8797 is Battlestar Galactica\nkg:3046 is number of episodes", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?newSeries ?oldSeries\",\n    \"WHERE {\",\n    \"  ?newSeries kg:3046 ?newEpisodes .\",\n    \"  ?oldSeries kg:3046 ?oldEpisodes .\",\n    \"  FILTER (?newEpisodes > ?oldEpisodes) .\",\n    \"  ?newSeries rdfs:label \\\"Battlestar Galactica (2004)\\\"@en .\",\n    \"  ?oldSeries rdfs:label \\\"Battlestar Galactica (1978)\\\"@en .\"\n    ]}\n "}
{"question": "Give me all films produced by Hal Roach.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all films produced by Hal Roach.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?film\",\n    \"WHERE {\",\n    \"?film wdt:P162 wd:Q332083.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all films produced by Hal Roach.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all films produced by Hal Roach.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q11424 is film\nwdt:P162 is producer\nwd:Q72792 is Hal Roach", "response": "{\n  \"query\": [\n    \"SELECT ?film\",\n    \"WHERE {\",\n    \"?film wdt:P31 wd:Q11424.\",\n    \"?film wdt:P162 wd:Q72792.\"\n    ]}\n "}
{"question": "Give me all films produced by Hal Roach.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all films produced by Hal Roach.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3534 is instance of\nkg:9460 is film\nkg:9880 is producer\nkg:6697 is Hal Roach", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?film\",\n    \"WHERE {\",\n    \"?film kg:9460 .\",\n    \"?film kg:9880 kg:6697 .\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "Who played Agent Smith in Matrix?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who played Agent Smith in Matrix?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"?agentSmith wdt:P161 ?movie .\",\n    \"?movie wdt:P577 ?releaseDate .\",\n    \"?agentSmith wdt:P175 ?actor .\",\n    \"{ SELECT ?agentSmith WHERE { ?agentSmith wdt:P106 wd:Q339954; wdt:P453 ?agentSmithName FILTER(CONTAINS(str(?agentSmithName), \\\"Agent Smith\\\")) } }\",\n    \"}\"\n  ]\n}"}
{"question": "Who played Agent Smith in Matrix?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who played Agent Smith in Matrix?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q83495 is The Matrix\np:P161 is cast member\npq:P453 is character role\nwd:Q2085488 is Agent Smith\nps:P161 is cast member", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"  wd:Q83495 wdt:P161 ?statement .\",\n    \"  ?statement ps:P161 ?actor .\",\n    \"  ?statement pq:P453 wd:Q2085488 .\",\n    \"}\"\n  ]\n}"}
{"question": "Who played Agent Smith in Matrix?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who played Agent Smith in Matrix?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3604 is The Matrix\nkg:8155 is cast member\nkg:5723 is character role\nkg:2878 is Agent Smith\nkg:8583 is cast member", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"  kg:3604 kg:8155 ?cast .\",\n    \"  ?cast kg:5723 kg:2878 .\",\n    \"  ?cast kg:8583 ?actor .\",\n    \"}\"\n  ]\n}"}
{"question": "Which Greek parties are pro-European?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which Greek parties are pro-European?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q7278 ;\", \"# instance of political party\",\n    \"wdt:P17 wd:Q41 ;\", \"# country Greece\",\n    \"wdt:P112 wd:Q458 .\", \"# pro-European Union\"\n    ]}\n \t\t\t\t\t       \t\t"}
{"question": "Which Greek parties are pro-European?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which Greek parties are pro-European?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q7278 is political party\nwdt:P17 is country\nwd:Q41 is Greece\nwdt:P1142 is political ideology\nwd:Q3781399 is pro-Europeanism", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q7278 ;\",\n    \"       wdt:P17 wd:Q41 ;\",\n    \"       wdt:P1142 wd:Q3781399 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which Greek parties are pro-European?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which Greek parties are pro-European?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5368 is instance of\nkg:9450 is political party\nkg:2994 is country\nkg:5177 is Greece\nkg:0782 is political ideology\nkg:4101 is pro-Europeanism", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?party\",\n    \"WHERE {\",\n    \"?party kg:9450 .\",\n    \"?party kg:0782 kg:4101 .\",\n    \"?party kg:2994 kg:5177 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me a list of all bandleaders that play trumpet.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me a list of all bandleaders that play trumpet.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P106 wd:Q10856578;\",\n    \"       wdt:P1303 wd:Q63549390.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me a list of all bandleaders that play trumpet.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me a list of all bandleaders that play trumpet.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P106 is occupation\nwd:Q806349 is bandleader\nwdt:P1303 is instrument\nwd:Q8338 is trumpet", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P106 wd:Q806349 ;\",\n    \"       wdt:P1303 wd:Q8338 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me a list of all bandleaders that play trumpet.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me a list of all bandleaders that play trumpet.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2407 is occupation\nkg:6431 is bandleader\nkg:4690 is instrument\nkg:9014 is trumpet", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?bandleader\",\n    \"WHERE {\",\n    \"?bandleader kg:6431 \\\"true\\\"^^xsd:boolean.\",\n    \"?bandleader kg:2407 ?occupation.\",\n    \"?bandleader kg:4690 ?instrument.\",\n    \"?instrument kg:9014 \\\"true\\\"^^xsd:boolean.\",\n    \"}\"\n  ]\n}"}
{"question": "What is the second highest mountain on Earth?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the second highest mountain on Earth?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?mountain\",\n    \"WHERE {\",\n    \"?mountain wdt:P31 wd:Q8502 ;\", \"# mountain is an instance of mountain\",\n    \"wdt:P2044 ?elevation .\", \"# elevation above sea level\",\n    \"{ SELECT ?mountain (MAX(?elevation) AS ?maxElevation)\",\n    \"WHERE { ?m wdt:P31 wd:Q8502 ; wdt:P2044 ?elevation . }\",\n    \"} \",\n    \"FILTER (?elevation < ?maxElevation)\", \"# exclude the highest mountain\",\n    \"{ SELECT ?mountain (MAX(?elevation) AS ?secondMaxElevation)\",\n    \"WHERE { ?m wdt:P31 wd:Q8502 ; wdt:P2044 ?elevation .\",\n    \"FILTER (?elevation < ?maxElevation)\",\n    \"} \",\n    \"}\",\n    \"?mountain wdt:P2044 ?secondMaxElevation .\", \"# get the second highest mountain\",\n    \"}\"\n  ]\n}"}
{"question": "What is the second highest mountain on Earth?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the second highest mountain on Earth?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q8502 is mountain\nwdt:P2044 is elevation above sea level\nwdt:P30 is continent\nwdt:P361 is part of\nwd:Q2 is Earth", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?mountain\",\n    \"?mountain wdt:P31 wd:Q8502.\",\n    \"?mountain wdt:P361 wd:Q2.\",\n    \"?mountain wdt:P2044 ?elevation.\",\n    \"FILTER NOT EXISTS {\",\n    \"?otherMountain wdt:P31 wd:Q8502 ;\",\n    \"                  wdt:P361 wd:Q2 ;\",\n    \"                  wdt:P2044 ?otherElevation.\",\n    \"  FILTER (?otherElevation > ?elevation).\",\n    \"}\",\n    \"ORDER BY DESC(?elevation)\",\n    \"LIMIT 1 OFFSET 1\"\n  ]\n}"}
{"question": "What is the second highest mountain on Earth?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the second highest mountain on Earth?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0141 is instance of\nkg:6903 is subclass of\nkg:7953 is mountain\nkg:5532 is elevation above sea level\nkg:4491 is continent\nkg:7525 is part of\nkg:1867 is Earth", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?mountain\",\n    \"WHERE {\",\n    \"?mountain a kg:7953 ;\",\n    \"         kg:5532 ?elevation .\",\n    \"{ SELECT ?mountain (MAX(?elevation) AS ?maxElevation)\",\n    \"   WHERE { ?m a kg:7953 ; kg:5532 ?elevation }\",\n    \" }\",\n    \"FILTER (?elevation < ?maxElevation)\",\n    \"OPTIONAL { ?mountain kg:7525 ?continent .\",\n    \"           ?continent kg:4491 kg:1867 .\",\n    \"         }\",\n    \"}\",\n    \"ORDER BY DESC(?elevation)\",\n    \"LIMIT 1\"\n  ]\n}"}
{"question": "Is Egypts largest city also its capital?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Is Egypts largest city also its capital?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?city\",\n    \"WHERE {\",\n    \"?country wdt:P31 wd:Q30; wdt:P36 ?capital.\",\n    \"?city wdt:P31 wd:Q515; wdt:P17 ?country.\",\n    \"?city wdt:P1082 ?population.\",\n    \"{ SELECT ?maxCity (MAX(?population) AS ?maxPopulation)\",\n    \"WHERE {\",\n    \"?city wdt:P31 wd:Q515; wdt:P17 ?country; wdt:P1082 ?population.\",\n    \"}\",\n    \"} \",\n    \"FILTER (?city = ?maxCity).\",\n    \"FILTER (?capital = ?city).\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Is Egypts largest city also its capital?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Is Egypts largest city also its capital?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q515 is city\nwdt:P17 is country\nwd:Q79 is Egypt\nwdt:P1082 is population\nwd:Q79 is Egypt\nwdt:P36 is capital", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?city\",\n    \"WHERE {\",\n    \"?city wdt:P31 wd:Q515 .\",\n    \"?city wdt:P17 wd:Q79 .\",\n    \"{ SELECT ?maxCity (MAX(?population) AS ?maxPopulation)\",\n    \"WHERE {\",\n    \"?city wdt:P31 wd:Q515 .\",\n    \"?city wdt:P17 wd:Q79 .\",\n    \"?city wdt:P1082 ?population .\",\n    \"}\",\n    \"} \",\n    \"OPTIONAL { ?capital wdt:P36 wd:Q79 . }\",\n    \"?maxCity wdt:P1082 ?maxPopulation .\",\n    \"FILTER (?maxCity = ?city || ?capital = ?maxCity)\",\n    \"}\"\n  ]\n  }\n "}
{"question": "Is Egypts largest city also its capital?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Is Egypts largest city also its capital?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9757 is instance of\nkg:5282 is city\nkg:2922 is country\nkg:1631 is Egypt\nkg:6034 is population\nkg:1631 is Egypt\nkg:6024 is capital", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?city\",\n    \"WHERE {\",\n    \"  ?country kg:2922 kg:1631 .\",\n    \"  ?capital kg:6024 ?country .\",\n    \"  ?largestCity kg:6034 ?population .\",\n    \"  FILTER NOT EXISTS { ?otherCity kg:6034 ?otherPopulation . FILTER (?otherPopulation > ?population) }\",\n    \"  FILTER (?city = ?capital)\",\n    \"  ?city kg:5282 []\"\n    ]}\n \t\t \t\t    \t  \t   \t\t\t"}
{"question": "Which rockets were launched from Baikonur?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which rockets were launched from Baikonur?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q44288 ;\",\n    \"       wdt:P540 wd:Q1156 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which rockets were launched from Baikonur?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which rockets were launched from Baikonur?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P279 is subclass of\nwd:Q41291 is rocket\nwdt:P1427 is start point\nwd:Q177477 is Baikonur Cosmodrome", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31/wdt:P279* wd:Q41291;\",\n    \"?item wdt:P1427 wd:Q177477.\",\n    \"}\"\n  ]\n}"}
{"question": "Which rockets were launched from Baikonur?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which rockets were launched from Baikonur?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9918 is subclass of\nkg:8403 is rocket\nkg:3908 is start point\nkg:9674 is Baikonur Cosmodrome", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?rocket\",\n    \"WHERE {\",\n    \"?rocket kg:9918 kg:8403 ;\",\n    \"       kg:3908 kg:9674 .\",\n    \"}\"\n  ]\n}"}
{"question": "How many programming languages are there?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many programming languages are there?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q9143.\",\n    \"}\"\n  ]\n}"}
{"question": "How many programming languages are there?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many programming languages are there?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q9143 is programming language", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q9143.\",\n    \"}\"\n  ]\n}"}
{"question": "How many programming languages are there?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many programming languages are there?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1662 is instance of\nkg:0743 is subclass of\nkg:6439 is programming language", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"?s kg:6439 ?o .\",\n    \"}\"\n  ]\n}"}
{"question": "Which Chess players died in the same place they were born in?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which Chess players died in the same place they were born in?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P106 wd:Q10856970;\", \"# Chess player\",\n    \"?item wdt:P19 ?birthPlace;\", \"# birth place\",\n    \"?item wdt:P20 ?deathPlace.\", \"# death place\",\n    \"FILTER (?birthPlace = ?deathPlace)\",\n    \"}\"\n  ]\n}"}
{"question": "Which Chess players died in the same place they were born in?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which Chess players died in the same place they were born in?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P19 is place of birth\nwdt:P20 is place of death\nwdt:P106 is occupation\nwdt:P279 is subclass of\nwd:Q10873124 is chess player", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P106 wd:Q10873124;\",\n    \"      wdt:P19 ?birthPlace;\",\n    \"      wdt:P20 ?deathPlace.\",\n    \"FILTER (?birthPlace = ?deathPlace)\",\n    \"}\"\n  ]\n}"}
{"question": "Which Chess players died in the same place they were born in?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which Chess players died in the same place they were born in?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3982 is place of birth\nkg:3798 is place of death\nkg:1280 is occupation\nkg:0314 is subclass of\nkg:0871 is chess player", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"?s kg:0871 ?o .\",\n    \"?s kg:3982 ?birthPlace .\",\n    \"?s kg:3798 ?deathPlace .\",\n    \"FILTER (?birthPlace = ?deathPlace)\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the owner of Facebook?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is the owner of Facebook?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P112 jdv:L2849.\",\n    \"?item wdt:P31 wd:Q5.\",\n    \"?item wdt:P361 wd:Q458.\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Who is the owner of Facebook?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is the owner of Facebook?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q380 is Meta Platforms\nwdt:P127 is owned by", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?owner\",\n    \"WHERE {\",\n    \"  wd:Q380 wdt:P127 ?owner .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the owner of Facebook?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is the owner of Facebook?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8912 is Meta Platforms\nkg:3251 is owned by", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?owner\",\n    \"WHERE {\",\n    \"  kg:8912 kg:3251 ?owner .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all movies with Tom Cruise.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all movies with Tom Cruise.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P161 wd:Q37049.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all movies with Tom Cruise.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all movies with Tom Cruise.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P161 is cast member\nwd:Q37079 is Tom Cruise", "response": "{\n  \"query\": [\n    \"SELECT ?movie\",\n    \"WHERE {\",\n    \"?movie wdt:P161 wd:Q37079 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all movies with Tom Cruise.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all movies with Tom Cruise.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4878 is cast member\nkg:0773 is Tom Cruise", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?movie\",\n    \"WHERE {\",\n    \"?movie kg:4878 kg:0773 .\",\n    \"}\"\n  ]\n}"}
{"question": "In which U.S. state is Fort Knox located?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “In which U.S. state is Fort Knox located?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?state\",\n    \"WHERE {\",\n    \"  wd:Q18657 wdt:P131 ?state .\",\n    \"  ?state wdt:P31 wd:Q35657 .\",\n    \"}\"\n  ]\n}"}
{"question": "In which U.S. state is Fort Knox located?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “In which U.S. state is Fort Knox located?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q983650 is Fort Knox\nwdt:P131 is located in the administrative territorial entity\nwdt:P31 is instance of\nwd:Q35657 is U.S. state", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q983650 wdt:P131 ?item .\",\n    \"  ?item wdt:P31 wd:Q35657 .\",\n    \"}\"\n  ]\n}"}
{"question": "In which U.S. state is Fort Knox located?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “In which U.S. state is Fort Knox located?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2138 is Fort Knox\nkg:3236 is located in the administrative territorial entity\nkg:5211 is instance of\nkg:3368 is U.S. state", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?state\",\n    \"WHERE {\",\n    \"  kg:2138 kg:3236 ?state .\",\n    \"  ?state kg:5211 kg:3368 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which mountains are higher than the Nanga Parbat?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which mountains are higher than the Nanga Parbat?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?mountain\",\n    \"?mountain wdt:P31 wd:Q8502.\",\n    \"?mountain wdt:P2044 ?elevation.\",\n    \"FILTER (?elevation > 8126).\"\n  ]\n  }\n "}
{"question": "Give me all B-sides of the Ramones.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all B-sides of the Ramones.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q21198398 .\", \"# B-side\",\n    \"?item wdt:P175 wd:Q48282 .\" , \"# by the Ramones\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Give me all B-sides of the Ramones.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all B-sides of the Ramones.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P175 is performer\nwd:Q483407 is Ramones\np:P1433 is published in\npq:P2868 is subject has role\nwd:Q13432985 is B-side", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"PREFIX wd: <http://www.wikidata.org/entity/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P175 wd:Q483407;\",\n    \"       wdt:P1433 ?publication;\",\n    \"       p:P2868 ?statement;\",\n    \"       ?statement pq:P2868 wd:Q13432985.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all B-sides of the Ramones.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all B-sides of the Ramones.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1681 is performer\nkg:6316 is Ramones\nkg:4288 is published in\nkg:4608 is subject has role\nkg:0022 is B-side", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"?track kg:0022 \\\"B-side\\\" ;\",\n    \"       kg:1681 kg:6316 ;\",\n    \"       kg:4608 ?role .\",\n    \"}\"\n  ]\n}"}
{"question": "When was Olof Palme shot?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “When was Olof Palme shot?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q5;\",\n    \"?item wdt:P106 wd:Q2988157;\",\n    \"?item wdt:P27 wd:Q34;\",\n    \"?item wdt:P569 ?birthDate;\",\n    \"?item wdt:P570 ?deathDate.\",\n    \"FILTER (?deathDate = \\\"1986-02-28\\\"^^xsd:date).\",\n    \"}\"\n  ]\n}"}
{"question": "When was Olof Palme shot?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “When was Olof Palme shot?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q53713 is Olof Palme\np:P570 is date of death", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q53713 AS ?item).\",\n    \"  ?item wdt:P570 ?date.\",\n    \"}\"\n  ]\n}"}
{"question": "When was Olof Palme shot?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “When was Olof Palme shot?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7630 is Olof Palme\nkg:4997 is date of death", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?event\",\n    \"WHERE {\",\n    \"  kg:7630 kg:deathEvent ?event .\",\n    \"  ?event kg:dateOfDeath ?date .\",\n    \"  FILTER (?date = kg:4997)\",\n    \"}\"\n  ]\n}"}
{"question": "List the seven kings of Rome.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “List the seven kings of Rome.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q11628;\",\n    \"       wdt:P39 wd:Q712215;\",\n    \"       wdt:P1082 ?number.\",\n    \"FILTER (?number = 1 || ?number = 2 || ?number = 3 || ?number = 4 || ?number = 5 || ?number = 6 || ?number = 7)\",\n    \"}\"\n  ]\n}"}
{"question": "List the seven kings of Rome.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “List the seven kings of Rome.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P39 is position held\nwd:Q55375123 is King of Rome", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P39 wd:Q55375123.\",\n    \"}\"\n  ]\n}"}
{"question": "List the seven kings of Rome.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “List the seven kings of Rome.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9266 is position held\nkg:5425 is King of Rome", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?king\",\n    \"WHERE {\",\n    \"?king kg:5425 kg:9266 .\",\n    \"FILTER (NOT EXISTS { ?king kg:9266 ?otherPosition . FILTER (?otherPosition != kg:9266) })\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all people that were born in Vienna and died in Berlin.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all people that were born in Vienna and died in Berlin.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P19 wd:Q1741 .\", \"# born in Vienna\",\n    \"?item wdt:P20 wd:Q64 .\", \"# died in Berlin\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all people that were born in Vienna and died in Berlin.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all people that were born in Vienna and died in Berlin.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P19 is place of birth\nwdt:P131 is located in the administrative territorial entity\nwd:Q1741 is Vienna\nwdt:P20 is place of death\nwd:Q64 is Berlin\nwdt:P20 is place of death\nwdt:P131 is located in the administrative territorial entity\nwd:Q64 is Berlin\nwdt:P19 is place of birth\nwd:Q1741 is Vienna\nwdt:P19 is place of birth\nwdt:P131 is located in the administrative territorial entity\nwd:Q1741 is Vienna\nwdt:P20 is place of death\nwdt:P131 is located in the administrative territorial entity\nwd:Q64 is Berlin", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P19 wd:Q1741.\",\n    \"?item wdt:P20 wd:Q64.\"\n    ]}\n \t\t \t\t    \t  \t   \t\t\t"}
{"question": "Give me all people that were born in Vienna and died in Berlin.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all people that were born in Vienna and died in Berlin.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6565 is place of birth\nkg:4988 is located in the administrative territorial entity\nkg:5207 is Vienna\nkg:4789 is place of death\nkg:4248 is Berlin\nkg:4789 is place of death\nkg:4988 is located in the administrative territorial entity\nkg:4248 is Berlin\nkg:6565 is place of birth\nkg:5207 is Vienna\nkg:6565 is place of birth\nkg:4988 is located in the administrative territorial entity\nkg:5207 is Vienna\nkg:4789 is place of death\nkg:4988 is located in the administrative territorial entity\nkg:4248 is Berlin", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?person\",\n    \"WHERE {\",\n    \"?person kg:6565 kg:5207 ;\",\n    \"         kg:4789 kg:4248 .\",\n    \"}\"\n  ]\n}"}
{"question": "Is Darth Vader Luke’s father?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Is Darth Vader Luke’s father?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?father\",\n    \"WHERE {\",\n    \"  wd:Q215627 p:P25 ?statement.\",\n    \"  ?statement ps:P25 wd:Q130480.\",\n    \"  ?statement p:P22 ?father.\"\n    ]}\n "}
{"question": "Is Darth Vader Luke’s father?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Is Darth Vader Luke’s father?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q12206942 is Darth Vader\nwdt:P40 is child\nwd:Q51746 is Luke Skywalker", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?father\",\n    \"WHERE {\",\n    \"  wd:Q51746 wdt:P40 ?father .\",\n    \"  FILTER (?father = wd:Q12206942)\",\n    \"}\"\n  ]\n}"}
{"question": "Is Darth Vader Luke’s father?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Is Darth Vader Luke’s father?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1984 is Darth Vader\nkg:1692 is child\nkg:5502 is Luke Skywalker", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"  ?s kg:1692 kg:1984 .\",\n    \"  ?s kg:1692 ?o .\",\n    \"  FILTER (?o = kg:5502)\",\n    \"}\"\n  ]\n}"}
{"question": "Show me all the breweries in Australia.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Show me all the breweries in Australia.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q1780614 ;\", \"# brewery\",\n    \"wdt:P17 wd:Q408 .\" ,\"# Australia\"\n    ]}\n "}
{"question": "Show me all the breweries in Australia.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Show me all the breweries in Australia.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q131734 is brewery\nwdt:P17 is country\nwd:Q408 is Australia", "response": "{\n  \"query\": [\n    \"SELECT\",\n    \"?brewery\",\n    \"WHERE\",\n    \"{\",\n    \"?brewery wdt:P31 wd:Q131734.\",\n    \"?brewery wdt:P17 wd:Q408.\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Show me all the breweries in Australia.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Show me all the breweries in Australia.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2155 is instance of\nkg:5909 is brewery\nkg:1368 is country\nkg:6518 is Australia", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?brewery\",\n    \"WHERE {\",\n    \"?brewery kg:2155 kg:5909 ;\",\n    \"       kg:1368 kg:6518 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all films produced by Steven Spielberg with a budget of at least $80 million.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all films produced by Steven Spielberg with a budget of at least $80 million.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?film\",\n    \"WHERE {\",\n    \"?film wdt:P161 wd:Q9073 ;\", \"# Steven Spielberg as producer\",\n    \"      wdt:P2130 ?budget .\", \"# budget statement\",\n    \"FILTER (?budget >= 80) .\", \"# filter for at least $80 million\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Give me all films produced by Steven Spielberg with a budget of at least $80 million.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all films produced by Steven Spielberg with a budget of at least $80 million.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P162 is producer\nwd:Q8877 is Steven Spielberg\nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q11424 is film\nwdt:P2130 is cost", "response": "{\n  \"query\": [\n    \"SELECT ?film\",\n    \"WHERE {\",\n    \"?film wdt:P162 wd:Q8877;\",\n    \"       wdt:P31 wd:Q11424;\",\n    \"       wdt:P2130 ?cost.\",\n    \"FILTER (?cost >= 80e6)\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all films produced by Steven Spielberg with a budget of at least $80 million.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all films produced by Steven Spielberg with a budget of at least $80 million.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2377 is producer\nkg:7786 is Steven Spielberg\nkg:2955 is instance of\nkg:5774 is subclass of\nkg:1418 is film\nkg:0495 is cost", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?film\",\n    \"WHERE {\",\n    \"?film kg:2955 kg:1418 .\",\n    \"?film kg:2377 kg:7786 .\",\n    \"?film kg:0495 ?cost .\",\n    \"FILTER (?cost >= 80) .\"\n    ]}\n \t\t \t\t    \t  \t   \t\t\t"}
{"question": "Give me all soccer clubs in Spain.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all soccer clubs in Spain.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q476028.\",\n    \"?item wdt:P17 wd:Q29.\"\n    ]}\n "}
{"question": "Give me all soccer clubs in Spain.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all soccer clubs in Spain.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q476028 is association football club\nwdt:P17 is country\nwd:Q29 is Spain", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q476028.\",\n    \"?item wdt:P17 wd:Q29.\"\n    ]}\n \t\t \t\t    \t  \t   \t\t\t"}
{"question": "Give me all soccer clubs in Spain.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all soccer clubs in Spain.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1869 is instance of\nkg:7742 is association football club\nkg:9070 is country\nkg:2172 is Spain", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"?s kg:1869 kg:7742 ;\",\n    \"      kg:9070 kg:2172 .\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "Who produced films starring Natalie Portman?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who produced films starring Natalie Portman?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?producer\",\n    \"WHERE {\",\n    \"  ?film wdt:P161 wd:Q25269 ;\",\n    \"         wdt:P577 [] ;\",\n    \"         wdt:P162 ?producer .\",\n    \"}\"\n  ]\n}"}
{"question": "Who produced films starring Natalie Portman?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who produced films starring Natalie Portman?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q11424 is film\nwdt:P161 is cast member\nwd:Q37876 is Natalie Portman\nwdt:P162 is producer", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?producer\",\n    \"WHERE {\",\n    \"?film wdt:P31 wd:Q11424;\",\n    \"       wdt:P161 wd:Q37876;\",\n    \"       wdt:P162 ?producer.\",\n    \"}\"\n  ]\n}"}
{"question": "Who produced films starring Natalie Portman?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who produced films starring Natalie Portman?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5819 is instance of\nkg:0320 is film\nkg:8271 is cast member\nkg:1332 is Natalie Portman\nkg:6761 is producer", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?producer\",\n    \"WHERE {\",\n    \"?film kg:0320 .\",\n    \"?film kg:8271 kg:1332 .\",\n    \"?film kg:6761 ?producer .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all breeds of the German Shepherd dog.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all breeds of the German Shepherd dog.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q160458 .\", \"# German Shepherd breed\",\n    \"?item wdt:P279 wd:Q160458 .\", \"# subclass of German Shepherd\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all breeds of the German Shepherd dog.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all breeds of the German Shepherd dog.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P279 is subclass of\nwd:Q38280 is German Shepherd\nwd:Q38280 is German Shepherd", "response": "{\n  \"query\": [\n    \"SELECT ?breed\",\n    \"WHERE {\",\n    \"?breed wdt:P279 wd:Q39174 .\",\n    \"FILTER NOT EXISTS { ?breed wdt:P279 ?mid . ?mid wdt:P279 wd:Q39174 }\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all breeds of the German Shepherd dog.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all breeds of the German Shepherd dog.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1311 is subclass of\nkg:3722 is German Shepherd\nkg:3722 is German Shepherd", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?breed\",\n    \"WHERE {\",\n    \"?breed rdfs:subClassOf kg:3722 .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the heaviest player of the Chicago Bulls?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is the heaviest player of the Chicago Bulls?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?player\",\n    \"WHERE {\",\n    \"?team wdt:P31 wd:Q39719;\",\n    \"       wdt:P361 wd:Q131236.\",\n    \"?player wdt:P54 ?team;\",\n    \"        wdt:P212 ?weight.\",\n    \"{ SELECT ?player (MAX(?weight) AS ?maxWeight)\",\n    \"   WHERE {\",\n    \"     ?player wdt:P54 ?team;\",\n    \"            wdt:P212 ?weight.\",\n    \"   }\",\n    \"   GROUP BY ?player\",\n    \" }\",\n    \"}\"\n  ]\n}"}
{"question": "Which languages are spoken in Estonia?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which languages are spoken in Estonia?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?language\",\n    \"WHERE {\",\n    \"  wd:Q1919 wdt:P407 ?language .\",\n    \"}\"\n  ]\n}"}
{"question": "Which languages are spoken in Estonia?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which languages are spoken in Estonia?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q191 is Estonia\nwdt:P2936 is language used", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q191 wdt:P2936 ?item.\",\n    \"}\"\n  ]\n}"}
{"question": "Which languages are spoken in Estonia?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which languages are spoken in Estonia?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6317 is Estonia\nkg:3495 is language used", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?language\",\n    \"WHERE {\",\n    \"  kg:6317 kg:3495 ?language .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the largest country in the world?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the largest country in the world?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?country wdt:P31 wd:Q6256;\",\n    \"       wdt:P298 ?area.\",\n    \"}\",\n    \"ORDER BY DESC(?area)\",\n    \"LIMIT 1\"\n  ]\n}"}
{"question": "What is the largest country in the world?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the largest country in the world?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q3624078 is sovereign state\nwdt:P2046 is area", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?country wdt:P31 wd:Q3624078.\",\n    \"?country wdt:P2046 ?area.\",\n    \"{ SELECT ?country (MAX(?area) AS ?maxArea)\",\n    \"WHERE {\",\n    \"?country wdt:P31 wd:Q3624078.\",\n    \"?country wdt:P2046 ?area.\",\n    \"}\",\n    \"GROUP BY ?country }\",\n    \"FILTER (?area = ?maxArea).\",\n    \"}\"\n  ]\n  }\n "}
{"question": "What is the largest country in the world?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the largest country in the world?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5506 is instance of\nkg:9393 is subclass of\nkg:1310 is sovereign state\nkg:0702 is area", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?country rdf:type kg:1310 .\",\n    \"?country kg:0702 ?area .\",\n    \"{ SELECT ?country (MAX(?area) AS ?maxArea)\",\n    \"WHERE {\",\n    \"?country rdf:type kg:1310 .\",\n    \"?country kg:0702 ?area .\",\n    \"}\",\n    \"} \",\n    \"FILTER (?area = ?maxArea)\",\n    \"}\"\n  ]\n}"}
{"question": "What is the largest city in america?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the largest city in america?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?city\",\n    \"WHERE {\",\n    \"?city wdt:P31 wd:Q515; # instance of city\",\n    \"?city wdt:P30 wd:Q30; # located in America\",\n    \"?city wdt:P1082 ?population. # population\",\n    \"{ SELECT ?city (MAX(?population) AS ?maxPopulation)\",\n    \"WHERE {\",\n    \"?city wdt:P31 wd:Q515;\",\n    \"?city wdt:P30 wd:Q30;\",\n    \"?city wdt:P1082 ?population.\",\n    \"}\",\n    \"} \",\n    \"FILTER (?population = ?maxPopulation).\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "What is the largest city in america?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the largest city in america?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P17 is country\nwd:Q30 is United States of America\nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q515 is city\nwdt:P1082 is population", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?city\",\n    \"WHERE {\",\n    \"?city wdt:P31 wd:Q515 .\", \"# city is instance of city\",\n    \"?city wdt:P17 wd:Q30 .\", \"# city is located in USA\",\n    \"?city wdt:P1082 ?population .\", \"# get population of the city\",\n    \"}\",\n    \"ORDER BY DESC(?population)\", \"# order cities by population in descending order\",\n    \"LIMIT 1\" ,\"% return only one result, which should be the largest\"\n  ]\n}"}
{"question": "What is the largest city in america?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the largest city in america?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0643 is country\nkg:9284 is United States of America\nkg:3777 is instance of\nkg:9906 is subclass of\nkg:5230 is city\nkg:0522 is population", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?city\",\n    \"WHERE {\",\n    \"?city kg:3777 kg:5230 ;\",\n    \"       kg:0522 ?population .\",\n    \"?country kg:3777 kg:0643 ;\",\n    \"         kg:9906 kg:9284 .\",\n    \"?city kg:0522 ?population .\",\n    \"FILTER NOT EXISTS {\",\n    \"?otherCity kg:3777 kg:5230 ;\",\n    \"                kg:0522 ?otherPopulation .\",\n    \"FILTER (?otherPopulation > ?population)\",\n    \"}\",\n    \"}\"\n  ]\n}"}
{"question": "Who was the pope that founded the Vatican Television?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who was the pope that founded the Vatican Television?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?pope\",\n    \"WHERE {\",\n    \"?pope wdt:P39 wd:Q191072.\",\n    \"?pope wdt:P361 wd:Q868671.\"\n    ]}\n "}
{"question": "Who was the pope that founded the Vatican Television?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who was the pope that founded the Vatican Television?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q1471987 is Vatican Media\nwdt:P571 is inception\nwdt:P39 is position held\nwd:Q19546 is pope\np:P39 is position held\nps:P39 is position held\nwd:Q19546 is pope\npq:P580 is start time\npq:P582 is end time", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"PREFIX wd: <http://www.wikidata.org/entity/>\",\n    \"SELECT ?pope\",\n    \"WHERE {\",\n    \"?pope wdt:P39 wd:Q19546 ;\",\n    \"       p:P39 [ps:P39 wd:Q19546 ;\",\n    \"                   pq:P580 ?startTime ;\",\n    \"                   pq:P582 ?endTime].\",\n    \"       FILTER EXISTS { wd:Q1471987 wdt:P571 ?inception . \",\n    \"                       FILTER (?startTime <= ?inception && ?endTime >= ?inception) }\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Who was the pope that founded the Vatican Television?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who was the pope that founded the Vatican Television?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4965 is Vatican Media\nkg:9396 is inception\nkg:5157 is position held\nkg:4968 is pope\nkg:9086 is position held\nkg:2915 is position held\nkg:4968 is pope\nkg:3118 is start time\nkg:1891 is end time", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?pope\",\n    \"WHERE {\",\n    \"?vaticanMedia kg:9396 ?inception .\",\n    \"?vaticanMedia kg:5157 ?positionHeld .\",\n    \"?positionHeld kg:4968 ?pope .\",\n    \"?positionHeld kg:9086 \\\"Pope\\\" .\",\n    \"?positionHeld kg:2915 \\\"Founder of Vatican Television\\\" .\",\n    \"FILTER NOT EXISTS { ?positionHeld kg:3118 ?startTime . }\",\n    \"FILTER NOT EXISTS { ?positionHeld kg:1891 ?endTime . }\",\n    \"}\"\n  ]\n}"}
{"question": "Who discovered Ceres?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who discovered Ceres?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P61 wd:Q596 .\", \"# Ceres discovery\",\n    \"}\"\n  ]\n}"}
{"question": "Who discovered Ceres?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who discovered Ceres?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q596 is Ceres\nwdt:P61 is discoverer or inventor", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?discoverer\",\n    \"WHERE {\",\n    \"  wd:Q596 wdt:P61 ?discoverer .\",\n    \"}\"\n  ]\n}"}
{"question": "Who discovered Ceres?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who discovered Ceres?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0356 is Ceres\nkg:8941 is discoverer or inventor", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?discoverer\",\n    \"WHERE {\",\n    \"  kg:0356 kg:8941 ?discoverer .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the king of the Netherlands?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is the king of the Netherlands?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P35 wd:Q29999 .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the king of the Netherlands?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is the king of the Netherlands?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q55 is Netherlands\nwdt:P35 is head of state\nwdt:P39 is position held\nwd:Q2045066 is King of the Netherlands", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P39 wd:Q2045066 ;\",\n    \"       wdt:P131* wd:Q55 .\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "Who is the king of the Netherlands?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is the king of the Netherlands?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7804 is Netherlands\nkg:9773 is head of state\nkg:8977 is position held\nkg:8219 is King of the Netherlands", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?king\",\n    \"WHERE {\",\n    \"  kg:7804 kg:8977 ?position .\",\n    \"  ?position kg:9773 ?king .\",\n    \"  ?position a kg:8219 .\",\n    \"}\"\n  ]\n}"}
{"question": "Is Cola a beverage?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Is Cola a beverage?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q2155 AS ?item).\",\n    \"  ?item wdt:P31 wd:Q40050.\"\n    ]}\n "}
{"question": "Is Cola a beverage?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Is Cola a beverage?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q134041 is cola\nwdt:P279 is subclass of\nwd:Q40050 is drink", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"PREFIX wd: <http://www.wikidata.org/entity/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q134041 wdt:P279 ?item .\",\n    \"  ?item wdt:P279 wd:Q40050 .\",\n    \"}\"\n  ]\n}"}
{"question": "Is Cola a beverage?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Is Cola a beverage?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3198 is cola\nkg:1933 is subclass of\nkg:6616 is drink", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"  kg:3198 kg:1933 ?s .\",\n    \"  ?s kg:1933 kg:6616 .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the alma mater of the chancellor of Germany Angela Merkel?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the alma mater of the chancellor of Germany Angela Merkel?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?almaMater\",\n    \"WHERE {\",\n    \"  BIND(wd:Q567, ?angelaMerkel)\",\n    \"  ?angelaMerkel wdt:P39 ?chancellorPosition.\",\n    \"  ?chancellorPosition wdt:P361 wd:Q183.\",\n    \"  ?angelaMerkel wdt:P69 ?almaMater.\"\n    ]}\n   \t\t\t\t\t\t    \t  \t   "}
{"question": "What is the alma mater of the chancellor of Germany Angela Merkel?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the alma mater of the chancellor of Germany Angela Merkel?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q567 is Angela Merkel\nwdt:P69 is educated at\nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q3918 is university", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?almaMater\",\n    \"WHERE {\",\n    \"  wd:Q567 wdt:P69 ?almaMater .\",\n    \"  ?almaMater wdt:P31/wdt:P279* wd:Q3918 .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the alma mater of the chancellor of Germany Angela Merkel?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the alma mater of the chancellor of Germany Angela Merkel?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5316 is Angela Merkel\nkg:7545 is educated at\nkg:7553 is instance of\nkg:6836 is subclass of\nkg:2365 is university", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?almaMater\",\n    \"WHERE {\",\n    \"  kg:5316 kg:7545 ?almaMater .\",\n    \"  ?almaMater kg:7553 kg:2365 .\",\n    \"}\"\n  ]\n}"}
{"question": "Who wrote the book Les Piliers de la terre?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who wrote the book Les Piliers de la terre?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?author\",\n    \"WHERE {\",\n    \"  BIND(wd:Q23622 AS ?book).\",\n    \"  ?book wdt:P50 ?author.\",\n    \"}\"\n  ]\n}"}
{"question": "Who wrote the book Les Piliers de la terre?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who wrote the book Les Piliers de la terre?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q1163227 is The Pillars of the Earth\nwdt:P50 is author", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?author\",\n    \"WHERE {\",\n    \"  wd:Q1163227 wdt:P50 ?author .\",\n    \"}\"\n  ]\n}"}
{"question": "Who wrote the book Les Piliers de la terre?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who wrote the book Les Piliers de la terre?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0606 is The Pillars of the Earth\nkg:5137 is author", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?author\",\n    \"WHERE {\",\n    \"  kg:0606 kg:5137 ?author .\",\n    \"}\"\n  ]\n}"}
{"question": "Which airports does Yeti Airlines serve?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which airports does Yeti Airlines serve?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?airport\",\n    \"WHERE {\",\n    \"  ?airline wdt:P161 \\\"Yeti Airlines\\\".\",\n    \"  ?airline wdt:P1329 ?airport.\"\n    ]}\n                 \t\t"}
{"question": "Which airports does Yeti Airlines serve?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which airports does Yeti Airlines serve?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q1480118 is Yeti Airlines\nwdt:P113 is airline hub", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?airport\",\n    \"WHERE {\",\n    \"  wd:Q1480118 wdt:P137 ?operates ;\",\n    \"         wdt:P113 ?hub .\",\n    \"  FILTER (?operates = ?hub || !BOUND(?hub))\",\n    \"  BIND (?operates AS ?airport)\",\n    \"}\"\n  ]\n}"}
{"question": "Which airports does Yeti Airlines serve?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which airports does Yeti Airlines serve?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2721 is Yeti Airlines\nkg:4798 is airline hub", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?airport\",\n    \"WHERE {\",\n    \"  kg:2721 kg:4798 ?airport .\",\n    \"}\"\n  ]\n}"}
{"question": "Where is the birthplace of Goethe?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Where is the birthplace of Goethe?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q937 AS ?goethe).\",\n    \"  ?goethe wdt:P19 ?item.\",\n    \"}\"\n  ]\n}"}
{"question": "Where is the birthplace of Goethe?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Where is the birthplace of Goethe?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q5879 is Johann Wolfgang von Goethe\nwdt:P19 is place of birth", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q5879 wdt:P19 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "Where is the birthplace of Goethe?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Where is the birthplace of Goethe?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8492 is Johann Wolfgang von Goethe\nkg:1815 is place of birth", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?birthplace\",\n    \"WHERE {\",\n    \"  kg:8492 kg:1815 ?birthplace .\",\n    \"}\"\n  ]\n}"}
{"question": "Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?event1 ?event2\",\n    \"WHERE {\",\n    \"?event1 wdt:P31 wd:Q182748 .\", \"# Cuban Missile Crisis\",\n    \"?event2 wdt:P31 wd:Q192040 .\", \"# Bay of Pigs Invasion\",\n    \"?event1 wdt:P577 ?date1 .\",\n    \"?event2 wdt:P577 ?date2 .\",\n    \"FILTER (?date1 < ?date2)\",\n    \"}\"\n  ]\n}"}
{"question": "Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q128160 is Cuban Missile Crisis\nwdt:P582 is end time\nwd:Q191721 is Bay of Pigs invasion\nwdt:P580 is start time", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"PREFIX wd: <http://www.wikidata.org/entity/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  ?cubanMissileCrisis wdt:P582 ?cubanEnd.\",\n    \"  ?bayOfPigsInvasion wdt:P580 ?bayOfPigsStart.\",\n    \"  FILTER (?cubanEnd < ?bayOfPigsStart).\",\n    \"  BIND(wd:Q128160 AS ?cubanMissileCrisis).\",\n    \"  BIND(wd:Q191721 AS ?bayOfPigsInvasion).\",\n    \"}\"\n  ]\n}"}
{"question": "Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6047 is Cuban Missile Crisis\nkg:0497 is end time\nkg:0984 is Bay of Pigs invasion\nkg:5449 is start time", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"  kg:6047 kg:0497 ?cmce.\",\n    \"  kg:0984 kg:5449 ?bopi.\",\n    \"  FILTER (?cmce > ?bopi).\",\n    \"  BIND (kg:6047 AS ?s)\",\n    \"}\"\n  ]\n}"}
{"question": "Which ingredients do I need for carrot cake?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which ingredients do I need for carrot cake?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?ingredient\",\n    \"WHERE {\",\n    \"  wd:Q202260 wdt:P527 ?carrotCakeIngredient .\",\n    \"  BIND(wd:Q202260 AS ?carrotCake).\",\n    \"  ?carrotCake wdt:P527 ?ingredient.\",\n    \"}\"\n  ]\n}"}
{"question": "Which ingredients do I need for carrot cake?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which ingredients do I need for carrot cake?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q656071 is carrot cake\nwdt:P527 is has part(s)", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?ingredient\",\n    \"WHERE {\",\n    \"  wd:Q656071 wdt:P527 ?ingredient .\",\n    \"}\"\n  ]\n}"}
{"question": "Which ingredients do I need for carrot cake?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which ingredients do I need for carrot cake?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4040 is carrot cake\nkg:6712 is has part(s)", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?ingredient\",\n    \"WHERE {\",\n    \"  kg:4040 kg:6712 ?ingredient .\",\n    \"}\"\n  ]\n}"}
{"question": "Who created Wikipedia?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who created Wikipedia?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P112 ?value .\",\n    \"?item wdt:P31 wd:Q180163 .\",\n    \"?item wdt:P407 wd:Q1860 .\",\n    \"?item wdt:P577 ?value .\",\n    \"?item wdt:P112 ?value .\",\n    \"FILTER (LANGMATCHES(LANG(?item), 'en'))\",\n    \"}\"\n  ]\n}"}
{"question": "Who created Wikipedia?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who created Wikipedia?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q52 is Wikipedia\nwdt:P112 is founded by", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?founder\",\n    \"WHERE {\",\n    \"  wd:Q52 wdt:P112 ?founder .\",\n    \"}\"\n  ]\n}"}
{"question": "Who created Wikipedia?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who created Wikipedia?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2440 is Wikipedia\nkg:0699 is founded by", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?creator\",\n    \"WHERE {\",\n    \"  kg:2440 kg:0699 ?creator .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the highest mountain in Saxony Germany?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the highest mountain in Saxony Germany?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q8502 ;\", \"# mountain\",\n    \"wdt:P131 wd:Q1205 ;\", \"# located in Saxony\",\n    \"?rank wdt:P647 ?mountainRank .\",\n    \"{ SELECT ?item (MAX(?height) AS ?maxHeight) \",\n    \"WHERE { ?item wdt:P31 wd:Q8502 ; wdt:P131 wd:Q1205 ; wdt:P2044 ?height }\",\n    \"GROUP BY ?item }\",\n    \"?item wdt:P2044 ?height . FILTER (?height = ?maxHeight)\",\n    \"}\"\n  ]\n}"}
{"question": "What is the highest mountain in Saxony Germany?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the highest mountain in Saxony Germany?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q8502 is mountain\nwdt:P131 is located in the administrative territorial entity\nwd:Q1202 is Saxony\nwdt:P2044 is elevation above sea level", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?mountain\",\n    \"WHERE {\",\n    \"?mountain wdt:P31 wd:Q8502 ;\",\n    \"         wdt:P131 wd:Q1202 ;\",\n    \"         wdt:P2044 ?elevation .\",\n    \"}\",\n    \"ORDER BY DESC(?elevation)\",\n    \"LIMIT 1\"\n  ]\n}"}
{"question": "What is the highest mountain in Saxony Germany?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the highest mountain in Saxony Germany?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8166 is instance of\nkg:8572 is mountain\nkg:6404 is located in the administrative territorial entity\nkg:7885 is Saxony\nkg:5619 is elevation above sea level", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?mountain\",\n    \"WHERE {\",\n    \"?mountain kg:8572 true .\",\n    \"?mountain kg:6404 kg:7885 .\",\n    \"?maxElevation kg:5619 ?elevation .\",\n    \"{ SELECT (MAX(?elevation) AS ?maxElevation) \",\n    \"WHERE {\",\n    \"?m kg:8572 true .\",\n    \"?m kg:6404 kg:7885 .\",\n    \"?m kg:5619 ?elevation .\",\n    \"} }\",\n    \"?mountain kg:5619 ?mountainElevation .\",\n    \"FILTER (?mountainElevation = ?maxElevation)\",\n    \"}\"\n  ]\n}"}
{"question": "In which country is Mecca located?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “In which country is Mecca located?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"  wd:Q81109 wdt:P17 ?country .\",\n    \"}\"\n  ]\n}"}
{"question": "In which country is Mecca located?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “In which country is Mecca located?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q5806 is Mecca\nwdt:P131 is located in the administrative territorial entity\nwdt:P31 is instance of\nwd:Q6256 is country", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"  wd:Q5806 wdt:P131 ?country .\",\n    \"  ?country wdt:P31 wd:Q6256 .\",\n    \"}\"\n  ]\n}"}
{"question": "In which country is Mecca located?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “In which country is Mecca located?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9593 is Mecca\nkg:2857 is located in the administrative territorial entity\nkg:3525 is instance of\nkg:9937 is country", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"  kg:9593 kg:2857 ?country .\",\n    \"  ?country kg:3525 kg:9937 .\",\n    \"}\"\n  ]\n}"}
{"question": "Who played Gus Fring in Breaking Bad?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who played Gus Fring in Breaking Bad?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"?character wdt:P31 wd:Q15632617 ; wdt:P1441 ?show .\",\n    \"?show wdt:P179 wd:Q80355 .\",\n    \"?character wdt:P175 ?actor .\",\n    \"FILTER(CONTAINS(LCASE(?character), \\\"gus fring\\\"))\",\n    \"}\"\n  ]\n}"}
{"question": "Who played Gus Fring in Breaking Bad?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who played Gus Fring in Breaking Bad?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q5620660 is Gus Fring\npq:P453 is character role\nps:P161 is cast member", "response": "{\n  \"query\": [\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"  wd:Q5620660 p:P161 ?statement.\",\n    \"  ?statement ps:P161 ?actor.\",\n    \"}\"\n  ]\n}"}
{"question": "Who played Gus Fring in Breaking Bad?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who played Gus Fring in Breaking Bad?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3702 is Gus Fring\nkg:1248 is character role\nkg:8170 is cast member", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"  ?actor kg:8170 ?character .\",\n    \"  ?character kg:1248 kg:3702 .\",\n    \"}\"\n  ]\n}"}
{"question": "In which country does the Nile start?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “In which country does the Nile start?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P393 wd:Q3394 .\",\n    \"}\"\n  ]\n}"}
{"question": "In which country does the Nile start?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “In which country does the Nile start?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q3392 is Nile\nwdt:P885 is origin of the watercourse\nwdt:P17 is country", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"  wd:Q3392 wdt:P885 ?origin .\",\n    \"  ?origin wdt:P17 ?country .\",\n    \"}\"\n  ]\n}"}
{"question": "In which country does the Nile start?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “In which country does the Nile start?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0768 is Nile\nkg:2584 is origin of the watercourse\nkg:0470 is country", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"  kg:0768 kg:2584 ?origin .\",\n    \"  ?origin kg:0470 ?country .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the biggest stadium in Spain?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the biggest stadium in Spain?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q483110; # instance of stadium\",\n    \"wdt:P17 wd:Q29; # located in Spain\",\n    \"OPTIONAL { ?item wdt:P1082 ?seatingCapacity }\", \"# seating capacity\"\n    ,\n    \"{ SELECT ?item (MAX(?sc) AS ?maxSeating) WHERE {\",\n    \"?item wdt:P31 wd:Q483110;\",\n    \"wdt:P17 wd:Q29;\",\n    \"OPTIONAL { ?item wdt:P1082 ?sc }\",\n    \"} GROUP BY ?item }\",\n    \"FILTER ( ?seatingCapacity = ?maxSeating )\",\n    \"}\"\n  ]\n}"}
{"question": "What is the biggest stadium in Spain?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the biggest stadium in Spain?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q483110 is stadium\nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q483110 is stadium\nwdt:P17 is country\nwd:Q29 is Spain\nwdt:P1083 is maximum capacity", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?stadium\",\n    \"WHERE {\",\n    \"?stadium wdt:P31/wdt:P279* wd:Q483110;\",\n    \"       wdt:P17 wd:Q29.\",\n    \"   { SELECT ?stadium (MAX(?capacity) AS ?maxCapacity)\",\n    \"     WHERE {\",\n    \"       ?stadium wdt:P31/wdt:P279* wd:Q483110;\",\n    \"              wdt:P17 wd:Q29;\",\n    \"              wdt:P1083 ?capacity.\",\n    \"     }\",\n    \"     GROUP BY ?stadium\",\n    \"   }.\",\n    \"   ?stadium wdt:P1083 ?maxCapacity.\"\n    ]}\n \t\t\t\t\t       \t\t\t \t\t"}
{"question": "What is the biggest stadium in Spain?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the biggest stadium in Spain?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3639 is instance of\nkg:6981 is stadium\nkg:3639 is instance of\nkg:3018 is subclass of\nkg:6981 is stadium\nkg:4997 is country\nkg:8158 is Spain\nkg:4254 is maximum capacity", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?stadium\",\n    \"WHERE {\",\n    \"?stadium kg:6981 \\\"stadium\\\".\",\n    \"?stadium kg:4997 ?country.\",\n    \"?country kg:8158 \\\"Spain\\\".\",\n    \"?stadium kg:4254 ?capacity.\",\n    \"{ SELECT ?stadium (MAX(?capacity) AS ?maxCapacity)\",\n    \"WHERE {\",\n    \"?stadium kg:6981 \\\"stadium\\\".\",\n    \"?stadium kg:4997 ?country.\",\n    \"?country kg:8158 \\\"Spain\\\".\",\n    \"?stadium kg:4254 ?capacity.\",\n    \"} GROUP BY ?stadium }\",\n    \"FILTER (?capacity = ?maxCapacity).\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "How large is the area of UK?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How large is the area of UK?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q145 \\\"?item\\\").\",\n    \"  ?item wdt:P2046 ?area.\",\n    \"}\"\n  ]\n}"}
{"question": "How large is the area of UK?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How large is the area of UK?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q145 is United Kingdom\nwdt:P2046 is area", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?area WHERE {\",\n    \"  wd:Q145 wdt:P2046 ?area .\",\n    \"}\"\n  ]\n}"}
{"question": "How large is the area of UK?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How large is the area of UK?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0895 is United Kingdom\nkg:6864 is area", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?area\",\n    \"WHERE {\",\n    \"  kg:0895 kg:6864 ?area .\",\n    \"}\"\n  ]\n}"}
{"question": "Who created Batman?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who created Batman?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P112 wd:Q89.\",\n    \"}\"\n  ]\n}"}
{"question": "Who created Batman?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who created Batman?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q2695156 is Batman\nwdt:P170 is creator", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?creator\",\n    \"WHERE {\",\n    \"  wd:Q2695156 wdt:P170 ?creator .\",\n    \"}\"\n  ]\n}"}
{"question": "Who created Batman?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who created Batman?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4262 is Batman\nkg:4214 is creator", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?creator\",\n    \"WHERE {\",\n    \"  kg:4262 kg:4214 ?creator .\",\n    \"}\"\n  ]\n}"}
{"question": "Was Sigmund Freud married?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Was Sigmund Freud married?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?spouse\",\n    \"WHERE {\",\n    \"  BIND(wd:Q9217 AS ?freud).\",\n    \"  ?freud wdt:P26 ?spouse.\"\n    ]}\n "}
{"question": "Was Sigmund Freud married?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Was Sigmund Freud married?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q9215 is Sigmund Freud\nwdt:P26 is spouse", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?spouse\",\n    \"WHERE {\",\n    \"  wd:Q9215 wdt:P26 ?spouse .\",\n    \"}\"\n  ]\n}"}
{"question": "Was Sigmund Freud married?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Was Sigmund Freud married?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0071 is Sigmund Freud\nkg:1379 is spouse", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?spouse\",\n    \"WHERE {\",\n    \"  kg:0071 kg:1379 ?spouse .\",\n    \"}\"\n  ]\n}"}
{"question": "Who are the developers of DBpedia?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who are the developers of DBpedia?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?developer\",\n    \"WHERE {\",\n    \"  wd:Q216532 dbp:developer ?developer .\",\n    \"}\"\n  ]\n}"}
{"question": "Who are the developers of DBpedia?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who are the developers of DBpedia?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q465 is DBpedia\nwdt:P112 is founded by", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?developer\",\n    \"WHERE {\",\n    \"  wd:Q465 wdt:P112 ?developer .\",\n    \"}\"\n  ]\n}"}
{"question": "Who are the developers of DBpedia?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who are the developers of DBpedia?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0141 is DBpedia\nkg:9957 is founded by", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?developer\",\n    \"WHERE {\",\n    \"  kg:0141 kg:9957 ?developer .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all movies directed by Francis Ford Coppola.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all movies directed by Francis Ford Coppola.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P57 wd:Q201471\",\n    \"} \"\n  ]\n}"}
{"question": "Give me all movies directed by Francis Ford Coppola.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all movies directed by Francis Ford Coppola.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q11424 is film\nwdt:P57 is director\nwd:Q56094 is Francis Ford Coppola", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q11424.\",\n    \"?item wdt:P57 wd:Q56094.\"\n    ]}\n \t\t \t\t    \t  \t   \t\t\t"}
{"question": "Give me all movies directed by Francis Ford Coppola.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all movies directed by Francis Ford Coppola.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4264 is instance of\nkg:1346 is subclass of\nkg:9775 is film\nkg:2196 is director\nkg:2738 is Francis Ford Coppola", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?movie\",\n    \"WHERE {\",\n    \"?movie kg:9775 .\",\n    \"?movie kg:2196 kg:2738 .\",\n    \"}\"\n  ]\n}"}
{"question": "Are tree frogs a type of amphibian?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Are tree frogs a type of amphibian?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q10814.\",\n    \"?item wdt:P105 wd:Q173934.\"\n    ]}\n "}
{"question": "Are tree frogs a type of amphibian?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Are tree frogs a type of amphibian?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q53696 is Hylidae\nwdt:P171 is parent taxon\nwd:Q10908 is Amphibia", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  ?item wdt:P171 wd:Q10908.\",\n    \"  ?item wdt:P171* wd:Q53696.\"\n    ]}\n "}
{"question": "Are tree frogs a type of amphibian?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Are tree frogs a type of amphibian?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4906 is Hylidae\nkg:8693 is parent taxon\nkg:5304 is Amphibia", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"?s kg:8693 kg:5304.\",\n    \"?s rdfs:label \\\"tree frog\\\"@en.\",\n    \"FILTER (EXISTS { ?s rdf:type kg:4906 })\"\n    ]}\n "}
{"question": "What is the location of the Houses of Parliament?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the location of the Houses of Parliament?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P279 wd:Q123454.\",\n    \"?item rdfs:label \\\"Houses of Parliament\\\"@en.\",\n    \"}\"\n  ]\n}"}
{"question": "What is the location of the Houses of Parliament?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the location of the Houses of Parliament?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q62408 is Palace of Westminster\nwdt:P131 is located in the administrative territorial entity", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?location\",\n    \"WHERE {\",\n    \"  wd:Q62408 wdt:P131 ?location .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the location of the Houses of Parliament?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the location of the Houses of Parliament?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3314 is Palace of Westminster\nkg:3899 is located in the administrative territorial entity", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?location\",\n    \"WHERE {\",\n    \"  kg:3314 kg:3899 ?location .\",\n    \"}\"\n  ]\n}"}
{"question": "how much is the elevation of Düsseldorf Airport ?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “how much is the elevation of Düsseldorf Airport ?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q168891 AS ?airport).\",\n    \"  ?airport wdt:P2044 ?elevation.\",\n    \"  BIND(XSD#integer(?elevation) AS ?item).\",\n    \"}\"\n  ]\n}"}
{"question": "how much is the elevation of Düsseldorf Airport ?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “how much is the elevation of Düsseldorf Airport ?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q58226 is Düsseldorf Airport\nwdt:P2044 is elevation above sea level", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?elevation\",\n    \"WHERE {\",\n    \"  wd:Q58226 wdt:P2044 ?elevation .\",\n    \"}\"\n  ]\n}"}
{"question": "how much is the elevation of Düsseldorf Airport ?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “how much is the elevation of Düsseldorf Airport ?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3463 is Düsseldorf Airport\nkg:7050 is elevation above sea level", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?elevation\",\n    \"WHERE {\",\n    \"  kg:3463 kg:7050 ?elevation .\",\n    \"}\"\n  ]\n}"}
{"question": "How much is the population of mexico city ?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How much is the population of mexico city ?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P1082 wd:Q90.\",\n    \"}\"\n  ]\n}"}
{"question": "How much is the population of mexico city ?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How much is the population of mexico city ?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q1489 is Mexico City\nwdt:P1082 is population", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?population\",\n    \"WHERE {\",\n    \"  wd:Q1489 wdt:P1082 ?population .\",\n    \"}\"\n  ]\n}"}
{"question": "How much is the population of mexico city ?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How much is the population of mexico city ?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8330 is Mexico City\nkg:3405 is population", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?population\",\n    \"WHERE {\",\n    \"  kg:8330 kg:3405 ?population .\",\n    \"}\"\n  ]\n}"}
{"question": "when was the founding date of french fifth republic?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “when was the founding date of french fifth republic?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q7122154 .\", \"# French Fifth Republic is an instance of republic\",\n    \"?item wdt:P577 ?foundingDate .\", \"# founding date\",\n    \"}\"\n  ]\n}"}
{"question": "when was the founding date of french fifth republic?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “when was the founding date of french fifth republic?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q200686 is French Fifth Republic\nwdt:P571 is inception", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q200686 AS ?item).\",\n    \"  ?item wdt:P571 ?inception.\",\n    \"}\"\n  ]\n}"}
{"question": "when was the founding date of french fifth republic?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “when was the founding date of french fifth republic?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0429 is French Fifth Republic\nkg:8176 is inception", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"  kg:0429 kg:8176 ?resource .\",\n    \"}\"\n  ]\n}"}
{"question": "Who was the first King of England?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who was the first King of England?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q5 ;\", \"# instance of human\",\n    \"wdt:P106 wd:Q49749 ;\", \"# occupation: sovereign\",\n    \"wdt:P27 wd:Q145 .\" ,\"# country: England\",\n    \"}\"\n  ]\n}"}
{"question": "Who was the first King of England?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who was the first King of England?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P39 is position held\nwd:Q18810062 is monarch of England\np:P39 is position held\npq:P580 is start time", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P39 wd:Q18810062.\",\n    \"?item p:P39 ?statement.\",\n    \"?statement pq:P580 ?startTime.\",\n    \"FILTER NOT EXISTS { ?item2 p:P39 ?statement2. ?statement2 pq:P580 ?startTime2. FILTER (?startTime2 < ?startTime) }\",\n    \"}\"\n  ]\n}"}
{"question": "Who was the first King of England?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who was the first King of England?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9064 is position held\nkg:5324 is monarch of England\nkg:4854 is position held\nkg:6181 is start time", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"?s kg:9064 kg:5324 ;\",\n    \"kg:4854 ?o .\",\n    \"?o kg:6181 ?t .\",\n    \"FILTER NOT EXISTS {\",\n    \"?other kg:9064 kg:5324 ;\",\n    \"kg:4854 ?other_o .\",\n    \"?other_o kg:6181 ?other_t .\",\n    \"FILTER (?other_t < ?t)\",\n    \"}\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the editor of Forbes?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is the editor of Forbes?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P98 wd:Q66168270 .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the editor of Forbes?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is the editor of Forbes?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q25161472 is Forbes\nwdt:P98 is editor", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?editor\",\n    \"WHERE {\",\n    \"  wd:Q25161472 wdt:P98 ?editor .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the editor of Forbes?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is the editor of Forbes?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4567 is Forbes\nkg:7693 is editor", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?editor\",\n    \"WHERE {\",\n    \"  kg:4567 kg:editor ?editor .\",\n    \"}\"\n  ]\n}"}
{"question": "Which awards did Douglas Hofstadter win?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which awards did Douglas Hofstadter win?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?award\",\n    \"WHERE {\",\n    \"  wd:Q92717 wdt:P166 ?award .\",\n    \"}\"\n  ]\n}"}
{"question": "Which awards did Douglas Hofstadter win?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which awards did Douglas Hofstadter win?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q319308 is Douglas Hofstadtesr\nwdt:P166 is award received", "response": "{\n  \"query\": [\n    \"SELECT ?award\",\n    \"WHERE {\",\n    \"  wd:Q319308 wdt:P166 ?award .\",\n    \"}\"\n  ]\n}"}
{"question": "Which awards did Douglas Hofstadter win?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which awards did Douglas Hofstadter win?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8441 is Douglas Hofstadtesr\nkg:7848 is award received", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?award\",\n    \"WHERE {\",\n    \"  kg:8441 kg:7848 ?award .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the youngest Darts player?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is the youngest Darts player?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P106 wd:Q207703.\",\n    \"?item wdt:P509 ?age.\",\n    \"{ SELECT ?item (MIN(?age) AS ?minAge)\",\n    \"WHERE {\",\n    \"?item wdt:P106 wd:Q207703.\",\n    \"?item wdt:P509 ?age.\",\n    \"}\",\n    \"} \",\n    \"FILTER (?age = ?minAge).\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the youngest Darts player?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is the youngest Darts player?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P106 is occupation\nwd:Q18574233 is darts player\nwdt:P569 is date of birth", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P106 wd:Q18574233.\",\n    \"?item wdt:P569 ?dob.\",\n    \"}\",\n    \"ORDER BY (?dob)\",\n    \"LIMIT 1\"\n  ]\n}"}
{"question": "Who is the youngest Darts player?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is the youngest Darts player?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9867 is occupation\nkg:7203 is darts player\nkg:4047 is date of birth", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?player\",\n    \"WHERE {\",\n    \"?player kg:7203 \\\"darts player\\\";\",\n    \"       kg:4047 ?dob.\",\n    \"{ SELECT ?player (MIN(?dob) AS ?minDob)\",\n    \"   WHERE {\",\n    \"     ?player kg:7203 \\\"darts player\\\";\",\n    \"            kg:4047 ?dob.\",\n    \"   }\",\n    \" }\",\n    \"}\"\n  ]\n}"}
{"question": "Is horse racing a sport?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Is horse racing a sport?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q31629 ;\", \"# instance of sport\",\n    \"wdt:P279 wd:Q131236 .\", \"# subclass of horse racing\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Is horse racing a sport?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Is horse racing a sport?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q187916 is horse racing\nwdt:P279 is subclass of\nwd:Q349 is sport", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"PREFIX wd: <http://www.wikidata.org/entity/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  ?item wdt:P279 wd:Q349 .\",\n    \"  ?item = wd:Q187916 .\",\n    \"}\"\n  ]\n}"}
{"question": "Is horse racing a sport?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Is horse racing a sport?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2533 is horse racing\nkg:7442 is subclass of\nkg:8983 is sport", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"  kg:2533 kg:7442 ?resource .\",\n    \"  ?resource kg:7442 kg:8983 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which river does the Brooklyn Bridge cross?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which river does the Brooklyn Bridge cross?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q209123 wdt:P177 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "Which river does the Brooklyn Bridge cross?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which river does the Brooklyn Bridge cross?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q125006 is Brooklyn Bridge\nwdt:P177 is crosses", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q125006 wdt:P177 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "Which river does the Brooklyn Bridge cross?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which river does the Brooklyn Bridge cross?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3474 is Brooklyn Bridge\nkg:2218 is crosses", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?river\",\n    \"WHERE {\",\n    \"  kg:3474 kg:2218 ?river .\",\n    \"}\"\n  ]\n}"}
{"question": "How many people live in Poland?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many people live in Poland?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q36 AS ?item).\",\n    \"  ?item wdt:P1082 ?population.\",\n    \"}\"\n  ]\n}"}
{"question": "How many people live in Poland?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many people live in Poland?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q36 is Poland\nwdt:P1082 is population", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q36 AS ?item).\",\n    \"  ?item wdt:P1082 ?population.\",\n    \"}\"\n  ]\n}"}
{"question": "How many people live in Poland?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many people live in Poland?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5126 is Poland\nkg:4536 is population", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?population\",\n    \"WHERE {\",\n    \"  kg:5126 kg:4536 ?population .\",\n    \"}\"\n  ]\n}"}
{"question": "When was the last episode of the TV series Friends aired?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “When was the last episode of the TV series Friends aired?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q12136 ;\", \"# instance of television series\",\n    \"wdt:P179 wd:Q221554 .\", \"# about Friends\"\n    ]}\n "}
{"question": "When was the last episode of the TV series Friends aired?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “When was the last episode of the TV series Friends aired?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q79784 is Friends\nwdt:P582 is end time", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q79784 AS ?series)\",\n    \"  ?episode wdt:P361 ?series ;\",\n    \"         wdt:P582 ?endTime .\",\n    \"  FILTER NOT EXISTS {\",\n    \"    ?laterEpisode wdt:P361 ?series ;\",\n    \"                     wdt:P582 ?laterTime .\",\n    \"    FILTER (?laterTime > ?endTime)\",\n    \"  }\",\n    \"}\"\n  ]\n}"}
{"question": "When was the last episode of the TV series Friends aired?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “When was the last episode of the TV series Friends aired?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3659 is Friends\nkg:4666 is end time", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?episode\",\n    \"WHERE {\",\n    \"  kg:3659 kg:4666 ?endTime .\",\n    \"  ?episode a dbo:Episode .\",\n    \"  ?episode dbo:partOf kg:3659 .\",\n    \"  ?episode dbo:airDate ?endTime .\",\n    \"}\"\n  ]\n}"}
{"question": "Is the wife of president Obama called Michelle?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Is the wife of president Obama called Michelle?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q76 AS ?president).\", \"# Barack Obama\",\n    \"  ?president wdt:P26 ?wife.\", \"# spouse\",\n    \"  FILTER(?wife = wd:Q13133).\", \"# Michelle Obama\",\n    \"  BIND(?wife AS ?item).\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Who is 8th president of US?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is 8th president of US?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P35 wd:Q30 ; wdt:P3933 \\\"8\\\" .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is 8th president of US?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is 8th president of US?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q30 is United States of America\np:P6 is head of government\npq:P580 is start time\nps:P6 is head of government", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?president\",\n    \"WHERE {\",\n    \"?president wdt:P39 wd:Q11696 .\", \"# President of the United States\",\n    \"?president wdt:P2937 ?ordinal .\", \"# ordinal number\",\n    \"FILTER (?ordinal = 8)\", \"# filter for 8th president\",\n    \"}\"\n  ]\n}"}
{"question": "Who is 8th president of US?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is 8th president of US?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7329 is United States of America\nkg:8425 is head of government\nkg:0279 is start time\nkg:3879 is head of government", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?president\",\n    \"WHERE {\",\n    \"?president kg:8425 kg:7329 ;\",\n    \"         kg:0279 ?startTime .\",\n    \"FILTER (NOT EXISTS {\",\n    \"  ?otherPresident kg:8425 kg:7329 ;\",\n    \"                   kg:0279 ?otherStartTime .\",\n    \"  FILTER (?otherStartTime < ?startTime)\",\n    \"})\",\n    \"BIND((COUNT(*) + 7) AS ?count)\",\n    \"{\",\n    \"  SELECT (COUNT(DISTINCT ?p) AS ?count)\",\n    \"  WHERE {\",\n    \"    ?p kg:8425 kg:7329 ;\",\n    \"         kg:0279 ?time .\",\n    \"    FILTER (?time < ?startTime)\",\n    \"  }\",\n    \"}\",\n    \"FILTER(?count = 8)\"\n  ]\n}\n "}
{"question": "how much is the total population of european union?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “how much is the total population of european union?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P463 wd:Q458.\",\n    \"?item wdt:P1082 ?population.\",\n    \"}\"\n  ]\n}"}
{"question": "how much is the total population of european union?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “how much is the total population of european union?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q458 is European Union\nwdt:P1082 is population", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q458 AS ?item).\",\n    \"  ?item wdt:P1082 ?population.\",\n    \"}\"\n  ]\n}"}
{"question": "how much is the total population of european union?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “how much is the total population of european union?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0953 is European Union\nkg:6799 is population", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"  kg:0953 kg:6799 ?resource .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all launch pads operated by NASA.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all launch pads operated by NASA.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q13215869;\",\n    \"       wdt:P137 wd:Q86862684 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all launch pads operated by NASA.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all launch pads operated by NASA.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q194188 is spaceport\nwdt:P137 is operator\nwd:Q23548 is National Aeronautics and Space Administration", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q194188;\",\n    \"       wdt:P137 wd:Q23548.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all launch pads operated by NASA.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all launch pads operated by NASA.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8521 is instance of\nkg:9497 is spaceport\nkg:1707 is operator\nkg:0090 is National Aeronautics and Space Administration", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?launchPad\",\n    \"WHERE {\",\n    \"?launchPad kg:9497 kg:8521 .\",\n    \"?launchPad kg:1707 kg:0090 .\",\n    \"}\"\n  ]\n}"}
{"question": "Who developed the video game World of Warcraft?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who developed the video game World of Warcraft?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?developer\",\n    \"WHERE {\",\n    \"  wd:Q849 ?developer wdt:P178.\",\n    \"}\"\n  ]\n}"}
{"question": "Who developed the video game World of Warcraft?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who developed the video game World of Warcraft?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q131007 is World of Warcraft\nwdt:P178 is developer", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?developer\",\n    \"WHERE {\",\n    \"  wd:Q131007 wdt:P178 ?developer .\",\n    \"}\"\n  ]\n}"}
{"question": "Who developed the video game World of Warcraft?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who developed the video game World of Warcraft?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4175 is World of Warcraft\nkg:2911 is developer", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?developer\",\n    \"WHERE {\",\n    \"  kg:4175 kg:2911 ?developer .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the birth name of Adele?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the birth name of Adele?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q486696 as ?adele)\",\n    \"  ?adele wdt:P1477 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the birth name of Adele?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the birth name of Adele?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q23215 is Adele\nwdt:P1477 is birth name", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q23215 wdt:P1477 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the birth name of Adele?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the birth name of Adele?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8007 is Adele\nkg:3664 is birth name", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?o\",\n    \"WHERE {\",\n    \"  kg:8007 kg:3664 ?o .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the population of Cairo?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the population of Cairo?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q85 AS ?item).\",\n    \"  ?item wdt:P1082 ?population.\",\n    \"}\"\n  ]\n}"}
{"question": "What is the population of Cairo?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the population of Cairo?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q85 is Cairo\nwdt:P1082 is population", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q85 AS ?item).\",\n    \"  ?item wdt:P1082 [] .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the population of Cairo?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the population of Cairo?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4167 is Cairo\nkg:8338 is population", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?population\",\n    \"WHERE {\",\n    \"  kg:4167 kg:8338 ?population .\",\n    \"}\"\n  ]\n}"}
{"question": "Is Frank Herbert still alive?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Is Frank Herbert still alive?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  ?item wdt:P31 wd:Q5;\",\n    \"  ?item wdt:P106 wd:Q622429;\",\n    \"  ?item wdt:P27 wd:Q30;\",\n    \"  ?item wdt:P569 ?birthDate;\",\n    \"  ?item wdt:P570 ?deathDate.\",\n    \"  FILTER (NOT BOUND(?deathDate))\",\n    \"}\"\n  ]\n}"}
{"question": "Is Frank Herbert still alive?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Is Frank Herbert still alive?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q7934 is Frank Herbert\nwdt:P570 is date of death", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q7934 AS ?item).\",\n    \"  FILTER NOT EXISTS { ?item wdt:P570 [] }\",\n    \"}\"\n  ]\n}"}
{"question": "Is Frank Herbert still alive?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Is Frank Herbert still alive?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6191 is Frank Herbert\nkg:7183 is date of death", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"  BIND(kg:6191 AS ?s).\",\n    \"  FILTER NOT EXISTS { ?s kg:7183 ?o }\",\n    \"}\"\n  ]\n}"}
{"question": "What is the last work of Dan Brown?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the last work of Dan Brown?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?work\",\n    \"WHERE {\",\n    \"?author wdt:P31 wd:Q5;\",\n    \"?author wdt:P106/wdt:P279* wd:Q6625963;\", \"# novelist\",\n    \"?author rdfs:label \\\"Dan Brown\\\"@en.\",\n    \"?work wdt:P50 ?author.\",\n    \"?work wdt:P577 ?date.\",\n    \"FILTER NOT EXISTS {\",\n    \"?work2 wdt:P50 ?author;\",\n    \"?work2 wdt:P577 ?date2;\",\n    \"FILTER (?date2 > ?date)\",\n    \"}\",\n    \"}\"\n  ]\n}"}
{"question": "What is the last work of Dan Brown?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the last work of Dan Brown?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P50 is author\nwd:Q7345 is Dan Brown\nwdt:P577 is publication date", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?work\",\n    \"WHERE {\",\n    \"?work wdt:P50 wd:Q7345.\",\n    \"?work wdt:P577 ?date.\",\n    \"{ SELECT MAX(?date) AS ?maxDate { ?work2 wdt:P50 wd:Q7345. ?work2 wdt:P577 ?date. } }\",\n    \"FILTER (?date = ?maxDate).\",\n    \"}\"\n  ]\n}"}
{"question": "What is the last work of Dan Brown?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the last work of Dan Brown?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8899 is author\nkg:6077 is Dan Brown\nkg:9624 is publication date", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?work\",\n    \"WHERE {\",\n    \"  ?work kg:author kg:6077 .\",\n    \"  ?work kg:publicationDate ?date .\",\n    \"  { SELECT MAX(?date) AS ?maxDate WHERE { ?w kg:author kg:6077 . ?w kg:publicationDate ?date } }\",\n    \"  FILTER (?date = ?maxDate)\",\n    \"}\"\n  ]\n}"}
{"question": "Where is Sungkyunkwan University?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Where is Sungkyunkwan University?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P17 wd:Q884\",\n    \"?item wdt:P31 wd:Q210566\",\n    \"?item wdt:P181 \\\"Sungkyunkwan University\\\"@en.\",\n    \"}\"\n  ]\n}"}
{"question": "Where is Sungkyunkwan University?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Where is Sungkyunkwan University?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P17 is country\nwdt:P276 is location\nwdt:P131 is located in the administrative territorial entity\nwd:Q41085 is Sungkyunkwan University", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?location\",\n    \"WHERE {\",\n    \"  wd:Q41085 wdt:P276 ?location .\",\n    \"}\"\n  ]\n}"}
{"question": "Where is Sungkyunkwan University?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Where is Sungkyunkwan University?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0470 is country\nkg:8946 is location\nkg:2192 is located in the administrative territorial entity\nkg:9035 is Sungkyunkwan University", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?location\",\n    \"WHERE {\",\n    \"  kg:9035 kg:2192 ?location .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the author of the interpretation of dreams?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is the author of the interpretation of dreams?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?author\",\n    \"WHERE {\",\n    \"?book wdt:P31 wd:Q47461344 ;\",\n    \"       wdt:P50 ?author .\",\n    \"FILTER (CONTAINS(LCASE(str(?book)), \\\"interpretation of dreams\\\"))\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the author of the interpretation of dreams?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is the author of the interpretation of dreams?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q726382 is Die Traumdeutung\nwdt:P50 is author", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?author\",\n    \"WHERE {\",\n    \"  wd:Q726382 wdt:P50 ?author .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the author of the interpretation of dreams?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is the author of the interpretation of dreams?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1167 is Die Traumdeutung\nkg:3300 is author", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?author\",\n    \"WHERE {\",\n    \"  kg:1167 kg:3300 ?author .\",\n    \"}\"\n  ]\n}"}
{"question": "When was the death of Shakespeare?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “When was the death of Shakespeare?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  ?item wdt:P31 wd:Q5;\",\n    \"  ?item wdt:P1416 \\\"William Shakespeare\\\"@en;\",\n    \"  ?item wdt:P570 ?date.\",\n    \"}\"\n  ]\n}"}
{"question": "When was the death of Shakespeare?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “When was the death of Shakespeare?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q692 is William Shakespeare\nwdt:P570 is date of death", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q692 AS ?item).\",\n    \"  ?item wdt:P570 [] .\",\n    \"}\"\n  ]\n}"}
{"question": "When was the death of Shakespeare?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “When was the death of Shakespeare?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5991 is William Shakespeare\nkg:8176 is date of death", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?dateOfDeath\",\n    \"WHERE {\",\n    \"  kg:5991 kg:8176 ?dateOfDeath .\",\n    \"}\"\n  ]\n}"}
{"question": "Who developed Slack?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who developed Slack?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P112 ?developer.\",\n    \"?item wdt:P178 \\\"Slack\\\".\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Who developed Slack?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who developed Slack?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P1056 is product or material produced or service provided\nwd:Q17130715 is Slack", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?developer\",\n    \"WHERE {\",\n    \"  wd:Q17130715 wdt:P1056 ?product .\",\n    \"  ?product wdt:P162 ?developer .\",\n    \"}\"\n  ]\n}"}
{"question": "Who developed Slack?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who developed Slack?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0014 is product or material produced or service provided\nkg:0492 is Slack", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?developer\",\n    \"WHERE {\",\n    \"  kg:0492 kg:0014 ?product .\",\n    \"  ?product dct:creator ?developer .\",\n    \"}\"\n  ]\n}"}
{"question": "In which year was Rachel Stevens born?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “In which year was Rachel Stevens born?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q5;\",\n    \"?item wdt:P106 wd:Q633493;\",\n    \"?item wdt:P735 \\\"Rachel Stevens\\\"@en.\",\n    \"?item wdt:P569 ?birthDate.\",\n    \"BIND(YEAR(?birthDate) AS ?birthYear)\",\n    \"}\"\n  ]\n}"}
{"question": "In which year was Rachel Stevens born?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “In which year was Rachel Stevens born?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q241665 is Rachel Stevens\nwdt:P569 is date of birth", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q241665 AS ?item).\",\n    \"  ?item wdt:P569 ?date.\",\n    \"  FILTER(YEAR(?date) = ?year).\",\n    \"  BIND(YEAR(?date) AS ?year).\"\n    ]}\n \t\t\t\t\t  \t \t\t    \t  \t"}
{"question": "In which year was Rachel Stevens born?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “In which year was Rachel Stevens born?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8473 is Rachel Stevens\nkg:8397 is date of birth", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?birthYear\",\n    \"WHERE {\",\n    \"  kg:8473 kg:8397 ?birthYear .\",\n    \"}\"\n  ]\n}"}
{"question": "How often did Jane Fonda marry?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How often did Jane Fonda marry?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q41167 AS ?item).\",\n    \"  ?item wdt:P26 ?spouse.\",\n    \"}\"\n  ]\n}"}
{"question": "How often did Jane Fonda marry?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How often did Jane Fonda marry?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q41142 is Jane Fonda\nwdt:P26 is spouse", "response": "{\n  \"query\": [\n    \"SELECT ?spouse\",\n    \"WHERE {\",\n    \"  wd:Q41142 wdt:P26 ?spouse .\",\n    \"}\"\n  ]\n}"}
{"question": "How often did Jane Fonda marry?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How often did Jane Fonda marry?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3295 is Jane Fonda\nkg:1321 is spouse", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?spouse\",\n    \"WHERE {\",\n    \"  kg:3295 kg:1321 ?spouse .\",\n    \"}\"\n  ]\n}"}
{"question": "Was the wife of president Lincoln called Mary?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Was the wife of president Lincoln called Mary?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P22 wd:Q91 .\", \"# Abraham Lincoln\",\n    \"?item wdt:P26 ?wife .\",\n    \"?wife rdfs:label \\\"Mary\\\"@en .\",\n    \"FILTER(LANGMATCHES(LANG(?wife), 'EN'))\",\n    \"}\"\n  ]\n}"}
{"question": "In which programming language is GIMP written?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “In which programming language is GIMP written?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?programmingLanguage\",\n    \"WHERE {\",\n    \"  wd:Q188625 wdt:P277 ?programmingLanguage .\",\n    \"}\"\n  ]\n}"}
{"question": "In which programming language is GIMP written?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “In which programming language is GIMP written?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q8038 is GIMP\nwdt:P277 is programmed in", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?language\",\n    \"WHERE {\",\n    \"  wd:Q8038 wdt:P277 ?language .\",\n    \"}\"\n  ]\n}"}
{"question": "In which programming language is GIMP written?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “In which programming language is GIMP written?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6582 is GIMP\nkg:7415 is programmed in", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?language\",\n    \"WHERE {\",\n    \"  kg:6582 kg:7415 ?language .\",\n    \"}\"\n  ]\n}"}
{"question": "Which university did Angela Merkel attend?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which university did Angela Merkel attend?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?university\",\n    \"WHERE {\",\n    \"  wd:Q567 Q46 ?university .\",\n    \"  ?university wdt:P31 wd:Q3918 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which university did Angela Merkel attend?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which university did Angela Merkel attend?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q3918 is university\nwd:Q875538 is public university\nwd:Q567 is Angela Merkel\nwdt:P69 is educated at\nwdt:P31 is instance of", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?university\",\n    \"WHERE {\",\n    \"  wd:Q567 wdt:P69 ?university .\",\n    \"  ?university wdt:P31 wd:Q3918 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which university did Angela Merkel attend?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which university did Angela Merkel attend?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5654 is university\nkg:4459 is public university\nkg:0182 is Angela Merkel\nkg:0579 is educated at\nkg:4931 is instance of", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?university\",\n    \"WHERE {\",\n    \"  kg:0182 kg:0579 ?university .\",\n    \"  ?university kg:4931 kg:5654 .\",\n    \"}\"\n  ]\n}"}
{"question": "List all the musicals with music by Elton John.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “List all the musicals with music by Elton John.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?musical\",\n    \"WHERE {\",\n    \"?musical wdt:P86 wd:Q46055 .\",\n    \"?musical wdt:P31 wd:Q1486476 .\",\n    \"}\"\n  ]\n}"}
{"question": "List all the musicals with music by Elton John.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “List all the musicals with music by Elton John.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q58483083 is dramatico-musical work\nwdt:P86 is composer\nwd:Q2808 is Elton John", "response": "{\n  \"query\": [\n    \"SELECT ?musical WHERE {\",\n    \"  ?musical wdt:P31 wd:Q58483083 ;\",\n    \"         wdt:P86 wd:Q2808 .\"\n    ]}\n "}
{"question": "List all the musicals with music by Elton John.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “List all the musicals with music by Elton John.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9424 is instance of\nkg:1957 is subclass of\nkg:3671 is dramatico-musical work\nkg:9607 is composer\nkg:2686 is Elton John", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?musical\",\n    \"WHERE {\",\n    \"?musical kg:3671 .\",\n    \"?musical kg:9607 kg:2686 .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the longest river in the world?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the longest river in the world?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?river\",\n    \"WHERE {\",\n    \"?river wdt:P31 wd:Q4022 ;\", \"# river is an instance of river\",\n    \"  wdt:P1813 ?length .\", \"# has length property\",\n    \"FILTER NOT EXISTS { ?otherRiver wdt:P31 wd:Q4022 ; wdt:P1813 ?otherLength . FILTER (?otherLength > ?length) }\", \"# no other river is longer\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "When was John Adams born?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “When was John Adams born?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  ?item wdt:P31 wd:Q5;\",\n    \"  ?item wdt:P1082 \\\"John Adams\\\"@en;\",\n    \"  ?item wdt:P569 ?birthDate.\",\n    \"}\"\n  ]\n}"}
{"question": "When was John Adams born?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “When was John Adams born?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q11806 is John Adams\nwdt:P569 is date of birth", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q11806 AS ?item).\",\n    \"  ?item wdt:P569 ?date.\",\n    \"}\"\n  ]\n}"}
{"question": "When was John Adams born?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “When was John Adams born?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5247 is John Adams\nkg:0188 is date of birth", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?birthDate\",\n    \"WHERE {\",\n    \"  kg:5247 kg:0188 ?birthDate .\",\n    \"}\"\n  ]\n}"}
{"question": "Which companies produce hovercrafts?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which companies produce hovercrafts?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q7397.\",\n    \"?item wdt:P452 ?hovercraft.\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Which companies produce hovercrafts?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which companies produce hovercrafts?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q185757 is hovercraft\nwdt:P176 is manufacturer", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?company\",\n    \"WHERE {\",\n    \"?product wdt:P31 wd:Q185757;\",\n    \"?product wdt:P176 ?company.\",\n    \"}\"\n  ]\n}"}
{"question": "Which companies produce hovercrafts?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which companies produce hovercrafts?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8283 is instance of\nkg:6744 is subclass of\nkg:6957 is hovercraft\nkg:1305 is manufacturer", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?company\",\n    \"WHERE {\",\n    \"?product kg:6957 true .\",\n    \"?product kg:1305 ?company .\",\n    \"}\"\n  ]\n}"}
{"question": "Who was the wife of U.S. president Lincoln?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who was the wife of U.S. president Lincoln?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q91 AS ?lincoln).\",\n    \"  ?lincoln wdt:P26 ?item.\",\n    \"}\"\n  ]\n}"}
{"question": "Who was the wife of U.S. president Lincoln?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who was the wife of U.S. president Lincoln?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q91 is Abraham Lincoln\nwdt:P26 is spouse", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q91 wdt:P26 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "Who was the wife of U.S. president Lincoln?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who was the wife of U.S. president Lincoln?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1470 is Abraham Lincoln\nkg:1740 is spouse", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?x\",\n    \"WHERE {\",\n    \"  kg:1470 kg:1740 ?x .\",\n    \"}\"\n  ]\n}"}
{"question": "Which species does an elephant belong?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which species does an elephant belong?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q729 \\\"?elephant\\\").\",\n    \"  ?elephant wdt:P171 ?item.\",\n    \"}\"\n  ]\n}"}
{"question": "Which species does an elephant belong?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which species does an elephant belong?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q7378 is elephant\nwdt:P279 is subclass of", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q7378 wdt:P279 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "Which species does an elephant belong?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which species does an elephant belong?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5477 is elephant\nkg:6250 is subclass of", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?species\",\n    \"WHERE {\",\n    \"  kg:5477 kg:6250 ?species .\",\n    \"}\"\n  ]\n}"}
{"question": "How many people live in the capital of Australia?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many people live in the capital of Australia?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q6850 AS ?capital)\", \"# Canberra, capital of Australia\",\n    \"  ?capital wdt:P1082 ?population.\",\n    \"  FILTER NOT EXISTS { ?capital wdt:P577 ?inception. }\", \"# exclude dates\",\n    \"}\"\n  ]\n}"}
{"question": "How many people live in the capital of Australia?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many people live in the capital of Australia?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q408 is Australia\nwdt:P36 is capital\nwdt:P1082 is population", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?capital ?population\",\n    \"WHERE {\",\n    \"  wd:Q408 wdt:P36 ?capital .\",\n    \"  ?capital wdt:P1082 ?population .\",\n    \"}\"\n  ]\n}"}
{"question": "How many people live in the capital of Australia?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many people live in the capital of Australia?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1226 is Australia\nkg:4676 is capital\nkg:8292 is population", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"  kg:1226 kg:4676 ?capital .\",\n    \"  ?capital kg:8292 ?population .\",\n    \"  BIND (?capital AS ?resource)\",\n    \"}\"\n  ]\n}"}
{"question": "In which ancient empire could you pay with cocoa beans?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “In which ancient empire could you pay with cocoa beans?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?empire\",\n    \"WHERE {\",\n    \"?empire wdt:P31 wd:Q7275 ;\", \"# empire is an instance of ancient civilization\",\n    \"wdt:P1129 ?currency .\", \"# has currency\",\n    \"?currency wdt:P279 wd:Q11348 .\" ,\", # subclass of cocoa bean\"\n    ]}\n   \t\t\t\t\t\t \t\t \t   \t\t\t"}
{"question": "In which ancient empire could you pay with cocoa beans?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “In which ancient empire could you pay with cocoa beans?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P38 is currency\nwd:Q208008 is cocoa bean", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?empire\",\n    \"WHERE {\",\n    \"?empire wdt:P38 wd:Q208008 .\",\n    \"}\"\n  ]\n}"}
{"question": "In which ancient empire could you pay with cocoa beans?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “In which ancient empire could you pay with cocoa beans?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7522 is currency\nkg:2855 is cocoa bean", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?empire\",\n    \"WHERE {\",\n    \"?empire kg:7522 kg:2855 .\",\n    \"}\"\n  ]\n}"}
{"question": "How many theories did Albert Einstein come up with?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many theories did Albert Einstein come up with?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?theory\",\n    \"WHERE {\",\n    \"  wd:Q937 bd:birthName ?name .\",\n    \"  FILTER(CONTAINS(lcase(?name), \\\"albert einstein\\\")) .\",\n    \"  wd:Q937 wdt:P800 ?theory .\",\n    \"}\"\n  ]\n}"}
{"question": "How many theories did Albert Einstein come up with?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many theories did Albert Einstein come up with?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q937 is Albert Einstein\nwdt:P800 is notable work", "response": "{\n  \"query\": [\n    \"SELECT ?theory\",\n    \"WHERE {\",\n    \"  wd:Q937 wdt:P800 ?theory.\",\n    \"}\"\n  ]\n}"}
{"question": "How many theories did Albert Einstein come up with?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many theories did Albert Einstein come up with?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9081 is Albert Einstein\nkg:7047 is notable work", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?theory\",\n    \"WHERE {\",\n    \"  kg:9081 kg:7047 ?theory .\",\n    \"}\"\n  ]\n}"}
{"question": "Who composed the soundtrack for Cameron's Titanic?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who composed the soundtrack for Cameron's Titanic?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?composer\",\n    \"WHERE {\",\n    \"  wd:Q46809 wdt:P86 ?composer .\",\n    \"}\"\n  ]\n}"}
{"question": "Who composed the soundtrack for Cameron's Titanic?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who composed the soundtrack for Cameron's Titanic?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q44578 is Titanic\nwdt:P86 is composer", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?composer\",\n    \"WHERE {\",\n    \"  wd:Q44578 wdt:P86 ?composer .\",\n    \"}\"\n  ]\n}"}
{"question": "Who composed the soundtrack for Cameron's Titanic?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who composed the soundtrack for Cameron's Titanic?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0524 is Titanic\nkg:2249 is composer", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?composer\",\n    \"WHERE {\",\n    \"  kg:0524 kg:composer ?composer .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me the runtime of Toy Story.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me the runtime of Toy Story.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  ?item wdt:P577 ?runtime.\",\n    \"  ?item wdt:P1476 \\\"Toy Story\\\"@en.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me the runtime of Toy Story.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me the runtime of Toy Story.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q171048 is Toy Story\nwdt:P2047 is duration", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?runtime\",\n    \"WHERE {\",\n    \"  wd:Q171048 wdt:P2047 ?runtime .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me the runtime of Toy Story.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me the runtime of Toy Story.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1514 is Toy Story\nkg:2430 is duration", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?runtime\",\n    \"WHERE {\",\n    \"  kg:1514 kg:2430 ?runtime .\",\n    \"}\"\n  ]\n}"}
{"question": "With how many countries Iran has borders?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “With how many countries Iran has borders?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"  wd:Q794 bind(wd:Q794 as ?iran).\",\n    \"  ?iran wdt:P47 ?country.\",\n    \"}\"\n  ]\n}"}
{"question": "With how many countries Iran has borders?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “With how many countries Iran has borders?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q794 is Iran\nwdt:P47 is shares border with", "response": "{\n \t\t\t    \t     \t\"query\": [\n \t   \"SELECT ?country\",\n \t   \"WHERE {\",\n \t   \"  wd:Q794 wdt:P47 ?country .\",\n \t   \"}\"\n \t]\n}"}
{"question": "With how many countries Iran has borders?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “With how many countries Iran has borders?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7701 is Iran\nkg:4645 is shares border with", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"  kg:7701 kg:4645 ?country .\",\n    \"}\"\n  ]\n}"}
{"question": "Which electronics companies were founded in Beijing?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which electronics companies were founded in Beijing?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q4837449;\",\n    \"      wdt:P112 wd:Q90;\",\n    \"      wdt:P17 wd:Q865.\",\n    \"}\"\n  ]\n}"}
{"question": "Which electronics companies were founded in Beijing?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which electronics companies were founded in Beijing?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P452 is industry\nwd:Q581105 is consumer electronics\nwdt:P740 is location of formation\nwd:Q956 is Beijing", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q4830453;\", \"# instance of company\",\n    \"?item wdt:P452 wd:Q581105;\", \"# industry consumer electronics\",\n    \"?item wdt:P740 wd:Q96.\" , \"# location of formation Beijing\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Which electronics companies were founded in Beijing?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which electronics companies were founded in Beijing?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1847 is industry\nkg:1205 is consumer electronics\nkg:3857 is location of formation\nkg:1374 is Beijing", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?company\",\n    \"WHERE {\",\n    \"?company kg:1847 kg:1205 ;\",\n    \"         kg:3857 kg:1374 .\",\n    \"}\"\n  ]\n}"}
{"question": "Who was the successor of John F. Kennedy?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who was the successor of John F. Kennedy?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?successor\",\n    \"WHERE {\",\n    \"  wd:Q9696 wdt:P1565 ?successor .\",\n    \"}\"\n  ]\n}"}
{"question": "Who was the successor of John F. Kennedy?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who was the successor of John F. Kennedy?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q9696 is John F. Kennedy\np:P39 is position held\nps:P39 is position held\nwd:Q11696 is President of the United States\npq:P1366 is replaced by", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"PREFIX wd: <http://www.wikidata.org/entity/>\",\n    \"SELECT ?successor\",\n    \"WHERE {\",\n    \"  wd:Q9696 p:P39 ?position .\",\n    \"  ?position ps:P39 wd:Q11696 .\",\n    \"  ?position pq:P1366 ?successor .\",\n    \"}\"\n  ]\n}"}
{"question": "Who was the successor of John F. Kennedy?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who was the successor of John F. Kennedy?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2479 is John F. Kennedy\nkg:8778 is position held\nkg:5867 is position held\nkg:9343 is President of the United States\nkg:6563 is replaced by", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?successor\",\n    \"WHERE {\",\n    \"  kg:2479 kg:6563 ?successor .\",\n    \"  ?successor kg:8778 kg:9343 .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the mayor of Paris?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is the mayor of Paris?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P6 wd:Q90.\",\n    \"?item wdt:P31 wd:Q5.\"\n    ]}\n "}
{"question": "Who is the mayor of Paris?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is the mayor of Paris?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q90 is Paris\nwdt:P6 is head of government", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?mayor\",\n    \"WHERE {\",\n    \"  wd:Q90 wdt:P6 ?mayor .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the mayor of Paris?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is the mayor of Paris?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6166 is Paris\nkg:8306 is head of government", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?mayor\",\n    \"WHERE {\",\n    \"  kg:6166 kg:8306 ?mayor .\",\n    \"}\"\n  ]\n}"}
{"question": "Did Arnold Schwarzenegger attend a university?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Did Arnold Schwarzenegger attend a university?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?university\",\n    \"WHERE {\",\n    \"  wd:Q5543 wdt:P69 ?university .\",\n    \"}\"\n  ]\n}"}
{"question": "Did Arnold Schwarzenegger attend a university?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Did Arnold Schwarzenegger attend a university?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q2685 is Arnold Schwarzenegger\nwdt:P69 is educated at\nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q3918 is university", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?university\",\n    \"WHERE {\",\n    \"  wd:Q2685 wdt:P69 ?university.\",\n    \"  ?university wdt:P31/wdt:P279* wd:Q3918.\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "Did Arnold Schwarzenegger attend a university?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Did Arnold Schwarzenegger attend a university?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7308 is Arnold Schwarzenegger\nkg:8876 is educated at\nkg:0688 is instance of\nkg:7030 is subclass of\nkg:3125 is university", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?university\",\n    \"WHERE {\",\n    \"  kg:7308 kg:8876 ?university .\",\n    \"  ?university kg:0688 ?type .\",\n    \"  ?type kg:7030 kg:3125 .\",\n    \"}\"\n  ]\n}"}
{"question": "Is James Bond married?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Is James Bond married?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q379100 AS ?jamesBond)\",\n    \"  ?jamesBond wdt:P26 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "Is James Bond married?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Is James Bond married?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q2009573 is James Bond\nwdt:P26 is spouse", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?spouse\",\n    \"WHERE {\",\n    \"  wd:Q2009573 wdt:P26 ?spouse .\",\n    \"}\"\n  ]\n}"}
{"question": "Is James Bond married?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Is James Bond married?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6381 is James Bond\nkg:3800 is spouse", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?spouse\",\n    \"WHERE {\",\n    \"  kg:6381 kg:3800 ?spouse .\",\n    \"}\"\n  ]\n}"}
{"question": "Does the Isar flow into a lake?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Does the Isar flow into a lake?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q182893 AS ?isar)\",\n    \"  ?isar wdt:P403 ?item.\",\n    \"  ?item wdt:P31 wd:Q23397.\"\n    ]}\n "}
{"question": "Does the Isar flow into a lake?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Does the Isar flow into a lake?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q106588 is Isar\nwdt:P403 is mouth of the watercourse\nwdt:P31 is instance of\nwd:Q23397 is lake", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?mouth\",\n    \"WHERE {\",\n    \"  wd:Q106588 wdt:P403 ?mouth .\",\n    \"  ?mouth wdt:P31 wd:Q23397 .\",\n    \"}\"\n  ]\n}"}
{"question": "Does the Isar flow into a lake?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Does the Isar flow into a lake?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5036 is Isar\nkg:9120 is mouth of the watercourse\nkg:4891 is instance of\nkg:5402 is lake", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?lake\",\n    \"WHERE {\",\n    \"  kg:5036 kg:9120 ?mouth .\",\n    \"  ?mouth kg:4891 ?type .\",\n    \"  ?type kg:5402 ?lake .\",\n    \"}\"\n  ]\n}"}
{"question": "Which Indian company has the most employees?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which Indian company has the most employees?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?company\",\n    \"WHERE {\",\n    \"?company wdt:P17 wd:Q668;\",\n    \"?company wdt:P112 ?employees.\",\n    \"{ SELECT ?company (MAX(?employees) AS ?max_employees)\",\n    \"WHERE {\",\n    \"?company wdt:P17 wd:Q668;\",\n    \"?company wdt:P112 ?employees.\",\n    \"}\",\n    \"GROUP BY ?company }\",\n    \"?company wdt:P112 ?max_employees.\",\n    \"}\"\n  ]\n}"}
{"question": "Which Indian company has the most employees?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which Indian company has the most employees?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q4830453 is business\nwdt:P17 is country\nwd:Q668 is India\nwdt:P1128 is employees", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?company\",\n    \"WHERE {\",\n    \"?company wdt:P31 wd:Q4830453 ;\",\n    \"         wdt:P17 wd:Q668 ;\",\n    \"         wdt:P1128 ?employees .\",\n    \"}\"\n  ]\n}"}
{"question": "Which Indian company has the most employees?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which Indian company has the most employees?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9039 is instance of\nkg:8788 is business\nkg:3619 is country\nkg:2811 is India\nkg:7645 is employees", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?company\",\n    \"WHERE {\",\n    \"?company kg:9039 kg:8788 .\",\n    \"?company kg:3619 kg:2811 .\",\n    \"?company kg:7645 ?employees .\",\n    \"FILTER NOT EXISTS { ?otherCompany kg:9039 kg:8788 ; kg:3619 kg:2811 ; kg:7645 ?otherEmployees . FILTER (?otherEmployees > ?employees) }\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Who was John F. Kennedy's vice president?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who was John F. Kennedy's vice president?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?vicePresident\",\n    \"WHERE {\",\n    \"  wd:Q9696 wdt:P40 ?vicePresident .\",\n    \"}\"\n  ]\n}"}
{"question": "Who was John F. Kennedy's vice president?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who was John F. Kennedy's vice president?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q9696 is John F. Kennedy\np:P39 is position held\nps:P39 is position held\nwd:Q11696 is President of the United States\npq:P580 is start time\npq:P582 is end time\np:P39 is position held\nps:P39 is position held\nwd:Q11699 is Vice President of the United States\npq:P580 is start time\npq:P582 is end time", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"PREFIX wd: <http://www.wikidata.org/entity/>\",\n    \"SELECT ?vicePresident\",\n    \"WHERE {\",\n    \"  wd:Q9696 p:P39 ?positionStatement .\",\n    \"  ?positionStatement ps:P39 wd:Q11696 ;\",\n    \"                  pq:P580 ?startTime ;\",\n    \"                  pq:P582 ?endTime .\",\n    \"  ?vicePresident p:P39 ?vicePresidentPosition .\",\n    \"  ?vicePresidentPosition ps:P39 wd:Q11699 ;\",\n    \"                         pq:P580 ?vicePresidentStartTime ;\",\n    \"                         pq:P582 ?vicePresidentEndTime .\",\n    \"  FILTER((?startTime = ?vicePresidentStartTime) && (?endTime = ?vicePresidentEndTime))\",\n    \"}\"\n  ]\n}"}
{"question": "Who was John F. Kennedy's vice president?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who was John F. Kennedy's vice president?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3069 is John F. Kennedy\nkg:4508 is position held\nkg:8952 is position held\nkg:0773 is President of the United States\nkg:0995 is start time\nkg:5626 is end time\nkg:4508 is position held\nkg:8952 is position held\nkg:0526 is Vice President of the United States\nkg:0995 is start time\nkg:5626 is end time", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?vicePresident\",\n    \"WHERE {\",\n    \"  kg:3069 kg:4508 ?position .\",\n    \"  ?position kg:0773 ?presidentPosition .\",\n    \"  FILTER (?presidentPosition = kg:0773)\",\n    \"  ?position kg:5626 ?endTime .\",\n    \"  ?position kg:0995 ?startTime .\",\n    \"  ?vicePresident kg:4508 ?vicePresidentPosition .\",\n    \"  ?vicePresidentPosition kg:0526 ?vicePresidentOfTheUS .\",\n    \"  FILTER (?vicePresidentOfTheUS = kg:0526 && ?startTime = ?endTime)\",\n    \"}\"\n  ]\n}"}
{"question": "Which country does the creator of Miffy come from?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which country does the creator of Miffy come from?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"  BIND(wd:Q170931 AS ?miffy).\",\n    \"  ?creator wdt:P800 ?miffy.\",\n    \"  ?creator wdt:P27 ?country.\",\n    \"}\"\n  ]\n}"}
{"question": "Which country does the creator of Miffy come from?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which country does the creator of Miffy come from?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q1501505 is Miffy\nwdt:P170 is creator\nwdt:P27 is country of citizenship", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"  wd:Q1501505 wdt:P170 ?creator .\",\n    \"  ?creator wdt:P27 ?country .\",\n    \"}\"\n  ]\n}"}
{"question": "Which country does the creator of Miffy come from?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which country does the creator of Miffy come from?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1126 is Miffy\nkg:0332 is creator\nkg:1594 is country of citizenship", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"  kg:1126 kg:0332 ?creator .\",\n    \"  ?creator kg:1594 ?country .\",\n    \"}\"\n  ]\n}"}
{"question": "In what city is the Heineken brewery?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “In what city is the Heineken brewery?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P112 ?heineken.\",\n    \"?heineken wdt:P131 ?city.\",\n    \"?heineken wdt:P171 ?brewery.\"\n    ]}\n "}
{"question": "In what city is the Heineken brewery?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “In what city is the Heineken brewery?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q854383 is Heineken\nwdt:P176 is manufacturer\nwdt:P159 is headquarters location", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q854383 wdt:P159 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "In what city is the Heineken brewery?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “In what city is the Heineken brewery?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2645 is Heineken\nkg:1943 is manufacturer\nkg:0447 is headquarters location", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?city\",\n    \"WHERE {\",\n    \"  kg:2645 kg:1943 ?brewery .\",\n    \"  ?brewery kg:0447 ?city .\",\n    \"}\"\n  ]\n}"}
{"question": "Is Barack Obama a democrat?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Is Barack Obama a democrat?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q76 AS ?item).\",\n    \"  ?item wdt:P102 wd:Q95.\",\n    \"}\"\n  ]\n}"}
{"question": "Is Barack Obama a democrat?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Is Barack Obama a democrat?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q76 is Barack Obama\nwdt:P102 is member of political party\nwd:Q29552 is Democratic Party", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q76 AS ?item).\",\n    \"  ?item wdt:P102 wd:Q29552.\",\n    \"}\"\n  ]\n}"}
{"question": "Is Barack Obama a democrat?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Is Barack Obama a democrat?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6237 is Barack Obama\nkg:0077 is member of political party\nkg:9901 is Democratic Party", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"  kg:6237 kg:0077 ?s .\",\n    \"  FILTER (?s = kg:9901)\",\n    \"}\"\n  ]\n}"}
{"question": "List the children of Margaret Thatcher.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “List the children of Margaret Thatcher.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?child\",\n    \"WHERE {\",\n    \"  wd:Q8785 wdt:P40 ?child .\",\n    \"}\"\n  ]\n}"}
{"question": "List the children of Margaret Thatcher.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “List the children of Margaret Thatcher.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q7416 is Margaret Thatcher\nwdt:P40 is child", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q7416 wdt:P40 ?item.\",\n    \"}\"\n  ]\n}"}
{"question": "List the children of Margaret Thatcher.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “List the children of Margaret Thatcher.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1671 is Margaret Thatcher\nkg:9715 is child", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?child\",\n    \"WHERE {\",\n    \"  kg:1671 kg:9715 ?child .\",\n    \"}\"\n  ]\n}"}
{"question": "how big is the total area of North Rhine- Westphalia?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “how big is the total area of North Rhine- Westphalia?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?area\",\n    \"WHERE {\",\n    \"  BIND(wd:Q1197 AS ?northRhineWestphalia)\",\n    \"  ?northRhineWestphalia wdt:P2046 ?area .\",\n    \"}\"\n  ]\n}"}
{"question": "how big is the total area of North Rhine- Westphalia?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “how big is the total area of North Rhine- Westphalia?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q1198 is North Rhine-Westphalia\nwdt:P2046 is area", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q1198 AS ?item).\",\n    \"  ?item wdt:P2046 ?area.\",\n    \"}\"\n  ]\n}"}
{"question": "how big is the total area of North Rhine- Westphalia?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “how big is the total area of North Rhine- Westphalia?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2319 is North Rhine-Westphalia\nkg:6965 is area", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?area\",\n    \"WHERE {\",\n    \"  kg:2319 kg:6965 ?area .\",\n    \"}\"\n  ]\n}"}
{"question": "Which city has the most inhabitants?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which city has the most inhabitants?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?city\",\n    \"WHERE {\",\n    \"  ?city wdt:P31 wd:Q515 .\", \"# city is an instance of city\",\n    \"  ?city wdt:P1082 ?population .\", \"# population of the city\",\n    \"}\",\n    \"ORDER BY DESC(?population)\",\n    \"LIMIT 1\"\n  ]\n}"}
{"question": "Which city has the most inhabitants?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which city has the most inhabitants?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q515 is city\nwdt:P1082 is population", "response": "{\n  \"query\": [\n    \"SELECT ?city\",\n    \"WHERE {\",\n    \"?city wdt:P31 wd:Q515.\",\n    \"?city wdt:P1082 ?population.\",\n    \"}\"\n  ]\n}"}
{"question": "Which city has the most inhabitants?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which city has the most inhabitants?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0594 is instance of\nkg:1015 is subclass of\nkg:4012 is city\nkg:0154 is population", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?city\",\n    \"WHERE {\",\n    \"?city kg:4012 .\",\n    \"?city kg:0154 ?population .\",\n    \"{ SELECT ?city (MAX(?population) AS ?maxPopulation)\",\n    \"WHERE {\",\n    \"?city kg:4012 .\",\n    \"?city kg:0154 ?population .\",\n    \"}\",\n    \"} \",\n    \"FILTER (?population = ?maxPopulation).\",\n    \"}\"\n  ]\n}"}
{"question": "What is Donald Trump's main business?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is Donald Trump's main business?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?business\",\n    \"WHERE {\",\n    \"  BIND(wd:Q22686 AS ?trump)\",\n    \"  ?trump wdt:P112 ?business\"\n    ]}\n "}
{"question": "What is Donald Trump's main business?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is Donald Trump's main business?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P488 is chairperson\nwd:Q22686 is Donald Trump\nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q4830453 is business\nwdt:P576 is dissolved, abolished or demolished date", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?business\",\n    \"WHERE {\",\n    \"  wd:Q22686 wdt:P488 ?company .\",\n    \"  ?company wdt:P31/wdt:P279* wd:Q4830453 .\",\n    \"  FILTER NOT EXISTS { ?company wdt:P576 [] }\",\n    \"  BIND(?company AS ?business)\",\n    \"}\"\n  ]\n}"}
{"question": "What is Donald Trump's main business?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is Donald Trump's main business?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4832 is chairperson\nkg:2038 is Donald Trump\nkg:0886 is instance of\nkg:5264 is subclass of\nkg:3913 is business\nkg:3936 is dissolved, abolished or demolished date", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?business\",\n    \"WHERE {\",\n    \"  kg:2038 kg:4832 ?company .\",\n    \"  ?company kg:0886 kg:3913 .\",\n    \"  BIND(?company AS ?business)\",\n    \"}\"\n  ]\n}"}
{"question": "When will start the final match of the football world cup 2018?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “When will start the final match of the football world cup 2018?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?match\",\n    \"WHERE {\",\n    \"?match wdt:P31 wd:Q11906364 ;\", \"# instance of football match\",\n    \"wdt:P361 wd:Q45829 ;      # part of FIFA World Cup 2018\",\n    \"wdt:P834 'final match'@en. # final match\"\n    ]}\n   \t\t\t\t\t\t    \t  \t   "}
{"question": "When will start the final match of the football world cup 2018?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “When will start the final match of the football world cup 2018?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q170645 is 2018 FIFA World Cup\nwdt:P3967 is final event\nwdt:P580 is start time", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?finalEvent\",\n    \"WHERE {\",\n    \"  wd:Q170645 wdt:P3967 ?finalEvent .\",\n    \"  ?finalEvent wdt:P580 ?startTime .\",\n    \"}\"\n  ]\n}"}
{"question": "When will start the final match of the football world cup 2018?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “When will start the final match of the football world cup 2018?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7606 is 2018 FIFA World Cup\nkg:2755 is final event\nkg:9531 is start time", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"  ?event kg:2755 kg:7606;\",\n    \"         kg:9531 ?resource.\",\n    \"}\"\n  ]\n}"}
{"question": "Which films did Stanley Kubrick direct?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which films did Stanley Kubrick direct?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?film\",\n    \"WHERE {\",\n    \"  ?film wdt:P57 wd:Q9073 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which films did Stanley Kubrick direct?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which films did Stanley Kubrick direct?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P57 is director\nwd:Q2001 is Stanley Kubrick", "response": "{\n  \"query\": [\n    \"SELECT ?film\",\n    \"WHERE {\",\n    \"  ?film wdt:P57 wd:Q2001 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which films did Stanley Kubrick direct?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which films did Stanley Kubrick direct?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7961 is director\nkg:1127 is Stanley Kubrick", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?film\",\n    \"WHERE {\",\n    \"  ?film kg:7961 kg:1127 .\",\n    \"}\"\n  ]\n}"}
{"question": "how much is the population Iraq?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “how much is the population Iraq?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q796) AS ?item.\",\n    \"  ?item wdt:P1082 ?population.\"\n    ]}\n "}
{"question": "how much is the population Iraq?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “how much is the population Iraq?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q796 is Iraq\nwdt:P1082 is population", "response": "{\n  \"query\": [\n    \"SELECT ?population\",\n    \"WHERE {\",\n    \"  wd:Q796 wdt:P1082 ?population .\",\n    \"}\"\n  ]\n}"}
{"question": "how much is the population Iraq?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “how much is the population Iraq?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9047 is Iraq\nkg:6595 is population", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?population\",\n    \"WHERE {\",\n    \"  kg:9047 kg:6595 ?population .\",\n    \"}\"\n  ]\n}"}
{"question": "How many inhabitants does the largest city in Canada have?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many inhabitants does the largest city in Canada have?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?city ?inhabitants\",\n    \"WHERE {\",\n    \"?city wdt:P31 wd:Q515; # city\",\n    \"      wdt:P17 wd:Q16; # Canada\",\n    \"      wdt:P1082 ?inhabitants. # population\",\n    \"    { SELECT ?city (MAX(?population) AS ?maxPopulation)\",\n    \"      WHERE {\",\n    \"        ?city wdt:P31 wd:Q515;\",\n    \"              wdt:P17 wd:Q16;\",\n    \"              wdt:P1082 ?population.\",\n    \"      }\",\n    \"      GROUP BY ?city\",\n    \"    }\",\n    \"    FILTER(?inhabitants = ?maxPopulation).\",\n    \"  }\"\n  ]\n}"}
{"question": "How many inhabitants does the largest city in Canada have?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many inhabitants does the largest city in Canada have?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P17 is country\nwd:Q16 is Canada\nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q515 is city\nwdt:P1082 is population", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?city\",\n    \"WHERE {\",\n    \"?city wdt:P31 wd:Q515 ;\",\n    \"       wdt:P17 wd:Q16.\",\n    \"?largestCity wdt:P31 wd:Q515 ;\",\n    \"             wdt:P17 wd:Q16 ;\",\n    \"             wdt:P1082 ?maxPopulation.\",\n    \"{ SELECT ?city (MAX(?population) AS ?maxPopulation)\",\n    \"   WHERE {\",\n    \"     ?city wdt:P31 wd:Q515 ;\",\n    \"           wdt:P17 wd:Q16 ;\",\n    \"           wdt:P1082 ?population.\",\n    \"   }\",\n    \" }\",\n    \"FILTER NOT EXISTS {\",\n    \"  ?otherCity wdt:P31 wd:Q515 ;\",\n    \"                  wdt:P17 wd:Q16 ;\",\n    \"                  wdt:P1082 ?otherPopulation.\",\n    \"  FILTER (?otherPopulation > ?maxPopulation).\",\n    \"}\"\n  ]\n  }\n "}
{"question": "How many inhabitants does the largest city in Canada have?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many inhabitants does the largest city in Canada have?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2883 is country\nkg:0179 is Canada\nkg:5210 is instance of\nkg:9923 is subclass of\nkg:1418 is city\nkg:1232 is population", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?city\",\n    \"WHERE {\",\n    \"?city kg:5210 kg:1418 .\",\n    \"?city kg:1232 ?population .\",\n    \"{ SELECT ?maxCity (MAX(?pop) AS ?maxPop)\",\n    \"WHERE {\",\n    \"?c kg:5210 kg:1418 .\",\n    \"?c kg:1232 ?pop .\",\n    \"} GROUP BY ?maxCity }\",\n    \"?city kg:1232 ?population .\",\n    \"FILTER (?population = ?maxPop)\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the mayor of the capital of French Polynesia?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is the mayor of the capital of French Polynesia?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?mayor\",\n    \"WHERE {\",\n    \"?capital wdt:P31 wd:Q515; wdt:P1376 ?country.\",\n    \"?country wdt:P30 wd:Q683; wdt:P276 ?capital.\",\n    \"?capital wdt:P6 ?mayor.\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Who is the mayor of the capital of French Polynesia?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is the mayor of the capital of French Polynesia?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q30971 is French Polynesia\nwdt:P36 is capital\nwdt:P6 is head of government", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?mayor\",\n    \"WHERE {\",\n    \"  wd:Q30971 wdt:P36 ?capital .\",\n    \"  ?capital wdt:P6 ?mayor .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the mayor of the capital of French Polynesia?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is the mayor of the capital of French Polynesia?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6320 is French Polynesia\nkg:6865 is capital\nkg:4430 is head of government", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?mayor\",\n    \"WHERE {\",\n    \"  kg:6320 kg:6865 ?capital .\",\n    \"  ?capital kg:4430 ?mayor .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all actors starring in movies directed by William Shatner.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all actors starring in movies directed by William Shatner.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"?movie wdt:P57 wd:Q106341.\",\n    \"?movie wdt:P161 ?actor.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all actors starring in movies directed by William Shatner.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all actors starring in movies directed by William Shatner.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q11424 is film\nwdt:P57 is director\nwd:Q16297 is William Shatner\nwdt:P161 is cast member", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"?movie wdt:P31 wd:Q11424;\",\n    \"       wdt:P57 wd:Q16297.\",\n    \"?movie wdt:P161 ?actor.\"\n    ]}\n "}
{"question": "Give me all actors starring in movies directed by William Shatner.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all actors starring in movies directed by William Shatner.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3780 is instance of\nkg:4610 is film\nkg:8975 is director\nkg:8436 is William Shatner\nkg:3866 is cast member", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"?movie kg:4610 .\",\n    \"?movie kg:8975 kg:8436 .\",\n    \"?movie kg:3866 ?actor .\",\n    \"}\"\n  ]\n}"}
{"question": "How tall is Claudia Schiffer?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How tall is Claudia Schiffer?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?height\",\n    \"WHERE {\",\n    \"  BIND(wd:Q57393 AS ?item).\",\n    \"  ?item wdt:P2048 ?height.\",\n    \"}\"\n  ]\n}"}
{"question": "How tall is Claudia Schiffer?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How tall is Claudia Schiffer?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q76717 is Claudia Schiffer\nwdt:P2048 is height", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?height\",\n    \"WHERE {\",\n    \"  wd:Q76717 wdt:P2048 ?height .\",\n    \"}\"\n  ]\n}"}
{"question": "How tall is Claudia Schiffer?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How tall is Claudia Schiffer?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9771 is Claudia Schiffer\nkg:7932 is height", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?height\",\n    \"WHERE {\",\n    \"  kg:9771 kg:7932 ?height .\",\n    \"}\"\n  ]\n}"}
{"question": "how much is the population densty rank of germany?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “how much is the population densty rank of germany?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q183 \\\"?country\\\").\",\n    \"  ?country wdt:P1082 ?population.\",\n    \"  ?country wdt:P2046 ?area.\",\n    \"  BIND(?population / ?area AS ?density).\",\n    \"  { SELECT (COUNT(DISTINCT ?x) AS ?rank)\",\n    \"    WHERE {\",\n    \"      ?x wdt:P1082 ?p.\",\n    \"      ?x wdt:P2046 ?a.\",\n    \"      FILTER (?p / ?a > ?density).\",\n    \"    }\",\n    \"  }\",\n    \"}\"\n  ]\n}"}
{"question": "how much is the population densty rank of germany?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “how much is the population densty rank of germany?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q6256 is country\nwdt:P1082 is population\nwdt:P2046 is area\nwd:Q183 is Germany\nwdt:P1082 is population\nwd:Q183 is Germany\nwdt:P2046 is area", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q6256 .\",\n    \"?item wdt:P1082 ?population .\",\n    \"?item wdt:P2046 ?area .\",\n    \"FILTER (?item = wd:Q183)\",\n    \"BIND ((?population / ?area) AS ?density)\",\n    \"SERVICE wikibase:label { bd:serviceParam wikibase:language \\\"en\\\" }\",\n    \"}\"\n  ]\n}"}
{"question": "how much is the population densty rank of germany?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “how much is the population densty rank of germany?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1872 is instance of\nkg:6284 is country\nkg:2685 is population\nkg:5831 is area\nkg:7906 is Germany\nkg:2685 is population\nkg:7906 is Germany\nkg:5831 is area", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"  ?resource kg:6284 kg:7906 ;\",\n    \"           kg:2685 ?population ;\",\n    \"           kg:5831 ?area .\",\n    \"  BIND (?population / ?area AS ?density)\",\n    \"  { SELECT (COUNT(DISTINCT ?x) + 1 AS ?rank) \",\n    \"    WHERE {\",\n    \"      ?x kg:6284 [] ;\",\n    \"           kg:2685 ?pop ;\",\n    \"           kg:5831 ?ar .\",\n    \"      BIND (?pop / ?ar AS ?den)\",\n    \"      FILTER (?den > ?density)\",\n    \"    }\",\n    \"  }\"\n  ]\n}"}
{"question": "What is the highest mountain in Italy?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the highest mountain in Italy?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q8502 ;\", \"# mountain\",\n    \"wdt:P17 wd:Q38 ;\", \"# located in Italy\",\n    \"?rank wdt:P1319 ?item .\", \"# highest point\"\n    ]}\n "}
{"question": "What is the highest mountain in Italy?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the highest mountain in Italy?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q8502 is mountain\nwdt:P17 is country\nwd:Q38 is Italy\nwdt:P2044 is elevation above sea level", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?mountain\",\n    \"WHERE {\",\n    \"?mountain wdt:P31 wd:Q8502 ;\",\n    \"         wdt:P17 wd:Q38 ;\",\n    \"         wdt:P2044 ?elevation .\",\n    \"}\",\n    \"ORDER BY DESC(?elevation)\",\n    \"LIMIT 1\"\n  ]\n}"}
{"question": "What is the highest mountain in Italy?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the highest mountain in Italy?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0462 is instance of\nkg:4464 is mountain\nkg:5176 is country\nkg:5061 is Italy\nkg:4947 is elevation above sea level", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?mountain\",\n    \"WHERE {\",\n    \"?mountain kg:0462 kg:4464 ;\",\n    \"         kg:5176 kg:5061 ;\",\n    \"         kg:4947 ?elevation .\",\n    \"FILTER NOT EXISTS {\",\n    \"?otherMountain kg:0462 kg:4464 ;\",\n    \"                   kg:5176 kg:5061 ;\",\n    \"                   kg:4947 ?otherElevation .\",\n    \"FILTER (?otherElevation > ?elevation)\",\n    \"}\"\n  ]\n}\n "}
{"question": "List all games by GMT.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “List all games by GMT.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?game\",\n    \"WHERE {\",\n    \"?game wdt:P123 ?gmt.\",\n    \"}\"\n  ]\n}"}
{"question": "List all games by GMT.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “List all games by GMT.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q11410 is game\nwdt:P123 is publisher\nwd:Q928726 is GMT Games", "response": "{\n  \"query\": [\n    \"SELECT ?game\",\n    \"WHERE {\",\n    \"?game wdt:P31 wd:Q11410.\",\n    \"?game wdt:P123 wd:Q928726.\"\n    ]}\n \t\t \t\t    \t  \t   \t\t\t"}
{"question": "List all games by GMT.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “List all games by GMT.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9566 is instance of\nkg:6944 is subclass of\nkg:8759 is game\nkg:9432 is publisher\nkg:2847 is GMT Games", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?game\",\n    \"WHERE {\",\n    \"?game kg:9432 kg:2847 .\",\n    \"?game kg:8759 [] .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the official language of Suriname?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the official language of Suriname?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q730 wd:?country).\",\n    \"  ?country wdt:P37 ?item.\",\n    \"}\"\n  ]\n}"}
{"question": "What is the official language of Suriname?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the official language of Suriname?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q730 is Suriname\nwdt:P37 is official language", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q730 wdt:P37 ?item.\",\n    \"}\"\n  ]\n}"}
{"question": "What is the official language of Suriname?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the official language of Suriname?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4116 is Suriname\nkg:0803 is official language", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?language\",\n    \"WHERE {\",\n    \"  kg:4116 kg:0803 ?language .\",\n    \"}\"\n  ]\n}"}
{"question": "In which city did Nikos Kazantzakis die?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “In which city did Nikos Kazantzakis die?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?city\",\n    \"WHERE {\",\n    \"  wd:Q131694 wdt:P20 ?death .\", \"# Nikos Kazantzakis died in\",\n    \"  ?death wdt:P276 ?city .\", \"# city of death\",\n    \"}\"\n  ]\n}"}
{"question": "In which city did Nikos Kazantzakis die?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “In which city did Nikos Kazantzakis die?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q214622 is Nikos Kazantzakis\nwdt:P20 is place of death", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q214622 wdt:P20 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "In which city did Nikos Kazantzakis die?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “In which city did Nikos Kazantzakis die?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2723 is Nikos Kazantzakis\nkg:5439 is place of death", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?city\",\n    \"WHERE {\",\n    \"  kg:2723 kg:5439 ?city .\",\n    \"}\"\n  ]\n}"}
{"question": "In which country is the Limerick Lake?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “In which country is the Limerick Lake?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"  wd:Q18645350 wdt:P17 ?country .\",\n    \"}\"\n  ]\n}"}
{"question": "In which country is the Limerick Lake?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “In which country is the Limerick Lake?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q6386177 is Limerick Lake\nwdt:P17 is country", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"  wd:Q6386177 wdt:P17 ?country .\",\n    \"}\"\n  ]\n}"}
{"question": "In which country is the Limerick Lake?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “In which country is the Limerick Lake?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7230 is Limerick Lake\nkg:3882 is country", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"  kg:7230 kg:locatedIn ?country .\",\n    \"  FILTER (?country = kg:3882)\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all members of Prodigy.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all members of Prodigy.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?member\",\n    \"WHERE {\",\n    \"?band wdt:P170 ?member .\",\n    \"?band wdt:P112 ?genre .\",\n    \"FILTER (?genre = wd:Q1519544) .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all members of Prodigy.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all members of Prodigy.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P463 is member of\nwd:Q7256860 is The Prodigy", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?member\",\n    \"WHERE {\",\n    \"?member wdt:P463 wd:Q7256860 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all members of Prodigy.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all members of Prodigy.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2552 is member of\nkg:5036 is The Prodigy", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?member\",\n    \"WHERE {\",\n    \"?member kg:2552 kg:5036 .\",\n    \"}\"\n  ]\n}"}
{"question": "In which time zone is Rome?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “In which time zone is Rome?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q90 AS ?city)\", \"# Rome\",\n    \"  ?city wdt:P421 ?item .\", \"# time zone\"\n    ]}\n                 \t\t"}
{"question": "In which time zone is Rome?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “In which time zone is Rome?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q220 is Rome\nwdt:P421 is located in time zone", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q220 wdt:P421 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "In which time zone is Rome?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “In which time zone is Rome?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1360 is Rome\nkg:1359 is located in time zone", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?timeZone\",\n    \"WHERE {\",\n    \"  kg:1360 kg:1359 ?timeZone .\",\n    \"}\"\n  ]\n}"}
{"question": "Who are the writers of the Wall album of Pink Floyd?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who are the writers of the Wall album of Pink Floyd?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?writer\",\n    \"WHERE {\",\n    \"  wd:Q212928 wdt:P218 ?album .\",\n    \"  ?album wdt:P162 ?writer .\",\n    \"  FILTER NOT EXISTS { ?writer wdt:P31 wd:Q5 }\",\n    \"}\"\n  ]\n}"}
{"question": "Who are the writers of the Wall album of Pink Floyd?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who are the writers of the Wall album of Pink Floyd?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q151114 is The Wall\nwdt:P658 is tracklist\nwdt:P162 is producer", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?writer\",\n    \"WHERE {\",\n    \"  wd:Q151114 wdt:P162 ?writer .\",\n    \"}\"\n  ]\n}"}
{"question": "Who are the writers of the Wall album of Pink Floyd?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who are the writers of the Wall album of Pink Floyd?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2920 is The Wall\nkg:8526 is tracklist\nkg:1210 is producer", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?writer\",\n    \"WHERE {\",\n    \"  kg:2920 kg:writer ?writer .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the mayor of Rotterdam?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is the mayor of Rotterdam?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P6 wd:Q9899.\",\n    \"?item wdt:P31 wd:Q5.\"\n    ]}\n "}
{"question": "Who is the mayor of Rotterdam?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is the mayor of Rotterdam?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q34370 is Rotterdam\nwdt:P6 is head of government", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q34370 wdt:P6 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the mayor of Rotterdam?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is the mayor of Rotterdam?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9506 is Rotterdam\nkg:5120 is head of government", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?mayor\",\n    \"WHERE {\",\n    \"  kg:9506 kg:5120 ?mayor .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the largest city in Australia?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the largest city in Australia?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q515; # instance of city\",\n    \"wdt:P17 wd:Q408; # country Australia\",\n    \"FILTER NOT EXISTS { ?item wdt:P279 wd:Q13220204 }\", \"# not an ancient city\",\n    \"} ORDER BY DESC(?population) LIMIT 1\"\n  ]\n}"}
{"question": "What is the largest city in Australia?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the largest city in Australia?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q515 is city\nwdt:P17 is country\nwd:Q408 is Australia\nwdt:P1082 is population", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?city\",\n    \"WHERE {\",\n    \"?city wdt:P31 wd:Q515 .\", \"# city is instance of city\",\n    \"?city wdt:P17 wd:Q408 .\", \"# city is in Australia\",\n    \"{ SELECT ?city (MAX(?population) AS ?maxPopulation)\",\n    \"WHERE {\",\n    \"?city wdt:P31 wd:Q515 .\",\n    \"?city wdt:P17 wd:Q408 .\",\n    \"?city wdt:P1082 ?population .\",\n    \"}\",\n    \"GROUP BY ?city }\",\n    \"}\"\n  ]\n  }\n "}
{"question": "What is the largest city in Australia?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the largest city in Australia?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5863 is instance of\nkg:8388 is subclass of\nkg:7831 is city\nkg:3186 is country\nkg:6561 is Australia\nkg:6373 is population", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?city\",\n    \"WHERE {\",\n    \"?city kg:7831 .\",\n    \"?city kg:8388 kg:6561 .\",\n    \"{ SELECT ?city (MAX(?population) AS ?maxPopulation)\",\n    \"WHERE {\",\n    \"?city kg:7831 .\",\n    \"?city kg:8388 kg:6561 .\",\n    \"?city kg:6373 ?population .\",\n    \"}\",\n    \"GROUP BY ?city }\",\n    \"}\"\n  ]\n}"}
{"question": "Who was married to president Chirac?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who was married to president Chirac?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P26 wd:Q1410 .\",\n    \"}\"\n  ]\n}"}
{"question": "Who was married to president Chirac?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who was married to president Chirac?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q2105 is Jacques Chirac\nwdt:P26 is spouse", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q2105 wdt:P26 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "Who was married to president Chirac?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who was married to president Chirac?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9082 is Jacques Chirac\nkg:5189 is spouse", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?x\",\n    \"WHERE {\",\n    \"  kg:9082 kg:5189 ?x .\",\n    \"}\"\n  ]\n}"}
{"question": "What form of government is found in South Africa?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What form of government is found in South Africa?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?formOfGovernment\",\n    \"WHERE {\",\n    \"  wd:Q258 dcterms:subject ?formOfGovernment .\",\n    \"  ?formOfGovernment wdt:P31 wd:Q7277 .\",\n    \"}\"\n  ]\n}"}
{"question": "What form of government is found in South Africa?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What form of government is found in South Africa?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q258 is South Africa\nwdt:P122 is basic form of government", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?government\",\n    \"WHERE {\",\n    \"  wd:Q258 wdt:P122 ?government .\",\n    \"}\"\n  ]\n}"}
{"question": "What form of government is found in South Africa?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What form of government is found in South Africa?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5595 is South Africa\nkg:3788 is basic form of government", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?g\",\n    \"WHERE {\",\n    \"  kg:5595 kg:3788 ?g .\",\n    \"}\"\n  ]\n}"}
{"question": "How high is the Yokohama Marine Tower?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How high is the Yokohama Marine Tower?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q1142866 AS ?item).\",\n    \"  ?item wdt:P2048 ?height.\",\n    \"}\"\n  ]\n}"}
{"question": "How high is the Yokohama Marine Tower?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How high is the Yokohama Marine Tower?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q1207989 is Yokohama Marine Tower\nwdt:P2048 is height", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?height\",\n    \"WHERE {\",\n    \"  wd:Q1207989 wdt:P2048 ?height .\",\n    \"}\"\n  ]\n}"}
{"question": "How high is the Yokohama Marine Tower?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How high is the Yokohama Marine Tower?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8468 is Yokohama Marine Tower\nkg:6687 is height", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?height\",\n    \"WHERE {\",\n    \"  kg:8468 kg:6687 ?height .\",\n    \"}\"\n  ]\n}"}
{"question": "Which holidays are celebrated around the world?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which holidays are celebrated around the world?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q42889.\",\n    \"?item wdt:P17 ?country.\",\n    \"}\"\n  ]\n}"}
{"question": "Which holidays are celebrated around the world?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which holidays are celebrated around the world?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q1445650 is holiday", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q1445650.\",\n    \"}\"\n  ]\n}"}
{"question": "Which holidays are celebrated around the world?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which holidays are celebrated around the world?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4076 is instance of\nkg:0736 is subclass of\nkg:9171 is holiday", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?holiday\",\n    \"WHERE {\",\n    \"?holiday kg:9171 \\\"true\\\"^^xsd:boolean .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the tallest basketball player?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is the tallest basketball player?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P106 wd:Q3665640 ;\", \"# basketball player\",\n    \"wdt:P2453 ?height .\", \"# height in cm, but we don't care about the value here\",\n    \"} ORDER BY DESC(?height) LIMIT 1\"\n  ]\n}"}
{"question": "Who is the tallest basketball player?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is the tallest basketball player?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P106 is occupation\nwd:Q3665646 is basketball player\nwdt:P2048 is height", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P106 wd:Q3665646;\",\n    \"?item wdt:P2048 ?height.\",\n    \"FILTER NOT EXISTS {\",\n    \"?other wdt:P106 wd:Q3665646;\",\n    \"?other wdt:P2048 ?otherHeight.\",\n    \"FILTER (?other != ?item && ?otherHeight > ?height).\",\n    \"}\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the tallest basketball player?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is the tallest basketball player?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8059 is occupation\nkg:4937 is basketball player\nkg:1141 is height", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?player\",\n    \"WHERE {\",\n    \"?player kg:8059 kg:4937 ;\",\n    \"       kg:1141 ?height .\",\n    \"FILTER NOT EXISTS {\",\n    \"?other kg:8059 kg:4937 ;\",\n    \"         kg:1141 ?otherHeight .\",\n    \"FILTER (?other != ?player && ?otherHeight > ?height)\",\n    \"}\"\n  ]\n}\n "}
{"question": "How many languages are spoken in Turkmenistan?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many languages are spoken in Turkmenistan?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?language\",\n    \"WHERE {\",\n    \"?country wdt:P31 wd:Q17 ;\",\n    \"       wdt:P407 ?language .\",\n    \"FILTER (?country = wd:Q855)\" ,\n    \"}\"\n  ]\n}"}
{"question": "How many languages are spoken in Turkmenistan?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many languages are spoken in Turkmenistan?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q874 is Turkmenistan\nwdt:P2936 is language used", "response": "{\n  \"query\": [\n    \"SELECT ?language\",\n    \"WHERE {\",\n    \"  wd:Q874 wdt:P2936 ?language .\",\n    \"}\"\n  ]\n}"}
{"question": "How many languages are spoken in Turkmenistan?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many languages are spoken in Turkmenistan?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8750 is Turkmenistan\nkg:5009 is language used", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?language\",\n    \"WHERE {\",\n    \"  kg:8750 kg:5009 ?language .\",\n    \"}\"\n  ]\n}"}
{"question": "Did Che Guevara have children?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Did Che Guevara have children?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?child\",\n    \"WHERE {\",\n    \"  wd:Q3950 wdt:P40 ?child .\",\n    \"}\"\n  ]\n}"}
{"question": "Did Che Guevara have children?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Did Che Guevara have children?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q5809 is Che Guevara\nwdt:P40 is child", "response": "{\n  \"query\": [\n    \"SELECT ?child\",\n    \"WHERE {\",\n    \"  wd:Q5809 wdt:P40 ?child .\",\n    \"}\"\n  ]\n}"}
{"question": "Did Che Guevara have children?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Did Che Guevara have children?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4932 is Che Guevara\nkg:0068 is child", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?child\",\n    \"WHERE {\",\n    \"  kg:4932 kg:0068 ?child .\",\n    \"}\"\n  ]\n}"}
{"question": "Did Kaurismäki ever win the Grand Prix at Cannes?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Did Kaurismäki ever win the Grand Prix at Cannes?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  ?item wdt:P166 wd:Q106625434;\",\n    \"  ?item wdt:P800 wd:Q168514;\"\n    ]}\n "}
{"question": "Did Kaurismäki ever win the Grand Prix at Cannes?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Did Kaurismäki ever win the Grand Prix at Cannes?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q276186 is Aki Kaurismäki\nwdt:P166 is award received\nwd:Q844804 is Cannes Film Festival Grand Prix", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q276186 wdt:P166 wd:Q844804.\",\n    \"  BIND(wd:Q276186 AS ?item)\",\n    \"}\"\n  ]\n}"}
{"question": "Did Kaurismäki ever win the Grand Prix at Cannes?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Did Kaurismäki ever win the Grand Prix at Cannes?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8458 is Aki Kaurismäki\nkg:1315 is award received\nkg:1066 is Cannes Film Festival Grand Prix", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"  kg:8458 kg:1315 ?award .\",\n    \"  ?award kg:1066 ?resource .\",\n    \"}\"\n  ]\n}"}
{"question": "To which party does the mayor of Paris belong?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “To which party does the mayor of Paris belong?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?party\",\n    \"WHERE {\",\n    \"  wd:Q90 wdt:P6 ?mayor .\",\n    \"  ?mayor wdt:P102 ?party .\",\n    \"}\"\n  ]\n}"}
{"question": "To which party does the mayor of Paris belong?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “To which party does the mayor of Paris belong?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q90 is Paris\nwdt:P6 is head of government\nwdt:P102 is member of political party", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?party\",\n    \"WHERE {\",\n    \"  wd:Q90 wdt:P6 ?mayor .\",\n    \"  ?mayor wdt:P102 ?party .\",\n    \"}\"\n  ]\n}"}
{"question": "To which party does the mayor of Paris belong?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “To which party does the mayor of Paris belong?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2333 is Paris\nkg:5416 is head of government\nkg:5588 is member of political party", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?party\",\n    \"WHERE {\",\n    \"  ?mayor kg:5416 kg:2333 .\",\n    \"  ?mayor kg:5588 ?party .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the Formula 1 race driver with the most races?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is the Formula 1 race driver with the most races?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?driver\",\n    \"WHERE {\",\n    \"?driver wdt:P106 wd:Q28796707;\",\n    \"      wdt:P161 wd:Q53871.\",\n    \"?driver wdt:P135 ?team.\",\n    \"?race wdt:P162 ?driver.\",\n    \"  { SELECT ?driver (COUNT(?race) AS ?numRaces)\",\n    \"    WHERE {\",\n    \"      ?driver wdt:P106 wd:Q28796707;\",\n    \"            wdt:P161 wd:Q53871.\",\n    \"      ?driver wdt:P135 ?team.\",\n    \"      ?race wdt:P162 ?driver.\",\n    \"    } GROUP BY ?driver\",\n    \"  } ORDER BY DESC(?numRaces) LIMIT 1\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Who is the Formula 1 race driver with the most races?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is the Formula 1 race driver with the most races?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P106 is occupation\nwd:Q10841764 is Formula One driver\nwdt:P1350 is number of matches played/races/starts", "response": "{\n  \"query\": [\n    \"SELECT ?driver\",\n    \"WHERE {\",\n    \"?driver wdt:P106 wd:Q10841764.\",\n    \"?driver wdt:P1350 ?numRaces.\",\n    \"{ SELECT ?driver (MAX(?numRaces) AS ?maxRaces)\",\n    \"WHERE {\",\n    \"?driver wdt:P106 wd:Q10841764.\",\n    \"?driver wdt:P1350 ?numRaces.\",\n    \"}\",\n    \"} \",\n    \"FILTER (?numRaces = ?maxRaces).\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the Formula 1 race driver with the most races?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is the Formula 1 race driver with the most races?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6894 is occupation\nkg:7521 is Formula One driver\nkg:6339 is number of matches played/races/starts", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?driver\",\n    \"WHERE {\",\n    \"?driver kg:6894 kg:7521;\",\n    \"?driver kg:6339 ?numRaces.\",\n    \"{ SELECT ?driver (MAX(?numRaces) AS ?maxRaces)\",\n    \"WHERE {\",\n    \"?driver kg:6894 kg:7521;\",\n    \"?driver kg:6339 ?numRaces.\",\n    \"}\",\n    \"GROUP BY ?driver }\",\n    \"?driver kg:6339 ?maxRaces.\",\n    \"}\"\n  ]\n}"}
{"question": "What country is Sitecore from?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What country is Sitecore from?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P112 ?country.\",\n    \"?item wdt:P279* wd:Q207503.\",\n    \"}\"\n  ]\n}"}
{"question": "What country is Sitecore from?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What country is Sitecore from?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q2663195 is Sitecore\nwdt:P17 is country", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"  wd:Q2663195 wdt:P17 ?country .\",\n    \"}\"\n  ]\n}"}
{"question": "What country is Sitecore from?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What country is Sitecore from?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9915 is Sitecore\nkg:9456 is country", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"  kg:9915 kg:basedIn ?country .\",\n    \"  ?country rdf:type kg:9456 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me the birth place of Frank Sinatra.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me the birth place of Frank Sinatra.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q15136 AS ?frankSinatra)\",\n    \"  ?frankSinatra wdt:P19 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me the birth place of Frank Sinatra.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me the birth place of Frank Sinatra.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q40912 is Frank Sinatra\nwdt:P19 is place of birth", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q40912 wdt:P19 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me the birth place of Frank Sinatra.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me the birth place of Frank Sinatra.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4574 is Frank Sinatra\nkg:3148 is place of birth", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?place\",\n    \"WHERE {\",\n    \"  kg:4574 kg:3148 ?place .\",\n    \"}\"\n  ]\n}"}
{"question": "Is Christian Bale starring in Velvet Goldmine?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Is Christian Bale starring in Velvet Goldmine?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P161 wd:Q193698.\",\n    \"?item wdt:P577 ?publicationDate.\",\n    \"FILTER(YEAR(?publicationDate) = 1998).\",\n    \"}\"\n  ]\n}"}
{"question": "Is Christian Bale starring in Velvet Goldmine?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Is Christian Bale starring in Velvet Goldmine?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q1481540 is Velvet Goldmine\nwdt:P161 is cast member\nwd:Q45772 is Christian Bale", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q1481540 wdt:P161 wd:Q45772.\",\n    \"  BIND(wd:Q1481540 AS ?item)\",\n    \"}\"\n  ]\n}"}
{"question": "Is Christian Bale starring in Velvet Goldmine?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Is Christian Bale starring in Velvet Goldmine?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1837 is Velvet Goldmine\nkg:2378 is cast member\nkg:2302 is Christian Bale", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"  kg:1837 kg:2378 ?resource .\",\n    \"  FILTER (?resource = kg:2302)\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the son of Sonny and Cher?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is the son of Sonny and Cher?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P22 wd:Q106965.\",\n    \"?item wdt:P25 wd:Q106966.\"\n    ]}\n "}
{"question": "Who is the son of Sonny and Cher?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is the son of Sonny and Cher?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P22 is father\nwd:Q179150 is Sonny Bono\nwdt:P25 is mother\nwd:Q12003 is Cher", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P22 wd:Q179150 ;\",\n    \"       wdt:P25 wd:Q12003 .\"\n    ]}\n "}
{"question": "Who is the son of Sonny and Cher?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is the son of Sonny and Cher?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8319 is father\nkg:6328 is Sonny Bono\nkg:8679 is mother\nkg:7963 is Cher", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?son\",\n    \"WHERE {\",\n    \"?son kg:8319 kg:6328 ;\",\n    \"       kg:8679 kg:7963 .\"\n    ]}\n \t\t\t\t\t  \t\t\t\t\t"}
{"question": "What is the capital of Cameroon?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the capital of Cameroon?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?capital\",\n    \"WHERE {\",\n    \"  wd:Q1009 wdt:P36 ?capital .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the capital of Cameroon?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the capital of Cameroon?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q1009 is Cameroon\nwdt:P36 is capital", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?capital\",\n    \"WHERE {\",\n    \"  wd:Q1009 wdt:P36 ?capital .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the capital of Cameroon?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the capital of Cameroon?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9619 is Cameroon\nkg:9141 is capital", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?capital\",\n    \"WHERE {\",\n    \"  kg:9619 kg:9141 ?capital .\",\n    \"}\"\n  ]\n}"}
{"question": "Was Natalie Portman born in the United States?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Was Natalie Portman born in the United States?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q172937 <http://www.wikidata.org/entity/Q172937>) as ?item.\",\n    \"  ?item wdt:P569 ?birthDate .\",\n    \"  ?item wdt:P27 ?countryOfCitizenship .\",\n    \"  FILTER (?countryOfCitizenship = wd:Q30)\",\n    \"}\"\n  ]\n}"}
{"question": "Was Natalie Portman born in the United States?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Was Natalie Portman born in the United States?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q37876 is Natalie Portman\nwdt:P19 is place of birth\nwdt:P17 is country\nwd:Q30 is United States of America", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q37876 AS ?item).\",\n    \"  ?item wdt:P19 ?birthPlace.\",\n    \"  ?birthPlace wdt:P17 wd:Q30.\"\n    ]}\n "}
{"question": "Was Natalie Portman born in the United States?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Was Natalie Portman born in the United States?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2400 is Natalie Portman\nkg:5100 is place of birth\nkg:6353 is country\nkg:1050 is United States of America", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"  kg:2400 kg:5100 ?s .\",\n    \"  ?s kg:6353 kg:1050 .\"\n    ]}\n "}
{"question": "Who is the oldest child of Meryl Streep?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is the oldest child of Meryl Streep?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?child\",\n    \"WHERE {\",\n    \"  wd:Q101783 bg:familyName \\\"Streep\\\" .\",\n    \"  wd:Q101783 wdt:P40 ?child .\",\n    \"  ?child wdt:P569 ?birthDate .\",\n    \"  { SELECT ?child (MIN(?birthDate) AS ?minBirthDate)\",\n    \"    WHERE {\",\n    \"      wd:Q101783 wdt:P40 ?child .\",\n    \"      ?child wdt:P569 ?birthDate .\",\n    \"    }\",\n    \"    GROUP BY ?child\",\n    \"  }\",\n    \"  FILTER(?birthDate = ?minBirthDate)\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the oldest child of Meryl Streep?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is the oldest child of Meryl Streep?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q873 is Meryl Streep\nwdt:P40 is child\nwdt:P569 is date of birth", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?child\",\n    \"WHERE {\",\n    \"  wd:Q873 wdt:P40 ?child .\",\n    \"  ?child wdt:P569 ?dob .\",\n    \"  { SELECT ?child (MIN(?dob) AS ?minDob)\",\n    \"    WHERE { wd:Q873 wdt:P40 ?child . ?child wdt:P569 ?dob }\",\n    \"    GROUP BY ?child \",\n    \"  }. \",\n    \"  FILTER (?dob = ?minDob).\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the oldest child of Meryl Streep?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is the oldest child of Meryl Streep?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9386 is Meryl Streep\nkg:7223 is child\nkg:3308 is date of birth", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?child\",\n    \"WHERE {\",\n    \"  ?child kg:7223 kg:9386.\",\n    \"  ?child kg:3308 ?dob.\",\n    \"  FILTER NOT EXISTS {\",\n    \"    ?otherChild kg:7223 kg:9386.\",\n    \"    ?otherChild kg:3308 ?otherDob.\",\n    \"    FILTER (?dob > ?otherDob).\",\n    \"  }\",\n    \"}\"\n  ]\n}"}
{"question": "Which television shows were created by Walt Disney?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which television shows were created by Walt Disney?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P112 Q17487780;\",\n    \"wdt:P31 wd:Q201658;\",\n    \"FILTER NOT EXISTS { ?item wdt:P577 [] . }\",\n    \"}\"\n  ]\n}"}
{"question": "Which television shows were created by Walt Disney?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which television shows were created by Walt Disney?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q7725310 is series of creative works\nwdt:P170 is creator\nwd:Q8704 is Walt Disney", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q8709.\", \"# television show\",\n    \"?item wdt:P170 wd:Q8704. \", \"# created by Walt Disney\",\n    \"}\"\n  ]\n}"}
{"question": "Which television shows were created by Walt Disney?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which television shows were created by Walt Disney?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4927 is instance of\nkg:2217 is subclass of\nkg:4357 is series of creative works\nkg:2797 is creator\nkg:6368 is Walt Disney", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"?resource kg:2797 kg:6368 ;\",\n    \"         kg:4357 ?series .\",\n    \"         FILTER (?series = kg:4927)\",\n    \"}\"\n  ]\n}"}
{"question": "Was U.S. president Jackson involved in a war?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Was U.S. president Jackson involved in a war?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P39 wd:Q11696;\",\n    \"       wdt:P27 wd:Q30.\",\n    \"       FILTER(EXISTS { ?item wdt:P607 [] })\",\n    \"}\"\n  ]\n}"}
{"question": "Was U.S. president Jackson involved in a war?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Was U.S. president Jackson involved in a war?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q11817 is Andrew Jackson\nwdt:P607 is conflict", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?conflict\",\n    \"WHERE {\",\n    \"  wd:Q11817 wdt:P607 ?conflict .\",\n    \"}\"\n  ]\n}"}
{"question": "Was U.S. president Jackson involved in a war?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Was U.S. president Jackson involved in a war?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1132 is Andrew Jackson\nkg:6744 is conflict", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?conflict\",\n    \"WHERE {\",\n    \"  kg:1132 kg:involvedIn ?conflict .\",\n    \"  ?conflict rdf:type kg:6744 .\",\n    \"}\"\n  ]\n}"}
{"question": "When was the Titanic completed?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “When was the Titanic completed?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  ?item wdt:P31 wd:Q11199.\",\n    \"  ?item wdt:P577 ?completionDate.\",\n    \"  FILTER NOT EXISTS { ?item wdt:P576 [] }\",\n    \"}\"\n  ]\n}"}
{"question": "When was the Titanic completed?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “When was the Titanic completed?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q25173 is Titanic\nwdt:P729 is service entry", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q25173 AS ?item).\",\n    \"  ?item wdt:P729 ?completionDate.\",\n    \"}\"\n  ]\n}"}
{"question": "When was the Titanic completed?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “When was the Titanic completed?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2084 is Titanic\nkg:4238 is service entry", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"  kg:2084 kg:4238 ?resource .\",\n    \"}\"\n  ]\n}"}
{"question": "Did Tesla win a nobel prize in physics?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Did Tesla win a nobel prize in physics?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  ?item wdt:P166 wd:Q3806.\",\n    \"  ?item wdt:P1411 wd:Q905260.\",\n    \"}\"\n  ]\n}"}
{"question": "Did Tesla win a nobel prize in physics?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Did Tesla win a nobel prize in physics?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q9036 is Nikola Tesla\nwdt:P166 is award received\nwd:Q38104 is Nobel Prize in Physics", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q9036 AS ?item).\",\n    \"  ?item wdt:P166 wd:Q38104.\",\n    \"}\"\n  ]\n}"}
{"question": "Did Tesla win a nobel prize in physics?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Did Tesla win a nobel prize in physics?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9199 is Nikola Tesla\nkg:2395 is award received\nkg:3285 is Nobel Prize in Physics", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"  kg:9199 kg:2395 ?resource .\",\n    \"  ?resource rdf:type kg:3285 .\"\n    ]}\n \t\t \t\t    \t  \t\t    \t"}
{"question": "How many states are in Mexico?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many states are in Mexico?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?state\",\n    \"WHERE {\",\n    \"?state wdt:P31 wd:Q13220297;\",\n    \"       wdt:P17 wd:Q25 .\",\n    \"}\"\n  ]\n}"}
{"question": "How many states are in Mexico?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many states are in Mexico?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q15149663 is state of Mexico", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q13220298.\",\n    \"?item wdt:P131 wd:Q25.\"\n    ]}\n \t\t \t\t \t\t"}
{"question": "How many states are in Mexico?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many states are in Mexico?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1188 is instance of\nkg:8553 is state of Mexico", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?state\",\n    \"WHERE {\",\n    \"?state kg:8553 kg:1188 .\",\n    \"}\"\n  ]\n}"}
{"question": "How much did the Lego Movie cost?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How much did the Lego Movie cost?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q11424 ;\",\n    \"       wdt:P1476 \\\"The Lego Movie\\\"@en ;\",\n    \"       wdt:P2130 ?cost .\",\n    \"}\"\n  ]\n}"}
{"question": "How much did the Lego Movie cost?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How much did the Lego Movie cost?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q2608065 is The Lego Movie\nwdt:P2130 is cost", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?cost\",\n    \"WHERE {\",\n    \"  wd:Q2608065 wdt:P2130 ?cost .\",\n    \"}\"\n  ]\n}"}
{"question": "How much did the Lego Movie cost?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How much did the Lego Movie cost?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7174 is The Lego Movie\nkg:4576 is cost", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?cost\",\n    \"WHERE {\",\n    \"  kg:7174 kg:4576 ?cost .\",\n    \"}\"\n  ]\n}"}
{"question": "Who composed the music for Harold and Maude?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who composed the music for Harold and Maude?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?composer\",\n    \"WHERE {\",\n    \"  wd:Q1134396 wdt:P86 ?composer .\",\n    \"}\"\n  ]\n}"}
{"question": "Who composed the music for Harold and Maude?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who composed the music for Harold and Maude?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q368577 is Harold and Maude\nwdt:P86 is composer", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?composer\",\n    \"WHERE {\",\n    \"  wd:Q368577 wdt:P86 ?composer .\",\n    \"}\"\n  ]\n}"}
{"question": "Who composed the music for Harold and Maude?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who composed the music for Harold and Maude?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5213 is Harold and Maude\nkg:9296 is composer", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?composer\",\n    \"WHERE {\",\n    \"  kg:5213 kg:composer ?composer .\",\n    \"}\"\n  ]\n}"}
{"question": "Which city has the least inhabitants?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which city has the least inhabitants?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?city\",\n    \"WHERE {\",\n    \"?city wdt:P31 wd:Q515; wdt:P1082 ?population.\",\n    \"}\",\n    \"ORDER BY ?population\",\n    \"LIMIT 1\"\n  ]\n}"}
{"question": "Which city has the least inhabitants?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which city has the least inhabitants?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q515 is city\nwdt:P1082 is population", "response": "{\n  \"query\": [\n    \"SELECT ?city\",\n    \"WHERE {\",\n    \"?city wdt:P31 wd:Q515.\",\n    \"?city wdt:P1082 ?population.\",\n    \"}\",\n    \"ORDER BY ?population\",\n    \"LIMIT 1\"\n  ]\n}"}
{"question": "Which city has the least inhabitants?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which city has the least inhabitants?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3143 is instance of\nkg:9876 is city\nkg:4366 is population", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?city\",\n    \"WHERE {\",\n    \"?city rdf:type kg:9876 .\",\n    \"?city kg:4366 ?population .\",\n    \"{ SELECT ?city (MIN(?population) AS ?minPopulation) \",\n    \"WHERE {\",\n    \"?city rdf:type kg:9876 .\",\n    \"?city kg:4366 ?population .\",\n    \"} GROUP BY ?city }\",\n    \"OPTIONAL { ?city2 rdf:type kg:9876 . ?city2 kg:4366 ?population2 . FILTER (?population2 < ?population) }\",\n    \"FILTER (!BOUND(?population2))\",\n    \"}\"\n  ]\n}"}
{"question": "Where is Syngman Rhee buried?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Where is Syngman Rhee buried?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?burialPlace\",\n    \"WHERE {\",\n    \"  BIND(wd:Q2973 AS ?syngmanRhee)\",\n    \"  ?syngmanRhee wdt:P119 ?burialPlace\",\n    \"}\"\n  ]\n}"}
{"question": "Where is Syngman Rhee buried?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Where is Syngman Rhee buried?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q171684 is Syngman Rhee\nwdt:P119 is place of burial", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q171684 wdt:P119 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "Where is Syngman Rhee buried?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Where is Syngman Rhee buried?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3345 is Syngman Rhee\nkg:9861 is place of burial", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?burialPlace\",\n    \"WHERE {\",\n    \"  kg:3345 kg:9861 ?burialPlace .\",\n    \"}\"\n  ]\n}"}
{"question": "Does Neymar play for Real Madrid?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Does Neymar play for Real Madrid?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q61878 AS ?player).\",\n    \"  BIND(wd:Q955 AS ?team).\",\n    \"  ?player wdt:P54 ?team.\",\n    \"}\"\n  ]\n}"}
{"question": "Does Neymar play for Real Madrid?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Does Neymar play for Real Madrid?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q142794 is Neymar\nwdt:P54 is member of sports team\nwd:Q8682 is Real Madrid CF", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q142794 wdt:P54 ?item.\",\n    \"  FILTER(?item = wd:Q8682).\",\n    \"}\"\n  ]\n}"}
{"question": "Does Neymar play for Real Madrid?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Does Neymar play for Real Madrid?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8232 is Neymar\nkg:5537 is member of sports team\nkg:7777 is Real Madrid CF", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"  kg:8232 kg:5537 ?resource .\",\n    \"  FILTER (?resource = kg:7777)\",\n    \"}\"\n  ]\n}"}
{"question": "Who wrote the book The Pillars of the Earth?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who wrote the book The Pillars of the Earth?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?author\",\n    \"WHERE {\",\n    \"  wd:Q11293 wdt:P50 ?author .\",\n    \"}\"\n  ]\n}"}
{"question": "Who wrote the book The Pillars of the Earth?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who wrote the book The Pillars of the Earth?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q1163227 is The Pillars of the Earth\nwdt:P50 is author", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?author\",\n    \"WHERE {\",\n    \"  wd:Q1163227 wdt:P50 ?author .\",\n    \"}\"\n  ]\n}"}
{"question": "Who wrote the book The Pillars of the Earth?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who wrote the book The Pillars of the Earth?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7222 is The Pillars of the Earth\nkg:7844 is author", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?author\",\n    \"WHERE {\",\n    \"  kg:7222 kg:7844 ?author .\",\n    \"}\"\n  ]\n}"}
{"question": "Do Prince Harry and Prince William have the same parents?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Do Prince Harry and Prince William have the same parents?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?parent1 ?parent2\",\n    \"WHERE {\",\n    \"  wd:Q207742 wdt:P22 ?parent1 .\", \"# Prince Harry's mother\",\n    \"  wd:Q208145 wdts:P22 ?parent2 .\", \"# Prince William's mother\",\n    \"  FILTER ( ?parent1 = ?parent2 )\",\n    \"}\"\n  ]\n}"}
{"question": "Do Prince Harry and Prince William have the same parents?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Do Prince Harry and Prince William have the same parents?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q152316 is Prince Harry, Duke of Sussex\nwdt:P22 is father\nwd:Q152316 is Prince Harry, Duke of Sussex\nwdt:P25 is mother\nwd:Q36812 is William, Prince of Wales\nwdt:P22 is father\nwd:Q36812 is William, Prince of Wales\nwdt:P25 is mother", "response": "{\n  \"query\": [\n    \"SELECT ?father ?mother\",\n    \"WHERE {\",\n    \"  wd:Q152316 wdt:P22 ?father .\",\n    \"  wd:Q152316 wdt:P25 ?mother .\",\n    \"  wd:Q36812 wdt:P22 ?father .\",\n    \"  wd:Q36812 wdt:P25 ?mother .\",\n    \"}\"\n  ]\n}"}
{"question": "Do Prince Harry and Prince William have the same parents?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Do Prince Harry and Prince William have the same parents?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0241 is Prince Harry, Duke of Sussex\nkg:9891 is father\nkg:0241 is Prince Harry, Duke of Sussex\nkg:0917 is mother\nkg:3209 is William, Prince of Wales\nkg:9891 is father\nkg:3209 is William, Prince of Wales\nkg:0917 is mother", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?father ?mother\",\n    \"WHERE {\",\n    \"  kg:0241 kg:9891 ?father .\",\n    \"  kg:3209 kg:9891 ?father .\",\n    \"  kg:0241 kg:0917 ?mother .\",\n    \"  kg:3209 kg:0917 ?mother .\",\n    \"}\"\n  ]\n}"}
{"question": "Who was the doctoral supervisor of Albert Einstein?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who was the doctoral supervisor of Albert Einstein?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q937 wd:Einstein).\",\n    \"  ?Einstein wdt:P184 ?item.\",\n    \"}\"\n  ]\n}"}
{"question": "Who was the doctoral supervisor of Albert Einstein?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who was the doctoral supervisor of Albert Einstein?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q937 is Albert Einstein\nwdt:P184 is doctoral advisor", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q937 wdt:P184 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "Who was the doctoral supervisor of Albert Einstein?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who was the doctoral supervisor of Albert Einstein?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3951 is Albert Einstein\nkg:5112 is doctoral advisor", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?supervisor\",\n    \"WHERE {\",\n    \"  kg:3951 kg:5112 ?supervisor .\",\n    \"}\"\n  ]\n}"}
{"question": "Does Breaking Bad have more episodes than Game of Thrones?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Does Breaking Bad have more episodes than Game of Thrones?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?BreakingBad ?GameOfThrones\",\n    \"WHERE {\",\n    \"  BIND(wd:Q131313 AS ?BreakingBad).\",\n    \"  BIND(wd:Q46936 AS ?GameOfThrones).\",\n    \"  ?BreakingBad wdt:P1113 ?breakingBadEpisodes.\",\n    \"  ?GameOfThrones wdt:P1113 ?gameOfThronesEpisodes.\",\n    \"  FILTER (?breakingBadEpisodes > ?gameOfThronesEpisodes).\",\n    \"}\"\n  ]\n}"}
{"question": "Does Breaking Bad have more episodes than Game of Thrones?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Does Breaking Bad have more episodes than Game of Thrones?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q1079 is Breaking Bad\nwdt:P1113 is number of episodes\nwd:Q23572 is Game of Thrones\nwdt:P1113 is number of episodes", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"  BIND(wd:Q1079 AS ?BreakingBad)\",\n    \"  BIND(wd:Q23572 AS ?GameOfThrones)\",\n    \"  ?BreakingBad wdt:P1113 ?breakingBadEpisodes.\",\n    \"  ?GameOfThrones wdt:P1113 ?gameOfThronesEpisodes.\",\n    \"  FILTER (?breakingBadEpisodes > ?gameOfThronesEpisodes).\",\n    \"  BIND(?BreakingBad AS ?s)\"\n    ]}\n "}
{"question": "Does Breaking Bad have more episodes than Game of Thrones?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Does Breaking Bad have more episodes than Game of Thrones?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7410 is Breaking Bad\nkg:4526 is number of episodes\nkg:6491 is Game of Thrones\nkg:4526 is number of episodes", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"  ?s kg:4526 ?o .\",\n    \"  kg:7410 kg:4526 ?x .\",\n    \"  kg:6491 kg:4526 ?y .\",\n    \"  FILTER (?x > ?y)\",\n    \"}\"\n  ]\n}"}
{"question": "Who was Vincent van Gogh inspired by?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who was Vincent van Gogh inspired by?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?influencer\",\n    \"WHERE {\",\n    \"  wd:Q5582 wdt:P737 ?influencer .\",\n    \"}\"\n  ]\n}"}
{"question": "Who was Vincent van Gogh inspired by?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who was Vincent van Gogh inspired by?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q5582 is Vincent van Gogh\nwdt:P737 is influenced by", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?influencer\",\n    \"WHERE {\",\n    \"  wd:Q5582 wdt:P737 ?influencer .\",\n    \"}\"\n  ]\n}"}
{"question": "Who was Vincent van Gogh inspired by?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who was Vincent van Gogh inspired by?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4487 is Vincent van Gogh\nkg:9725 is influenced by", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?influence\",\n    \"WHERE {\",\n    \"  kg:4487 kg:9725 ?influence .\",\n    \"}\"\n  ]\n}"}
{"question": "Which building after the Burj Khalifa has the most floors?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which building after the Burj Khalifa has the most floors?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?building\",\n    \"WHERE {\",\n    \"?building wdt:P1126 ?floor.\",\n    \"{ SELECT ?building (MAX(?floor) AS ?maxFloor)\",\n    \"WHERE {\",\n    \"?building wdt:P1126 ?floor ;\",\n    \"wdt:P31 wd:Q41176 ;\",\n    \"FILTER (?building != wd:Q121510).\",\n    \"}\",\n    \"} \",\n    \"OPTIONAL { ?building rdfs:label ?label . }\",\n    \"FILTER (?floor = ?maxFloor).\",\n    \"}\"\n  ]\n}"}
{"question": "Which building after the Burj Khalifa has the most floors?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which building after the Burj Khalifa has the most floors?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q12495 is Burj Khalifa\nwdt:P1101 is floors above ground\nwdt:P1101 is floors above ground", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?building\",\n    \"WHERE {\",\n    \"?building wdt:P1101 ?floors.\",\n    \"{ SELECT ?maxFloors WHERE { wd:Q12495 wdt:P1101 ?maxFloors } }\",\n    \"FILTER (?floors < ?maxFloors).\",\n    \"SERVICE wikibase:label { bd:serviceParam wikibase:language \\\"en\\\". }\",\n    \"}\"\n  ]\n}"}
{"question": "Which building after the Burj Khalifa has the most floors?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which building after the Burj Khalifa has the most floors?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1982 is Burj Khalifa\nkg:1365 is floors above ground\nkg:1365 is floors above ground", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?building\",\n    \"WHERE {\",\n    \"?building kg:1365 ?floors .\",\n    \"{ SELECT ?b MAX(?f) AS ?maxFloors\",\n    \"WHERE {\",\n    \"?b kg:1365 ?f .\",\n    \"FILTER (?b != kg:1982)\",\n    \"}\",\n    \"} \",\n    \"BIND (?maxFloors AS ?mf)\",\n    \"?building kg:1365 ?mf .\",\n    \"FILTER (?building != kg:1982)\",\n    \"}\"\n  ]\n}\n   "}
{"question": "How much did Pulp Fiction cost?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How much did Pulp Fiction cost?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  ?item wdt:P31 wd:Q11424 ;\", \"# Pulp Fiction is an instance of film\",\n    \"         wdt:P1476 \\\"Pulp Fiction\\\"@en ;\", \"# has title 'Pulp Fiction' in English\",\n    \"         wdt:P2130 ?cost .\", \"# cost of the film\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "How much did Pulp Fiction cost?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How much did Pulp Fiction cost?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q104123 is Pulp Fiction\nwdt:P2130 is cost", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?cost\",\n    \"WHERE {\",\n    \"  wd:Q104123 wdt:P2130 ?cost .\",\n    \"}\"\n  ]\n}"}
{"question": "How much did Pulp Fiction cost?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How much did Pulp Fiction cost?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8346 is Pulp Fiction\nkg:1348 is cost", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?cost\",\n    \"WHERE {\",\n    \"  kg:8346 kg:1348 ?cost .\",\n    \"}\"\n  ]\n}"}
{"question": "Is proinsulin a protein?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Is proinsulin a protein?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P279* wd:Q8054 .\", \"# proinsulin is a subclass of protein\",\n    \"?item wdt:P31 wd:Q11173 .\" ,\"# proinsulin is an instance of protein\"\n    ,\n    \"?item wdt:P703 wd:Q15917537 .\" ,\"# proinsulin has the scientific name 'proinsulin'\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Is proinsulin a protein?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Is proinsulin a protein?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q426173 is proinsulin\nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q8054 is protein", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"PREFIX wd: <http://www.wikidata.org/entity/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q426173 wdt:P31 ?item .\",\n    \"  ?item wdt:P279* wd:Q8054 .\",\n    \"}\"\n  ]\n}"}
{"question": "Is proinsulin a protein?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Is proinsulin a protein?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0193 is proinsulin\nkg:6381 is instance of\nkg:3035 is subclass of\nkg:2583 is protein", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"  kg:0193 kg:6381 ?resource .\",\n    \"  ?resource kg:3035 kg:2583 .\",\n    \"}\"\n  ]\n}"}
{"question": "Do Urdu and Persian have a common root?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Do Urdu and Persian have a common root?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P281 ?urduroot.\",\n    \"?item wdt:P281 ?persianroot.\",\n    \"{ SELECT ?urduroot WHERE { wd:Q36399 wdt:P281 ?urduroot } }. \",\n    \"{ SELECT ?persianroot WHERE { wd:Q9166 wdt:P281 ?persianroot } }. \",\n    \"FILTER (?urduroot = ?persianroot)\",\n    \"}\"\n  ]\n}"}
{"question": "Do Urdu and Persian have a common root?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Do Urdu and Persian have a common root?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q1617 is Urdu\nwdt:P279 is subclass of\nwd:Q9168 is Persian\nwdt:P279 is subclass of", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"PREFIX wd: <http://www.wikidata.org/entity/>\",\n    \"SELECT ?root\",\n    \"WHERE {\",\n    \"  wd:Q1617 wdt:P279 ?urduRoot .\",\n    \"  wd:Q9168 wdt:P279 ?persianRoot .\",\n    \"  FILTER (?urduRoot = ?persianRoot) .\",\n    \"  BIND (?urduRoot AS ?root)\",\n    \"}\"\n  ]\n}"}
{"question": "Do Urdu and Persian have a common root?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Do Urdu and Persian have a common root?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9687 is Urdu\nkg:9521 is subclass of\nkg:7561 is Persian\nkg:9521 is subclass of", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?root\",\n    \"WHERE {\",\n    \"  kg:9687 kg:9521 ?root .\",\n    \"  kg:7561 kg:9521 ?root .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is starring in Spanish movies produced by Benicio del Toro?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is starring in Spanish movies produced by Benicio del Toro?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"?movie wdt:P31 wd:Q11424 ;\", \"# movie is a film\",\n    \"wdt:P577 ?publicationDate ;\", \"# publication date\",\n    \"wdt:P495 wd:Q29 ;\", \"# country of origin is Spain\",\n    \"wdt:P161 ?actor ;\", \"# starring actor\",\n    \"wdt:P162 wd:Q168926 .\", \"# produced by Benicio del Toro\",\n    \"}\"\n  ]\n}"}
{"question": "Who is starring in Spanish movies produced by Benicio del Toro?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is starring in Spanish movies produced by Benicio del Toro?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q11424 is film\nwdt:P162 is producer\nwd:Q193668 is Benicio del Toro\nwdt:P495 is country of origin\nwd:Q29 is Spain\nwdt:P161 is cast member", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"?movie wdt:P31 wd:Q11424 ;\",\n    \"       wdt:P162 wd:Q193668 ;\",\n    \"       wdt:P495 wd:Q29 ;\",\n    \"       wdt:P161 ?actor .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is starring in Spanish movies produced by Benicio del Toro?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is starring in Spanish movies produced by Benicio del Toro?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5537 is instance of\nkg:1197 is film\nkg:3789 is producer\nkg:7757 is Benicio del Toro\nkg:8501 is country of origin\nkg:8199 is Spain\nkg:0642 is cast member", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"?movie kg:1197 \\\"Spanish movie\\\";\",\n    \"       kg:3789 ?producer;\",\n    \"       kg:8501 kg:8199;\",\n    \"       kg:0642 ?actor.\",\n    \"?producer kg:7757 \\\"Benicio del Toro\\\".\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Is Lake Baikal bigger than the Great Bear Lake?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Is Lake Baikal bigger than the Great Bear Lake?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?lake1 ?lake2\",\n    \"WHERE {\",\n    \"?lake1 wdt:P402 ?area1.\",\n    \"?lake2 wdt:P402 ?area2.\",\n    \"FILTER (?area1 > ?area2).\",\n    \"{ BIND(wd:Q54996 AS ?lake1) . BIND(wd:Q201558 AS ?lake2) }\",\n    \"}\"\n  ]\n}"}
{"question": "Is Lake Baikal bigger than the Great Bear Lake?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Is Lake Baikal bigger than the Great Bear Lake?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q5513 is Lake Baikal\nwdt:P2046 is area\nwd:Q5525 is Great Bear Lake\nwdt:P2046 is area", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?lake WHERE {\",\n    \"  BIND(wd:Q5513 AS ?baikal).\",\n    \"  BIND(wd:Q5525 AS ?greatbear).\",\n    \"  ?baikal wdt:P2046 ?baikalArea.\",\n    \"  ?greatbear wdt:P2046 ?greatbearArea.\",\n    \"  FILTER (?baikalArea > ?greatbearArea).\",\n    \"  BIND(?baikal AS ?lake).\",\n    \"}\"\n  ]\n}"}
{"question": "Is Lake Baikal bigger than the Great Bear Lake?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Is Lake Baikal bigger than the Great Bear Lake?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4738 is Lake Baikal\nkg:3598 is area\nkg:5245 is Great Bear Lake\nkg:3598 is area", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?lake\",\n    \"WHERE {\",\n    \"  kg:4738 kg:3598 ?baikalArea .\",\n    \"  kg:5245 kg:3598 ?bearArea .\",\n    \"  FILTER (?baikalArea > ?bearArea)\",\n    \"  BIND (kg:4738 AS ?lake)\"\n    ]}\n "}
{"question": "Show me all books in Asimov's Foundation series.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Show me all books in Asimov's Foundation series.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q47461344;\",\n    \"?item wdt:P179 wd:Q21125422.\",\n    \"}\"\n  ]\n}"}
{"question": "Show me all books in Asimov's Foundation series.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Show me all books in Asimov's Foundation series.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q1564644 is Foundation series\nwdt:P527 is has part(s)", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q1564644 wdt:P527 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "Show me all books in Asimov's Foundation series.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Show me all books in Asimov's Foundation series.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7758 is Foundation series\nkg:4983 is has part(s)", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?book\",\n    \"WHERE {\",\n    \"  kg:7758 kg:4983 ?book .\",\n    \"}\"\n  ]\n}"}
{"question": "Where was Bach born?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Where was Bach born?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?birthplace\",\n    \"WHERE {\",\n    \"  wd:Q1339 wdt:P19 ?birthplace .\",\n    \"}\"\n  ]\n}"}
{"question": "Where was Bach born?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Where was Bach born?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q1339 is Johann Sebastian Bach\nwdt:P19 is place of birth", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q1339 wdt:P19 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "Where was Bach born?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Where was Bach born?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9729 is Johann Sebastian Bach\nkg:2247 is place of birth", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?birthPlace\",\n    \"WHERE {\",\n    \"  kg:9729 kg:2247 ?birthPlace .\",\n    \"}\"\n  ]\n}"}
{"question": "Which city has the oldest running metro?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which city has the oldest running metro?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?city\",\n    \"WHERE {\",\n    \"?metro wdt:P31 wd:Q3217 ;\",\n    \"       wdt:P131 ?city ;\",\n    \"       wdt:P577 ?inception .\",\n    \"FILTER NOT EXISTS { ?otherMetro wdt:P31 wd:Q3217 ; wdt:P577 ?earlierInception . FILTER (?earlierInception < ?inception) }\",\n    \"}\"\n  ]\n}"}
{"question": "Which city has the oldest running metro?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which city has the oldest running metro?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q5503 is rapid transit\nwdt:P571 is inception\nwdt:P131 is located in the administrative territorial entity", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?city\",\n    \"WHERE {\",\n    \"?metro wdt:P31 wd:Q5503;\",\n    \"       wdt:P571 ?inception.\",\n    \"?city wdt:P131 ?adminEntity.\",\n    \"?metro wdt:P131 ?city.\",\n    \"}\",\n    \"ORDER BY ASC(?inception)\",\n    \"LIMIT 1\"\n  ]\n}"}
{"question": "Which city has the oldest running metro?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which city has the oldest running metro?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9312 is instance of\nkg:2195 is rapid transit\nkg:4613 is inception\nkg:2724 is located in the administrative territorial entity", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?city\",\n    \"WHERE {\",\n    \"?metro kg:2195 kg:9312 .\",\n    \"?metro kg:4613 ?inception .\",\n    \"?metro kg:2724 ?city .\",\n    \"}\",\n    \"ORDER BY ASC(?inception)\",\n    \"LIMIT 1\"\n  ]\n}"}
{"question": "Who designed the Brooklyn Bridge?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who designed the Brooklyn Bridge?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P112 ?value .\",\n    \"?item wdt:P161 wd:Q10942 .\",\n    \"}\"\n  ]\n}"}
{"question": "Who designed the Brooklyn Bridge?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who designed the Brooklyn Bridge?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q125006 is Brooklyn Bridge\nwdt:P287 is designed by", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?designer\",\n    \"WHERE {\",\n    \"  wd:Q125006 wdt:P287 ?designer .\",\n    \"}\"\n  ]\n}"}
{"question": "Who designed the Brooklyn Bridge?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who designed the Brooklyn Bridge?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0242 is Brooklyn Bridge\nkg:9045 is designed by", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?designer\",\n    \"WHERE {\",\n    \"  kg:0242 kg:9045 ?designer .\",\n    \"}\"\n  ]\n}"}
{"question": "How many people live in Eurasia?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many people live in Eurasia?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P30 wd:Q2746.\",\n    \"?item wdt:P1082 ?population.\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "How many people live in Eurasia?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many people live in Eurasia?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q5401 is Eurasia\nwdt:P1082 is population", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q5401 AS ?item).\",\n    \"  ?item wdt:P1082 ?population.\",\n    \"}\"\n  ]\n}"}
{"question": "How many people live in Eurasia?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many people live in Eurasia?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8473 is Eurasia\nkg:7501 is population", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"  kg:8473 kg:7501 ?resource .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the total population of Melbourne, Florida?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the total population of Melbourne, Florida?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q515 \",\n    \"?item wdt:P402  \\\"Melbourne\\\"@en,\",\n    \"?item wdt:P17 wd:Q30 ;\",\n    \"?item wdt:P1082 ?population .\",\n    \"FILTER NOT EXISTS { ?item wdt:P576 [] }\",\n    \"}\"\n  ]\n}"}
{"question": "What is the total population of Melbourne, Florida?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the total population of Melbourne, Florida?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q949779 is Melbourne\nwdt:P1082 is population", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q949779 AS ?item).\",\n    \"  ?item wdt:P1082 ?population.\",\n    \"}\"\n  ]\n}"}
{"question": "What is the total population of Melbourne, Florida?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the total population of Melbourne, Florida?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6378 is Melbourne\nkg:3570 is population", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?population\",\n    \"WHERE {\",\n    \"  kg:6378 kg:3570 ?population .\",\n    \"}\"\n  ]\n}"}
{"question": "What country is Mount Everest in?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What country is Mount Everest in?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"  wd:Q513\",\n    \"  wdt:P706 ?mountainLocation.\",\n    \"  ?mountainLocation wdt:P17 ?country.\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "What country is Mount Everest in?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What country is Mount Everest in?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q513 is Mount Everest\nwdt:P17 is country", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"  wd:Q513 wdt:P17 ?country .\",\n    \"}\"\n  ]\n}"}
{"question": "What country is Mount Everest in?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What country is Mount Everest in?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6089 is Mount Everest\nkg:8406 is country", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"  kg:6089 kg:locatedIn ?country .\",\n    \"  ?country rdf:type kg:8406 .\",\n    \"}\"\n  ]\n}"}
{"question": "To which artistic movement did the painter of The Three Dancers belong?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “To which artistic movement did the painter of The Three Dancers belong?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?artisticMovement\",\n    \"WHERE {\",\n    \"  wd:Q134118 wdt:P106 ?painter .\", \"# The Three Dancers is painted by\",\n    \"  ?painter wdt:P135 ?artisticMovement .\", \"# painter belongs to artistic movement\",\n    \"}\"\n  ]\n}"}
{"question": "To which artistic movement did the painter of The Three Dancers belong?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “To which artistic movement did the painter of The Three Dancers belong?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q3235867 is The Three Dancers\nwdt:P170 is creator\nwdt:P135 is movement", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?movement\",\n    \"WHERE {\",\n    \"  wd:Q3235867 wdt:P170 ?artist .\",\n    \"  ?artist wdt:P135 ?movement .\",\n    \"}\"\n  ]\n}"}
{"question": "To which artistic movement did the painter of The Three Dancers belong?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “To which artistic movement did the painter of The Three Dancers belong?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2470 is The Three Dancers\nkg:6531 is creator\nkg:8386 is movement", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?movement\",\n    \"WHERE {\",\n    \"  kg:2470 kg:6531 ?artist .\",\n    \"  ?artist kg:8386 ?movement .\",\n    \"}\"\n  ]\n}"}
{"question": "When did Operation Overlord commence?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “When did Operation Overlord commence?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P793 wd:Q186453.\",\n    \"?item wdt:P580 ?date.\",\n    \"}\"\n  ]\n}"}
{"question": "When did Operation Overlord commence?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “When did Operation Overlord commence?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q8641370 is Operation Overlord\nwdt:P580 is start time", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q8641370 AS ?item).\",\n    \"  ?item wdt:P580 ?startTime.\",\n    \"}\"\n  ]\n}"}
{"question": "When did Operation Overlord commence?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “When did Operation Overlord commence?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2567 is Operation Overlord\nkg:0436 is start time", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?startTime\",\n    \"WHERE {\",\n    \"  kg:2567 kg:0436 ?startTime .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the bridge with the longest span?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the bridge with the longest span?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q12280 ;\", \"# instance of bridge\",\n    \"wdt:P2548 ?span .\", \"# has span\"\n    ,\n    \"{ SELECT ?item (MAX(?span) AS ?maxSpan)\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q12280 ;\",\n    \"wdt:P2548 ?span .\",\n    \"}\",\n    \"} \",\n    \"FILTER (?span = ?maxSpan).\",\n    \"}\"\n  ]\n}"}
{"question": "Is there a video game called Battle Chess?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Is there a video game called Battle Chess?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q7889.\",\n    \"?item rdfs:label \\\"Battle Chess\\\"@en.\"\n    ]}\n "}
{"question": "Who was buried in the Great Pyramid of Giza?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who was buried in the Great Pyramid of Giza?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P361 wd:Q677906.\",\n    \"}\"\n  ]\n}"}
{"question": "Who was buried in the Great Pyramid of Giza?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who was buried in the Great Pyramid of Giza?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P119 is place of burial\nwd:Q3411252 is Pyramid G1-a", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P119 wd:Q3411252 .\",\n    \"}\"\n  ]\n}"}
{"question": "Who was buried in the Great Pyramid of Giza?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who was buried in the Great Pyramid of Giza?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8446 is place of burial\nkg:5206 is Pyramid G1-a", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?entity\",\n    \"WHERE {\",\n    \"?entity kg:8446 kg:5206 .\",\n    \"}\"\n  ]\n}"}
{"question": "Did Socrates influence Aristotle?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Did Socrates influence Aristotle?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?influenced\",\n    \"WHERE {\",\n    \"  wd:Q1694 wdt:P7378 ?influenced .\",\n    \"  FILTER (?influenced = wd:Q28865)\",\n    \"}\"\n  ]\n}"}
{"question": "Did Socrates influence Aristotle?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Did Socrates influence Aristotle?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q868 is Aristotle\nwdt:P737 is influenced by\nwd:Q913 is Socrates", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q868 AS ?item).\",\n    \"  ?item wdt:P737 wd:Q913.\",\n    \"}\"\n  ]\n}"}
{"question": "Did Socrates influence Aristotle?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Did Socrates influence Aristotle?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3713 is Aristotle\nkg:3382 is influenced by\nkg:4528 is Socrates", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"  kg:3713 kg:3382 ?resource .\",\n    \"  ?resource kg:3382 kg:4528 .\",\n    \"}\"\n  ]\n}"}
{"question": "How many children did Benjamin Franklin have?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many children did Benjamin Franklin have?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?child\",\n    \"WHERE {\",\n    \"  wd:Q345 bd:serviceParam wikibase:entity ?item.\",\n    \"  ?item wdt:P40 ?child.\",\n    \"  FILTER NOT EXISTS { ?child wdt:P31 wd:Q5 }\",\n    \"}\"\n  ]\n}"}
{"question": "How many children did Benjamin Franklin have?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many children did Benjamin Franklin have?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q34969 is Benjamin Franklin\nwdt:P40 is child", "response": "{\n  \"query\": [\n    \"SELECT ?child\",\n    \"WHERE {\",\n    \"  wd:Q34969 wdt:P40 ?child.\",\n    \"}\"\n  ]\n}"}
{"question": "How many children did Benjamin Franklin have?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many children did Benjamin Franklin have?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3786 is Benjamin Franklin\nkg:3793 is child", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?child\",\n    \"WHERE {\",\n    \"  kg:3786 kg:3793 ?child .\",\n    \"}\"\n  ]\n}"}
{"question": "How tall is Michael Jordan?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How tall is Michael Jordan?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?height\",\n    \"WHERE {\",\n    \"  wd:Q36193 wdt:P2048 ?height .\",\n    \"}\"\n  ]\n}"}
{"question": "How tall is Michael Jordan?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How tall is Michael Jordan?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q41421 is Michael Jordan\nwdt:P2048 is height", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?height\",\n    \"WHERE {\",\n    \"  wd:Q41421 wdt:P2048 ?height .\",\n    \"}\"\n  ]\n}"}
{"question": "How tall is Michael Jordan?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How tall is Michael Jordan?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4261 is Michael Jordan\nkg:0068 is height", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?heightValue\",\n    \"WHERE {\",\n    \"  kg:4261 kg:0068 ?heightValue .\",\n    \"}\"\n  ]\n}"}
{"question": "In which UK city are the headquarters of the MI6?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “In which UK city are the headquarters of the MI6?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P112 ?headquarters.\",\n    \"?headquarters wdt:P131 ?city.\",\n    \"?city wdt:P17 wd:Q145.\",\n    \"?item wdt:P241 ?mi6.\",\n    \"FILTER(CONTAINS(STR(?mi6), \\\"MI6\\\"))\",\n    \"}\"\n  ]\n}"}
{"question": "In which UK city are the headquarters of the MI6?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “In which UK city are the headquarters of the MI6?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q184560 is Secret Intelligence Service\nwdt:P159 is headquarters location\nwdt:P31 is instance of\nwd:Q515 is city", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q184560 wdt:P159 ?item .\",\n    \"  ?item wdt:P31 wd:Q515 .\",\n    \"}\"\n  ]\n}"}
{"question": "In which UK city are the headquarters of the MI6?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “In which UK city are the headquarters of the MI6?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1223 is Secret Intelligence Service\nkg:2929 is headquarters location\nkg:9030 is instance of\nkg:4329 is city", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?city\",\n    \"WHERE {\",\n    \"  kg:1223 kg:9030 ?o .\",\n    \"  ?o kg:2929 ?city .\",\n    \"  ?city kg:4329 ?c .\",\n    \"  FILTER (?c = \\\"UK\\\")\",\n    \"}\"\n  ]\n}"}
{"question": "Who created Family Guy?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who created Family Guy?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P61 wd:Q53205 .\",\n    \"}\"\n  ]\n}"}
{"question": "Who created Family Guy?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who created Family Guy?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q5930 is Family Guy\nwdt:P170 is creator", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?creator\",\n    \"WHERE {\",\n    \"  wd:Q5930 wdt:P170 ?creator .\",\n    \"}\"\n  ]\n}"}
{"question": "Who created Family Guy?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who created Family Guy?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0871 is Family Guy\nkg:4258 is creator", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?creator\",\n    \"WHERE {\",\n    \"  kg:0871 kg:4258 ?creator .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me the grandchildren of Elvis Presley.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me the grandchildren of Elvis Presley.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?grandchild\",\n    \"WHERE {\",\n    \"  wd:Q3077 wdt:P40 ?child .\",\n    \"  ?child wdt:P40 ?grandchild .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me the grandchildren of Elvis Presley.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me the grandchildren of Elvis Presley.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q303 is Elvis Presley\nwdt:P40 is child\nwdt:P40 is child", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?grandchild\",\n    \"WHERE {\",\n    \"  wd:Q303 wdt:P40 ?child .\",\n    \"  ?child wdt:P40 ?grandchild .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me the grandchildren of Elvis Presley.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me the grandchildren of Elvis Presley.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6814 is Elvis Presley\nkg:5388 is child\nkg:5388 is child", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?grandchild\",\n    \"WHERE {\",\n    \"  kg:6814 kg:5388 ?child .\",\n    \"  ?child kg:5388 ?grandchild .\",\n    \"}\"\n  ]\n}"}
{"question": "When did the Ming dynasty dissolve?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “When did the Ming dynasty dissolve?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q86561898;\",\n    \"       wdt:P576 ?d.\",\n    \"FILTER (LANGMATCHES(LANG(?itemLabel), 'en'))\",\n    \"}\"\n  ]\n}"}
{"question": "When did the Ming dynasty dissolve?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “When did the Ming dynasty dissolve?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q9903 is Ming dynasty\nwdt:P576 is dissolved, abolished or demolished date", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q9903 AS ?item).\",\n    \"  ?item wdt:P576 [] .\",\n    \"}\"\n  ]\n}"}
{"question": "When did the Ming dynasty dissolve?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “When did the Ming dynasty dissolve?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4661 is Ming dynasty\nkg:6940 is dissolved, abolished or demolished date", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"  kg:4661 kg:6940 ?resource .\",\n    \"}\"\n  ]\n}"}
{"question": "In which military conflicts did Lawrence of Arabia participate?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “In which military conflicts did Lawrence of Arabia participate?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?conflict\",\n    \"WHERE {\",\n    \"  wd:Q37855 wdt:P607 ?conflict .\",\n    \"}\"\n  ]\n}"}
{"question": "In which military conflicts did Lawrence of Arabia participate?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “In which military conflicts did Lawrence of Arabia participate?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q170596 is T. E. Lawrence\nwdt:P607 is conflict", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?conflict\",\n    \"WHERE {\",\n    \"  wd:Q170596 wdt:P607 ?conflict .\",\n    \"}\"\n  ]\n}"}
{"question": "In which military conflicts did Lawrence of Arabia participate?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “In which military conflicts did Lawrence of Arabia participate?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3636 is T. E. Lawrence\nkg:6895 is conflict", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?conflict\",\n    \"WHERE {\",\n    \"  kg:3636 kg:participatedIn ?conflict .\",\n    \"  ?conflict rdf:type kg:6895 .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the timezone in San Pedro de Atacama?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the timezone in San Pedro de Atacama?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  ?item wdt:P17 wd:Q298;\",\n    \"  ?item wdt:P131 wd:Q1053434.\",\n    \"  ?item wdt:P421 ?timezone\"\n    ]}\n "}
{"question": "What is the timezone in San Pedro de Atacama?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the timezone in San Pedro de Atacama?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q187893 is San Pedro de Atacama\nwdt:P421 is located in time zone", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q187893 wdt:P421 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the timezone in San Pedro de Atacama?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the timezone in San Pedro de Atacama?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7559 is San Pedro de Atacama\nkg:1880 is located in time zone", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?timezone\",\n    \"WHERE {\",\n    \"  kg:7559 kg:1880 ?timezone .\",\n    \"}\"\n  ]\n}"}
{"question": "What did Bruce Carver die from?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What did Bruce Carver die from?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?causeOfDeath\",\n    \"WHERE {\",\n    \"  BIND(wd:Q15708417 AS ?bruceCarver)\",\n    \"  ?bruceCarver wdt:P509 ?causeOfDeath .\",\n    \"}\"\n  ]\n}"}
{"question": "What did Bruce Carver die from?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What did Bruce Carver die from?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q4977246 is Bruce Carver\nwdt:P509 is cause of death", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?causeOfDeath\",\n    \"WHERE {\",\n    \"  wd:Q4977246 wdt:P509 ?causeOfDeath .\",\n    \"}\"\n  ]\n}"}
{"question": "What did Bruce Carver die from?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What did Bruce Carver die from?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2845 is Bruce Carver\nkg:5174 is cause of death", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?causeOfDeath\",\n    \"WHERE {\",\n    \"  kg:2845 kg:5174 ?causeOfDeath .\",\n    \"}\"\n  ]\n}"}
{"question": "Does Abraham Lincoln's death place have a website?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Does Abraham Lincoln's death place have a website?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?website\",\n    \"WHERE {\",\n    \"  BIND(wd:Q91 AS ?lincoln)\",\n    \"  ?lincoln wdt:P20 ?deathPlace.\",\n    \"  ?deathPlace wdt:P856 ?website.\",\n    \"}\"\n  ]\n}"}
{"question": "Does Abraham Lincoln's death place have a website?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Does Abraham Lincoln's death place have a website?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q91 is Abraham Lincoln\nwdt:P20 is place of death\nwdt:P856 is official website", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?website\",\n    \"WHERE {\",\n    \"  wd:Q91 wdt:P20 ?placeOfDeath .\",\n    \"  ?placeOfDeath wdt:P856 ?website .\",\n    \"}\"\n  ]\n}"}
{"question": "Does Abraham Lincoln's death place have a website?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Does Abraham Lincoln's death place have a website?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1907 is Abraham Lincoln\nkg:3231 is place of death\nkg:6446 is official website", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?website\",\n    \"WHERE {\",\n    \"  kg:1907 kg:3231 ?place .\",\n    \"  ?place kg:6446 ?website .\",\n    \"}\"\n  ]\n}"}
{"question": "Did Elvis Presley have children?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Did Elvis Presley have children?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?child\",\n    \"WHERE {\",\n    \"  wd:Q303 ba:hasChild ?child .\",\n    \"  FILTER NOT EXISTS { ?child wdt:P31 wd:Q5 }\",\n    \"}\"\n  ]\n}"}
{"question": "Did Elvis Presley have children?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Did Elvis Presley have children?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q303 is Elvis Presley\nwdt:P40 is child", "response": "{\n  \"query\": [\n    \"SELECT ?child\",\n    \"WHERE {\",\n    \"  wd:Q303 wdt:P40 ?child.\",\n    \"}\"\n  ]\n}"}
{"question": "Did Elvis Presley have children?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Did Elvis Presley have children?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5360 is Elvis Presley\nkg:0568 is child", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?child\",\n    \"WHERE {\",\n    \"  kg:5360 kg:0568 ?child .\",\n    \"}\"\n  ]\n}"}
{"question": "Is Michelle Obama the wife of Barack Obama?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Is Michelle Obama the wife of Barack Obama?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P26 wd:Q76.\",\n    \"?item wdt:P31 wd:Q5.\",\n    \"?item wdt:P734 \\\"Michelle Obama\\\"@en.\",\n    \"}\"\n  ]\n}"}
{"question": "Is Michelle Obama the wife of Barack Obama?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Is Michelle Obama the wife of Barack Obama?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q76 is Barack Obama\nwdt:P26 is spouse\nwd:Q13133 is Michelle Obama", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q76 wdt:P26 ?item .\",\n    \"  FILTER(?item = wd:Q13133)\",\n    \"}\"\n  ]\n}"}
{"question": "Is Michelle Obama the wife of Barack Obama?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Is Michelle Obama the wife of Barack Obama?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7320 is Barack Obama\nkg:3323 is spouse\nkg:0032 is Michelle Obama", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"  kg:0032 kg:3323 ?s .\",\n    \"  FILTER (?s = kg:7320)\",\n    \"}\"\n  ]\n}"}
{"question": "Who wrote the song Hotel California?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who wrote the song Hotel California?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q2188189 ;\", \"# song\",\n    \"wdt:P162 wd:Q169931 .   # creator (author) of Hotel California\"\n    ,\n    \"} LIMIT 100\"\n  ]\n}"}
{"question": "Who wrote the song Hotel California?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who wrote the song Hotel California?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q780394 is Hotel California\nwdt:P86 is composer", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?composer\",\n    \"WHERE {\",\n    \"  wd:Q780394 wdt:P86 ?composer .\",\n    \"}\"\n  ]\n}"}
{"question": "Who wrote the song Hotel California?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who wrote the song Hotel California?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7168 is Hotel California\nkg:0509 is composer", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?composer\",\n    \"WHERE {\",\n    \"  kg:7168 kg:0509 ?composer .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the capital of Canada?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the capital of Canada?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?capital\",\n    \"WHERE {\",\n    \"  wd:Q16 wdt:P36 ?capital .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the capital of Canada?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the capital of Canada?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q16 is Canada\nwdt:P36 is capital", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?capital\",\n    \"WHERE {\",\n    \"  wd:Q16 wdt:P36 ?capital .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the capital of Canada?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the capital of Canada?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0044 is Canada\nkg:5651 is capital", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?capital\",\n    \"WHERE {\",\n    \"  kg:0044 kg:5651 ?capital .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the mayor of Tel Aviv?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is the mayor of Tel Aviv?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?mayor\",\n    \"WHERE {\",\n    \"  wd:Q33992 wdt:P6 ?mayor .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the mayor of Tel Aviv?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is the mayor of Tel Aviv?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q33935 is Tel Aviv\nwdt:P6 is head of government", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?mayor\",\n    \"WHERE {\",\n    \"  wd:Q33935 wdt:P6 ?mayor .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the mayor of Tel Aviv?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is the mayor of Tel Aviv?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6114 is Tel Aviv\nkg:1344 is head of government", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?mayor\",\n    \"WHERE {\",\n    \"  kg:6114 kg:1344 ?mayor .\",\n    \"}\"\n  ]\n}"}
{"question": "What form of government does Russia have?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What form of government does Russia have?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?formOfGovernment\",\n    \"WHERE {\",\n    \"  wd:Q159 yes\",\n    \"  wdt:P122 ?formOfGovernment .\",\n    \"}\"\n  ]\n}"}
{"question": "What form of government does Russia have?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What form of government does Russia have?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q159 is Russia\np:P122 is basic form of government\nps:P122 is basic form of government\npq:P582 is end time", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"PREFIX wd: <http://www.wikidata.org/entity/>\",\n    \"SELECT ?government\",\n    \"WHERE {\",\n    \"  wd:Q159 wdt:P122 ?government.\",\n    \"}\"\n  ]\n}"}
{"question": "What form of government does Russia have?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What form of government does Russia have?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0251 is Russia\nkg:2654 is basic form of government\nkg:5180 is basic form of government\nkg:6647 is end time", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?g\",\n    \"WHERE {\",\n    \"  kg:0251 kg:2654 ?g .\",\n    \"  FILTER NOT EXISTS { kg:0251 kg:6647 ?t }\",\n    \"}\"\n  ]\n}"}
{"question": "How many languages are spoken in Colombia?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many languages are spoken in Colombia?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?language\",\n    \"WHERE {\",\n    \"?country wdt:P31 wd:Q6256 .\",\n    \"?country wdt:P298 ?language .\",\n    \"?country wdt:P407 ?officialLanguage .\",\n    \"FILTER (?country = wd:Q739)\",\n    \"}\"\n  ]\n}"}
{"question": "How many languages are spoken in Colombia?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many languages are spoken in Colombia?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q739 is Colombia\nwdt:P31 is instance of\nwd:Q34770 is language", "response": "{\n  \"query\": [\n    \"SELECT ?language\",\n    \"WHERE {\",\n    \"  ?language wdt:P31 wd:Q34770 ;\",\n    \"           p:P972 ?statement .\",\n    \"  ?statement ps:P972 wd:Q739 .\",\n    \"}\"\n  ]\n}"}
{"question": "How many languages are spoken in Colombia?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many languages are spoken in Colombia?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4761 is Colombia\nkg:0115 is instance of\nkg:2850 is language", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?language\",\n    \"WHERE {\",\n    \"  kg:4761 kg:0115 ?instance .\",\n    \"  ?instance kg:2850 ?language .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the currency of the Czech Republic?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the currency of the Czech Republic?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?currency\",\n    \"WHERE {\",\n    \"  wd:Q213 wd:274 currency: ?currency .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the currency of the Czech Republic?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the currency of the Czech Republic?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q213 is Czech Republic\nwdt:P38 is currency", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?currency\",\n    \"WHERE {\",\n    \"  wd:Q213 wdt:P38 ?currency .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the currency of the Czech Republic?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the currency of the Czech Republic?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3424 is Czech Republic\nkg:7065 is currency", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?currency\",\n    \"WHERE {\",\n    \"  kg:3424 kg:hasCurrency ?currency .\",\n    \"  FILTER (?currency = kg:7065)\",\n    \"}\"\n  ]\n}"}
{"question": "When did Boris Becker end his active career?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “When did Boris Becker end his active career?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q189558 AS ?item).\",\n    \"  ?item wdt:P569 ?birth.\",\n    \"  ?item wdt:P582 ?retired.\",\n    \"}\"\n  ]\n}"}
{"question": "When did Boris Becker end his active career?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “When did Boris Becker end his active career?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q76334 is Boris Becker\np:P106 is occupation\npq:P582 is end time", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q76334 AS ?item).\",\n    \"  ?item wdt:P106 wd:Q10833314.\",\n    \"  ?item p:P106 ?statement.\",\n    \"  ?statement pq:P582 ?endTime.\",\n    \"}\"\n  ]\n}"}
{"question": "When did Boris Becker end his active career?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “When did Boris Becker end his active career?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8519 is Boris Becker\nkg:4499 is occupation\nkg:7835 is end time", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?endTime\",\n    \"WHERE {\",\n    \"  kg:8519 kg:4499 ?occupation .\",\n    \"  ?occupation kg:7835 ?endTime .\",\n    \"}\"\n  ]\n}"}
{"question": "In which films did Julia Roberts as well as Richard Gere play?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “In which films did Julia Roberts as well as Richard Gere play?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?film\",\n    \"WHERE {\",\n    \"?film wdt:P161 wd:Q11279;\",\n    \"?film wdt:P161 wd:Q42869;\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "In which films did Julia Roberts as well as Richard Gere play?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “In which films did Julia Roberts as well as Richard Gere play?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q11424 is film\nwdt:P161 is cast member\nwd:Q48410 is Richard Gere\nwdt:P161 is cast member\nwd:Q40523 is Julia Roberts", "response": "{\n  \"query\": [\n    \"SELECT ?film\",\n    \"WHERE {\",\n    \"?film wdt:P31 wd:Q11424.\",\n    \"?film wdt:P161 wd:Q48410.\",\n    \"?film wdt:P161 wd:Q40523.\"\n    ]}\n "}
{"question": "In which films did Julia Roberts as well as Richard Gere play?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “In which films did Julia Roberts as well as Richard Gere play?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1148 is instance of\nkg:8130 is film\nkg:2065 is cast member\nkg:3669 is Richard Gere\nkg:2065 is cast member\nkg:8913 is Julia Roberts", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?film\",\n    \"WHERE {\",\n    \"?film kg:8130 .\",\n    \"?film kg:2065 kg:3669 .\",\n    \"?film kg:2065 kg:8913 .\",\n    \"}\"\n  ]\n}"}
{"question": "Show me Hemingway's autobiography.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Show me Hemingway's autobiography.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q82794;\",\n    \"?item wdt:P50 wd:Q8676.\",\n    \"}\"\n  ]\n}"}
{"question": "Show me Hemingway's autobiography.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Show me Hemingway's autobiography.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P50 is author\nwd:Q23434 is Ernest Hemingway\nwdt:P136 is genre\nwd:Q4184 is autobiography", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?work\",\n    \"WHERE {\",\n    \"?work wdt:P50 wd:Q23434 ;\",\n    \"       wdt:P136 wd:Q4184 .\",\n    \"}\"\n  ]\n}"}
{"question": "Show me Hemingway's autobiography.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Show me Hemingway's autobiography.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8102 is author\nkg:6083 is Ernest Hemingway\nkg:1624 is genre\nkg:6727 is autobiography", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?book\",\n    \"WHERE {\",\n    \"?book kg:8102 kg:6083 .\",\n    \"?book kg:1624 kg:6727 .\",\n    \"}\"\n  ]\n}"}
{"question": "What are the five boroughs of New York?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What are the five boroughs of New York?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P131* wd:Q60.\",\n    \"?item wdt:P31 wd:Q3253478.\",\n    \"}\"\n  ]\n}"}
{"question": "What are the five boroughs of New York?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What are the five boroughs of New York?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q408804 is borough of New York City", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q515; wdt:P361 wd:Q84 .\",\n    \"}\"\n  ]\n}"}
{"question": "What are the five boroughs of New York?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What are the five boroughs of New York?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4033 is instance of\nkg:0913 is borough of New York City", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?borough\",\n    \"WHERE {\",\n    \"?borough kg:0913 kg:4033 .\",\n    \"}\"\n  ]\n}"}
{"question": "In which country does the Ganges start?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “In which country does the Ganges start?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q4022 ;\", \"# River\",\n    \"wdt:P576 ?source .\", \"# headwater\"\n    ]}\n "}
{"question": "In which country does the Ganges start?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “In which country does the Ganges start?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q5089 is Ganges\nwdt:P885 is origin of the watercourse\nwdt:P17 is country", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"  wd:Q5089 wdt:P885 ?origin .\",\n    \"  ?origin wdt:P17 ?country .\",\n    \"}\"\n  ]\n}"}
{"question": "In which country does the Ganges start?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “In which country does the Ganges start?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3043 is Ganges\nkg:5904 is origin of the watercourse\nkg:1545 is country", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"  kg:3043 kg:5904 ?origin .\",\n    \"  ?origin kg:1545 ?country .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the founder of Penguin Books?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is the founder of Penguin Books?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?founder\",\n    \"WHERE {\",\n    \"  wd:Q170126 wdt:P112 ?founder .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the founder of Penguin Books?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is the founder of Penguin Books?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q1336200 is Penguin Books\nwdt:P112 is founded by", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?founder\",\n    \"WHERE {\",\n    \"  wd:Q1336200 wdt:P112 ?founder .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the founder of Penguin Books?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is the founder of Penguin Books?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8226 is Penguin Books\nkg:5203 is founded by", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?founder\",\n    \"WHERE {\",\n    \"  kg:8226 kg:5203 ?founder .\",\n    \"}\"\n  ]\n}"}
{"question": "Who wrote the Game of Thrones theme?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who wrote the Game of Thrones theme?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?composer\",\n    \"WHERE {\",\n    \"  wd:Q213439 ?themeComposer ?composer .\",\n    \"  FILTER(contains(str(?themeComposer), \\\"composer\\\"))\",\n    \"}\"\n  ]\n}"}
{"question": "Who wrote the Game of Thrones theme?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who wrote the Game of Thrones theme?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q23572 is Game of Thrones\nwdt:P86 is composer", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?composer\",\n    \"WHERE {\",\n    \"  wd:Q23572 wdt:P86 ?composer .\",\n    \"}\"\n  ]\n}"}
{"question": "Who wrote the Game of Thrones theme?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who wrote the Game of Thrones theme?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4662 is Game of Thrones\nkg:5725 is composer", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?composer\",\n    \"WHERE {\",\n    \"  kg:4662 kg:composer ?composer .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the president of Eritrea?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is the president of Eritrea?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P35 wd:Q685.\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the president of Eritrea?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is the president of Eritrea?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q986 is Eritrea\nwdt:P35 is head of state", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?president\",\n    \"WHERE {\",\n    \"  wd:Q986 wdt:P35 ?president .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the president of Eritrea?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is the president of Eritrea?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3708 is Eritrea\nkg:4028 is head of state", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?president\",\n    \"WHERE {\",\n    \"  kg:3708 kg:4028 ?president .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the highest mountain in Australia?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the highest mountain in Australia?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q8502 ;\", \"# mountain\",\n    \"wdt:P17 wd:Q408 .\" ,\"# located in Australia\",\n    \"?item wdt:P2044 ?elevation .\", \"# elevation\"\n    ]}\n "}
{"question": "What is the highest mountain in Australia?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the highest mountain in Australia?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q8502 is mountain\nwdt:P30 is continent\nwd:Q3960 is Australian continent\nwdt:P2044 is elevation above sea level", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?mountain\",\n    \"WHERE {\",\n    \"?mountain wdt:P31 wd:Q8502 ;\",\n    \"         wdt:P30 wd:Q3960.\",\n    \"  { SELECT ?mountain (MAX(?elevation) AS ?maxElevation)\",\n    \"    WHERE {\",\n    \"      ?mountain wdt:P31 wd:Q8502 ;\",\n    \"              wdt:P30 wd:Q3960 ;\",\n    \"              wdt:P2044 ?elevation.\",\n    \"    }\",\n    \"    GROUP BY ?mountain\",\n    \"  }\",\n    \"  ?mountain wdt:P2044 ?maxElevation.\",\n    \"}\"\n  ]\n}"}
{"question": "What is the highest mountain in Australia?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the highest mountain in Australia?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4685 is instance of\nkg:5080 is mountain\nkg:1335 is continent\nkg:6341 is Australian continent\nkg:1463 is elevation above sea level", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?mountain\",\n    \"WHERE {\",\n    \"?mountain kg:5080 \\\"true\\\"^^xsd:boolean .\",\n    \"?mountain kg:4685 ?continent .\",\n    \"?continent kg:6341 \\\"true\\\"^^xsd:boolean .\",\n    \"?mountain kg:1463 ?elevation .\",\n    \"{ SELECT ?mountain (MAX(?elevation) AS ?maxElevation) \",\n    \"WHERE {\",\n    \"?m kg:5080 \\\"true\\\"^^xsd:boolean .\",\n    \"?m kg:4685 ?c .\",\n    \"?c kg:6341 \\\"true\\\"^^xsd:boolean .\",\n    \"?m kg:1463 ?elevation .\",\n    \"} GROUP BY ?mountain }\",\n    \"FILTER (?elevation = ?maxElevation)\",\n    \"}\"\n  ]\n}"}
{"question": "Give me the currency of China.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me the currency of China.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q148 \\\"?country\\\").\",\n    \"  ?country wdt:P38 ?item.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me the currency of China.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me the currency of China.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q148 is People's Republic of China\nwdt:P38 is currency", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?currency\",\n    \"WHERE {\",\n    \"  wd:Q148 wdt:P38 ?currency .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me the currency of China.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me the currency of China.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1520 is People's Republic of China\nkg:8265 is currency", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?currency\",\n    \"WHERE {\",\n    \"  kg:1520 kg:8265 ?currency .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all Swedish oceanographers.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all Swedish oceanographers.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P106 wd:Q1624299.\",\n    \"?item wdt:P27 wd:Q34.\"\n    ]}\n "}
{"question": "Give me all Swedish oceanographers.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all Swedish oceanographers.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P27 is country of citizenship\nwd:Q34 is Sweden\nwdt:P106 is occupation\nwd:Q3546255 is oceanographer", "response": "{\n  \"query\": [\n    \"SELECT\",\n    \"?item\",\n    \"WHERE\",\n    \"{\",\n    \"?item wdt:P27 wd:Q34.\",\n    \"?item wdt:P106 wd:Q3546255.\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Give me all Swedish oceanographers.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all Swedish oceanographers.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9026 is country of citizenship\nkg:8563 is Sweden\nkg:2886 is occupation\nkg:6380 is oceanographer", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"?s kg:9026 kg:8563 ;\",\n    \"     kg:2886 kg:6380 .\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "Is Rita Wilson the wife of Tom Hanks?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Is Rita Wilson the wife of Tom Hanks?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q231495 AS ?ritaWilson).\",\n    \"  BIND(wd:Q2263 AS ?tomHanks).\",\n    \"  ?ritaWilson wdt:P26 ?item.\",\n    \"  FILTER(?item = ?tomHanks)\",\n    \"}\"\n  ]\n}"}
{"question": "Is Rita Wilson the wife of Tom Hanks?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Is Rita Wilson the wife of Tom Hanks?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q2263 is Tom Hanks\nwdt:P26 is spouse\nwd:Q234144 is Rita Wilson", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q2263 wdt:P26 ?item .\",\n    \"  FILTER(?item = wd:Q234144)\",\n    \"}\"\n  ]\n}"}
{"question": "Is Rita Wilson the wife of Tom Hanks?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Is Rita Wilson the wife of Tom Hanks?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3108 is Tom Hanks\nkg:8992 is spouse\nkg:6150 is Rita Wilson", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"  kg:3108 kg:8992 ?s .\",\n    \"  FILTER (?s = kg:6150)\",\n    \"}\"\n  ]\n}"}
{"question": "In which countries do people speak Japanese?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “In which countries do people speak Japanese?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?country wdt:P37 wd:Q5287 .\",\n    \"}\"\n  ]\n}"}
{"question": "In which countries do people speak Japanese?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “In which countries do people speak Japanese?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q6256 is country\nwdt:P37 is official language\nwd:Q5287 is Japanese", "response": "{\n  \"query\": [\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?country wdt:P31 wd:Q6256.\",\n    \"?country wdt:P37 wd:Q5287.\"\n    ]}\n "}
{"question": "In which countries do people speak Japanese?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “In which countries do people speak Japanese?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0335 is instance of\nkg:4094 is country\nkg:2472 is official language\nkg:1348 is Japanese", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?country kg:4094 .\",\n    \"?country kg:2472 kg:1348 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which museum in New York has the most visitors?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which museum in New York has the most visitors?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?museum\",\n    \"?museum wdt:P31 wd:Q838948 ;\",\n    \"       wdt:P17 wd:Q30 ;\",\n    \"       wdt:P276 wd:Q60 .\",\n    \"FILTER NOT EXISTS { ?museum wdt:P576 [] }\",\n    \"ORDER BY DESC(?visitors)\",\n    \"{ SELECT ?museum (COUNT(DISTINCT ?visitor) AS ?visitors)\",\n    \"   WHERE { ?museum wdt:P31 wd:Q838948 ;\",\n    \"             wdt:P17 wd:Q30 ;\",\n    \"             wdt:P276 wd:Q60 .\",\n    \"         FILTER NOT EXISTS { ?museum wdt:P576 [] }\",\n    \"         ?visitor wdt:P463 ?museum .\",\n    \"   } GROUP BY ?museum }\"\n  ]\n}"}
{"question": "Which museum in New York has the most visitors?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which museum in New York has the most visitors?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P159 is headquarters location\nwd:Q60 is New York City\nwdt:P31 is instance of\nwd:Q33506 is museum\nwdt:P1174 is visitors per year", "response": "{\n  \"query\": [\n    \"SELECT ?museum\",\n    \"WHERE {\",\n    \"?museum wdt:P159 wd:Q60.\",\n    \"?museum wdt:P31 wd:Q33506.\",\n    \"?museum wdt:P1174 ?visitors.\",\n    \"}\"\n  ]\n}"}
{"question": "Which museum in New York has the most visitors?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which museum in New York has the most visitors?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2365 is headquarters location\nkg:7693 is New York City\nkg:0004 is instance of\nkg:4808 is museum\nkg:6753 is visitors per year", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?museum\",\n    \"WHERE {\",\n    \"?museum kg:0004 kg:4808 ;\",\n    \"       kg:2365 kg:7693 ;\",\n    \"       kg:6753 ?visitors .\",\n    \"FILTER NOT EXISTS {\",\n    \"?otherMuseum kg:0004 kg:4808 ;\",\n    \"                 kg:2365 kg:7693 ;\",\n    \"                 kg:6753 ?otherVisitors .\",\n    \"  FILTER (?otherVisitors > ?visitors)\",\n    \"}\",\n    \"}\"\n  ]\n}"}
{"question": "What was the first Queen album?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What was the first Queen album?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q482994.\",\n    \"?item wdt:P175 wd:Q206689.\",\n    \"?item wdt:P577 ?pubDate.\",\n    \"{ SELECT MIN(?pubDate) AS ?minPubDate ?item \",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q482994.\",\n    \"?item wdt:P175 wd:Q206689.\",\n    \"?item wdt:P577 ?pubDate. } \",\n    \"} \",\n    \"FILTER (?pubDate = ?minPubDate). }\"\n  ]\n}"}
{"question": "What was the first Queen album?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What was the first Queen album?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q482994 is album\nwdt:P175 is performer\nwd:Q15862 is Queen\nwdt:P577 is publication date", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q482994;\",\n    \"?item wdt:P175 wd:Q15862;\",\n    \"?firstAlbum ?item .\",\n    \"FILTER NOT EXISTS {\",\n    \"?earlierAlbum wdt:P31 wd:Q482994;\",\n    \"?earlierAlbum wdt:P175 wd:Q15862;\",\n    \"?earlierAlbum wdt:P577 ?pubDate;\",\n    \"?item wdt:P577 ?itemPubDate;\",\n    \"FILTER (?pubDate < ?itemPubDate)\",\n    \"}\",\n    \"}\"\n  ]\n}"}
{"question": "What was the first Queen album?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What was the first Queen album?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1183 is instance of\nkg:2574 is album\nkg:4363 is performer\nkg:7570 is Queen\nkg:8676 is publication date", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?album\",\n    \"WHERE {\",\n    \"?album kg:2574 kg:7570 ;\",\n    \"       kg:4363 kg:7570 ;\",\n    \"       kg:8676 ?date .\",\n    \"FILTER NOT EXISTS {\",\n    \"?other_album kg:2574 kg:7570 ;\",\n    \"                 kg:4363 kg:7570 ;\",\n    \"                 kg:8676 ?other_date .\",\n    \"FILTER (?other_date < ?date)\",\n    \"}\"\n  ]\n}\n "}
{"question": "What was the last movie with Alec Guinness?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What was the last movie with Alec Guinness?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?movie\",\n    \"WHERE {\",\n    \"?movie wdt:P161 wd:Q15123 ;\",\n    \"       wdt:P577 ?publicationDate .\",\n    \"FILTER NOT EXISTS {\",\n    \"?otherMovie wdt:P161 wd:Q15123 ;\",\n    \"                wdt:P577 ?otherPublicationDate .\",\n    \"FILTER (?otherPublicationDate > ?publicationDate)\",\n    \"}\",\n    \"}\"\n  ]\n}"}
{"question": "What was the last movie with Alec Guinness?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What was the last movie with Alec Guinness?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q11424 is film\nwdt:P161 is cast member\nwd:Q103894 is Alec Guinness\nwdt:P577 is publication date", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?movie\",\n    \"WHERE {\",\n    \"?movie wdt:P31 wd:Q11424;\",\n    \"       wdt:P161 wd:Q103894.\",\n    \"       FILTER NOT EXISTS {\",\n    \"?otherMovie wdt:P31 wd:Q11424;\",\n    \"          wdt:P161 wd:Q103894;\",\n    \"          wdt:P577 ?otherDate.\",\n    \"?movie wdt:P577 ?date.\",\n    \"FILTER (?date < ?otherDate).}\",\n    \"}\"\n  ]\n}"}
{"question": "What was the last movie with Alec Guinness?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What was the last movie with Alec Guinness?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2886 is instance of\nkg:3087 is film\nkg:8937 is cast member\nkg:7063 is Alec Guinness\nkg:6539 is publication date", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?movie\",\n    \"WHERE {\",\n    \"?movie kg:3087 .\",\n    \"?movie kg:8937 kg:7063 .\",\n    \"?movie kg:6539 ?date .\",\n    \"{ SELECT ?movie (MAX(?date) AS ?maxDate)\",\n    \"WHERE {\",\n    \"?movie kg:3087 .\",\n    \"?movie kg:8937 kg:7063 .\",\n    \"?movie kg:6539 ?date .\",\n    \"}\",\n    \"} \",\n    \"FILTER (?date = ?maxDate)\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all actors starring in Last Action Hero.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all actors starring in Last Action Hero.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"  wd:Q221294 wdt:P161 ?actor .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all actors starring in Last Action Hero.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all actors starring in Last Action Hero.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q858840 is Last Action Hero\nwdt:P161 is cast member", "response": "{\n  \"query\": [\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"  wd:Q858840 wdt:P161 ?actor .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all actors starring in Last Action Hero.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all actors starring in Last Action Hero.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5466 is Last Action Hero\nkg:3948 is cast member", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"  kg:5466 kg:3948 ?actor .\",\n    \"}\"\n  ]\n}"}
{"question": "Who discovered Pluto?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who discovered Pluto?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?discoverer\",\n    \"WHERE {\",\n    \"  wd:Q339 p:P61 ?statement.\",\n    \"  ?statement ps:P61 ?discoverer.\",\n    \"}\"\n  ]\n}"}
{"question": "Who discovered Pluto?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who discovered Pluto?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q339 is Pluto\nwdt:P61 is discoverer or inventor\nwdt:P31 is instance of\nwd:Q5 is human", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"PREFIX wd: <http://www.wikidata.org/entity/>\",\n    \"SELECT ?discoverer\",\n    \"WHERE {\",\n    \"  wd:Q339 wdt:P61 ?discoverer .\",\n    \"}\"\n  ]\n}"}
{"question": "Who discovered Pluto?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who discovered Pluto?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5368 is Pluto\nkg:2200 is discoverer or inventor\nkg:9126 is instance of\nkg:6995 is human", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?discoverer\",\n    \"WHERE {\",\n    \"  kg:5368 kg:2200 ?discoverer .\",\n    \"  ?discoverer kg:9126 kg:6995 .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the time zone of Salt Lake City?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the time zone of Salt Lake City?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q47220 AS ?city).\",\n    \"  ?city wdt:P421 ?item.\",\n    \"}\"\n  ]\n}"}
{"question": "What is the time zone of Salt Lake City?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the time zone of Salt Lake City?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q23337 is Salt Lake City\nwdt:P421 is located in time zone", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q23337 wdt:P421 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the time zone of Salt Lake City?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the time zone of Salt Lake City?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1260 is Salt Lake City\nkg:1170 is located in time zone", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?timeZone\",\n    \"WHERE {\",\n    \"  kg:1260 kg:1170 ?timeZone .\",\n    \"}\"\n  ]\n}"}
{"question": "Who killed Caesar?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who killed Caesar?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?killer\",\n    \"WHERE {\",\n    \"  wd:Q3794 wdt:P157 ?killer .\",\n    \"}\"\n  ]\n}"}
{"question": "Who killed Caesar?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who killed Caesar?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q1048 is Julius Caesar\nwdt:P157 is killed by", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?killer\",\n    \"WHERE {\",\n    \"  wd:Q1048 wdt:P157 ?killer .\",\n    \"}\"\n  ]\n}"}
{"question": "Who killed Caesar?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who killed Caesar?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7526 is Julius Caesar\nkg:4262 is killed by", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?x\",\n    \"WHERE {\",\n    \"  kg:7526 kg:4262 ?x .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the highest mountain in Germany?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the highest mountain in Germany?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q8502 ;\", \"# mountain\",\n    \"wdt:P17 wd:Q183 ;\", \"# country: Germany\",\n    \"?rank wdt:P1319 ?item .\", \"# highest\"\n    ]}\n "}
{"question": "What is the highest mountain in Germany?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the highest mountain in Germany?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q8502 is mountain\nwdt:P2044 is elevation above sea level\nwdt:P17 is country\nwd:Q183 is Germany", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?mountain\",\n    \"WHERE {\",\n    \"?mountain wdt:P31 wd:Q8502 ;\",\n    \"         wdt:P17 wd:Q183 ;\",\n    \"         wdt:P2044 ?elevation .\",\n    \"{ SELECT ?mountain (MAX(?elevation) AS ?maxElevation)\",\n    \"   WHERE {\",\n    \"     ?mountain wdt:P31 wd:Q8502 ;\",\n    \"             wdt:P17 wd:Q183 ;\",\n    \"             wdt:P2044 ?elevation .\",\n    \"   }\",\n    \" }\",\n    \"?mountain wdt:P2044 ?maxElevation .\",\n    \"}\"\n  ]\n  }\n "}
{"question": "What is the highest mountain in Germany?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the highest mountain in Germany?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2561 is instance of\nkg:4362 is mountain\nkg:7164 is elevation above sea level\nkg:2200 is country\nkg:0428 is Germany", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?mountain\",\n    \"WHERE {\",\n    \"?mountain kg:4362 .\",\n    \"?mountain kg:2561 ?elevation.\",\n    \"{ SELECT ?mountain (MAX(?elevation) AS ?maxElevation)\",\n    \"WHERE {\",\n    \"?mountain kg:4362 .\",\n    \"?mountain kg:7164 ?elevation.\",\n    \"?mountain kg:2200 kg:0428.\",\n    \"}\",\n    \"} \",\n    \"?mountain kg:7164 ?elevation.\",\n    \"FILTER (?elevation = ?maxElevation)\",\n    \"}\"\n  ]\n  }\n "}
{"question": "Which American presidents were in office during the Vietnam War?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which American presidents were in office during the Vietnam War?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?president\",\n    \"?president wdt:P31 wd:Q5 ;\",\n    \"       wdt:P106 wd:Q672838 ;\",\n    \"       wdt:P39 ?office .\",\n    \"?office wdt:P279* wd:Q11696 ;\",\n    \"        wdt:P580 ?start ;\",\n    \"        wdt:P582 ?end .\",\n    \"FILTER((?start <= \\\"1975-04-30\\\"^^xsd:date) && (?end >= \\\"1959-01-01\\\"^^xsd:date))\",\n  \").join(\\\" \\\")\"\n  ]\n}"}
{"question": "Which American presidents were in office during the Vietnam War?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which American presidents were in office during the Vietnam War?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q8740 is Vietnam War\nwdt:P580 is start time\nwd:Q8740 is Vietnam War\nwdt:P582 is end time\nwd:Q30 is United States of America\np:P6 is head of government\nps:P6 is head of government\npq:P580 is start time\npq:P582 is end time", "response": "{\n  \"query\": [\n    \"SELECT ?president\",\n    \"WHERE {\",\n    \"?president p:P6 ?statement.\",\n    \"?statement ps:P6 wd:Q30;\",\n    \"pq:P580 ?start_time;\",\n    \"FILTER (?start_time <= \\\"1975-04-30\\\"^^xsd:date).\",\n    \"?statement pq:P582 ?end_time.\",\n    \"FILTER (?end_time >= \\\"1959-07-08\\\"^^xsd:date || !bound(?end_time)).\",\n    \"}\"\n  ]\n}"}
{"question": "Which American presidents were in office during the Vietnam War?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which American presidents were in office during the Vietnam War?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9596 is Vietnam War\nkg:8702 is start time\nkg:9596 is Vietnam War\nkg:8819 is end time\nkg:6919 is United States of America\nkg:6335 is head of government\nkg:0704 is head of government\nkg:3171 is start time\nkg:6726 is end time", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?president\",\n    \"WHERE {\",\n    \"?president kg:6335 kg:6919 ;\",\n    \"       kg:8702 ?start_time .\",\n    \"FILTER (?start_time <= \\\"1975-04-30\\\"^^xsd:date)\",\n    \"?president kg:6726 ?end_time .\",\n    \"FILTER (?end_time >= \\\"1955-11-01\\\"^^xsd:date)\",\n    \"}\"\n  ]\n}"}
{"question": "Which artists were born on the same date as Rachel Stevens?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which artists were born on the same date as Rachel Stevens?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?artist\",\n    \"WHERE {\",\n    \"?artist wdt:P31 wd:Q5 .\", \"# ?artist is a human\",\n    \"?artist wdt:P106 wd:Q63833 .\", \"# ?artist is an artist\",\n    \"?artist wdt:P569 ?birthDate .\", \"# get birth date of the artist\",\n    \"FILTER (DAY(?birthDate) = DAY(wd:Q230334)) .\", \"# filter by day of month\",\n    \"FILTER (MONTH(?birthDate) = MONTH(wd:Q230334)) .\", \"# filter by month\",\n    \"?artist wdt:P27 ?countryOfOrigin .\", \"# get country of origin of the artist\",\n    \"FILTER (?artist != wd:Q230334) .\", \"# exclude Rachel Stevens herself\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Which artists were born on the same date as Rachel Stevens?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which artists were born on the same date as Rachel Stevens?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q241665 is Rachel Stevens\nwdt:P569 is date of birth\nwdt:P106 is occupation\nwdt:P279 is subclass of\nwd:Q483501 is artist\nwdt:P569 is date of birth", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?artist\",\n    \"WHERE {\",\n    \"  BIND(wd:Q241665 AS ?rachelStevens).\",\n    \"  ?rachelStevens wdt:P569 ?birthDate.\",\n    \"  ?artist wdt:P569 ?birthDate;\",\n    \"         wdt:P106/wdt:P279* wd:Q483501.\",\n    \"  FILTER(?artist != ?rachelStevens).\",\n    \"}\"\n  ]\n}"}
{"question": "Which artists were born on the same date as Rachel Stevens?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which artists were born on the same date as Rachel Stevens?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2702 is Rachel Stevens\nkg:2966 is date of birth\nkg:4710 is occupation\nkg:7646 is subclass of\nkg:0996 is artist\nkg:2966 is date of birth", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?artist\",\n    \"WHERE {\",\n    \"  kg:2702 kg:2966 ?dob .\",\n    \"  ?artist kg:2966 ?dob .\",\n    \"  ?artist kg:4710 kg:0996 .\",\n    \"  FILTER (?artist != kg:2702)\",\n    \"}\"\n  ]\n}"}
{"question": "What is the profession of Frank Herbert?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the profession of Frank Herbert?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?profession\",\n    \"WHERE {\",\n    \"  BIND(wd:Q273684 AS ?frankHerbert).\",\n    \"  ?frankHerbert wdt:P106 ?profession.\",\n    \"}\"\n  ]\n}"}
{"question": "What is the profession of Frank Herbert?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the profession of Frank Herbert?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q7934 is Frank Herbert\nwdt:P106 is occupation", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?profession\",\n    \"WHERE {\",\n    \"  wd:Q7934 wdt:P106 ?profession .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the profession of Frank Herbert?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the profession of Frank Herbert?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6211 is Frank Herbert\nkg:4981 is occupation", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?o\",\n    \"WHERE {\",\n    \"  kg:6211 kg:4981 ?o .\",\n    \"}\"\n  ]\n}"}
{"question": "How many seats does the home stadium of FC Porto have?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many seats does the home stadium of FC Porto have?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?stadium\",\n    \"{\",\n    \"  BIND(wd:Q9658 AS ?team).\",\n    \"  ?team wdt:P115 ?stadium.\",\n    \"}\"\n  ]\n}"}
{"question": "How many seats does the home stadium of FC Porto have?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many seats does the home stadium of FC Porto have?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q128446 is FC Porto\nwdt:P115 is home venue\nwdt:P1083 is maximum capacity", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?stadium\",\n    \"WHERE {\",\n    \"  wd:Q128446 wdt:P115 ?stadium.\",\n    \"  ?stadium wdt:P1083 ?capacity.\",\n    \"  FILTER(isLiteral(?capacity))\",\n    \"}\"\n  ]\n}"}
{"question": "How many seats does the home stadium of FC Porto have?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many seats does the home stadium of FC Porto have?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1293 is FC Porto\nkg:3596 is home venue\nkg:4727 is maximum capacity", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?stadium\",\n    \"WHERE {\",\n    \"  kg:1293 kg:3596 ?stadium .\",\n    \"  ?stadium kg:4727 ?capacity .\",\n    \"  FILTER (isLiteral(?capacity))\",\n    \"}\"\n  ]\n}"}
{"question": "Which frequent flyer program has the most airlines?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which frequent flyer program has the most airlines?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q744913 .\", \"# frequent flyer program\",\n    \"?item wdt:P179 ?airline .\", \"# has airline\",\n    \"} GROUP BY ?item ORDER BY (COUNT(DISTINCT ?airline)) DESC LIMIT 1\"\n  ]\n}"}
{"question": "Which frequent flyer program has the most airlines?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which frequent flyer program has the most airlines?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q46970 is airline\np:P4446 is reward program\nps:P4446 is reward program", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q838948 ;\",\n    \"       p:P4446 ?rewardProgram .\",\n    \"?airline wdt:P31 wd:Q46970 ;\",\n    \"         ps:P4446 ?rewardProgram .\",\n    \"}\"\n  ]\n}"}
{"question": "Which frequent flyer program has the most airlines?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which frequent flyer program has the most airlines?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7931 is instance of\nkg:8697 is airline\nkg:6223 is reward program\nkg:4848 is reward program", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"?s rdf:type kg:6223 ;\",\n    \"kg:8697 ?o .\",\n    \"}\"\n  ]\n}"}
{"question": "Which European countries have a constitutional monarchy?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which European countries have a constitutional monarchy?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?country wdt:P31 wd:Q6256 ;\", \"# country is an instance of 'country'\",\n    \"wdt:P30 wd:Q46 ;\", \"# country is located in Europe\",\n    \"wdt:P122 wd:Q171558 .\" ,\"\\t# country has a head of state that is a monarch\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Which European countries have a constitutional monarchy?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which European countries have a constitutional monarchy?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q458 is European Union\nwdt:P150 is contains the administrative territorial entity\nwdt:P122 is basic form of government\nwd:Q41614 is constitutional monarchy", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?country wdt:P150 wd:Q458;\",\n    \"       wdt:P122 wd:Q41614.\",\n    \"}\"\n  ]\n}"}
{"question": "Which European countries have a constitutional monarchy?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which European countries have a constitutional monarchy?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4311 is European Union\nkg:4161 is contains the administrative territorial entity\nkg:0520 is basic form of government\nkg:5768 is constitutional monarchy", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?country kg:4161 kg:4311 .\",\n    \"?country kg:0520 kg:5768 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which countries have places with more than two caves?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which countries have places with more than two caves?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?cave wdt:P31 wd:Q35509 ; wdt:P131 ?location .\",\n    \"?location wdt:P131 ?country .\",\n    \"FILTER (NOT EXISTS { ?cave wdt:P131 ?country })\",\n    \"} GROUP BY ?country HAVING (COUNT(DISTINCT ?cave) > 2)\"\n  ]\n}"}
{"question": "Which countries have places with more than two caves?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which countries have places with more than two caves?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q35509 is cave\nwdt:P17 is country", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?cave wdt:P31 wd:Q35509.\",\n    \"?location wdt:P31 ?cave.\",\n    \"?location wdt:P17 ?country.\",\n    \"{ SELECT ?country (COUNT(?cave) AS ?count) WHERE {\",\n    \"?cave wdt:P31 wd:Q35509.\",\n    \"?cave wdt:P17 ?country.\",\n    \"} GROUP BY ?country HAVING (?count > 2)\",\n    \"}\"\n  ]\n}\n "}
{"question": "Which countries have places with more than two caves?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which countries have places with more than two caves?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9167 is instance of\nkg:4381 is cave\nkg:1762 is country", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?cave kg:4381 ?place .\",\n    \"?place kg:9167 ?location .\",\n    \"?location kg:1762 ?country .\",\n    \"{ SELECT ?country (COUNT(DISTINCT ?cave) AS ?count) \",\n    \"WHERE {\",\n    \"?cave kg:4381 ?place .\",\n    \"?place kg:9167 ?location .\",\n    \"?location kg:1762 ?country .\",\n    \"} GROUP BY ?country HAVING (?count > 2)\",\n    \"}\"\n  ]\n}\n "}
{"question": "What is Angela Merkel’s birth name?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is Angela Merkel’s birth name?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?birthName\",\n    \"WHERE {\",\n    \"  BIND(wd:Q567 Q128269) AS ?angelaMerkel .\",\n    \"  ?angelaMerkel wdt:P1477 ?birthName .\",\n    \"}\"\n  ]\n}"}
{"question": "What is Angela Merkel’s birth name?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is Angela Merkel’s birth name?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q567 is Angela Merkel\nwdt:P1477 is birth name", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q567 wdt:P1477 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "What is Angela Merkel’s birth name?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is Angela Merkel’s birth name?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7741 is Angela Merkel\nkg:3407 is birth name", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?birthName\",\n    \"WHERE {\",\n    \"  kg:7741 kg:3407 ?birthName .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the mayor of Berlin?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is the mayor of Berlin?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P6 wd:Q64.\",\n    \"?item wdt:P39 wd:Q17275818.\"\n    ]}\n "}
{"question": "Who is the mayor of Berlin?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is the mayor of Berlin?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q64 is Berlin\nwdt:P6 is head of government", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?mayor\",\n    \"WHERE {\",\n    \"  wd:Q64 wdt:P6 ?mayor .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the mayor of Berlin?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is the mayor of Berlin?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5823 is Berlin\nkg:5984 is head of government", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?mayor\",\n    \"WHERE {\",\n    \"  kg:5823 kg:5984 ?mayor .\",\n    \"}\"\n  ]\n}"}
{"question": "Which countries in the European Union adopted the Euro?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which countries in the European Union adopted the Euro?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?country wdt:P27 wd:Q458.\",\n    \"?country wdt:P494 wd:Q4916.\",\n    \"}\"\n  ]\n}"}
{"question": "Which countries in the European Union adopted the Euro?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which countries in the European Union adopted the Euro?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q458 is European Union\nwdt:P150 is contains the administrative territorial entity\nwdt:P38 is currency\nwd:Q4916 is euro", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?country wdt:P150 wd:Q458;\",\n    \"       wdt:P38 wd:Q4916.\",\n    \"}\"\n  ]\n}"}
{"question": "Which countries in the European Union adopted the Euro?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which countries in the European Union adopted the Euro?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4396 is European Union\nkg:1934 is contains the administrative territorial entity\nkg:4547 is currency\nkg:6859 is euro", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?country kg:1934 kg:4396 .\",\n    \"?country kg:4547 kg:6859 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which country was Bill Gates born in?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which country was Bill Gates born in?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"  wd:Q8159 wdt:P19 ?birthPlace .\",\n    \"  ?birthPlace wdt:P17 ?country .\",\n    \"}\"\n  ]\n}"}
{"question": "Which country was Bill Gates born in?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which country was Bill Gates born in?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q5284 is Bill Gates\nwdt:P19 is place of birth\nwdt:P17 is country", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"  wd:Q5284 wdt:P19 ?place .\",\n    \"  ?place wdt:P17 ?country .\",\n    \"}\"\n  ]\n}"}
{"question": "Which country was Bill Gates born in?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which country was Bill Gates born in?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4141 is Bill Gates\nkg:4973 is place of birth\nkg:6146 is country", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"  kg:4141 kg:4973 ?birthPlace .\",\n    \"  ?birthPlace kg:6146 ?country .\",\n    \"}\"\n  ]\n}"}
{"question": "How many grand-children did Jacques Cousteau have?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many grand-children did Jacques Cousteau have?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q170022 AS ?jacquesCousteau).\",\n    \"  ?child wdt:P40 ?jacquesCousteau.\",\n    \"  ?grandChild wdt:P40 ?child.\",\n    \"}\"\n  ]\n}"}
{"question": "How many grand-children did Jacques Cousteau have?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many grand-children did Jacques Cousteau have?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q83233 is Jacques Cousteau\nwdt:P40 is child\nwdt:P40 is child", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?grandchild\",\n    \"WHERE {\",\n    \"  wd:Q83233 wdt:P40 ?child .\",\n    \"  ?child wdt:P40 ?grandchild .\",\n    \"}\"\n  ]\n}"}
{"question": "How many grand-children did Jacques Cousteau have?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many grand-children did Jacques Cousteau have?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3588 is Jacques Cousteau\nkg:1573 is child\nkg:1573 is child", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?grandchild\",\n    \"WHERE {\",\n    \"  kg:3588 kg:1573 ?child .\",\n    \"  ?child kg:1573 ?grandchild .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all professional skateboarders from Sweden.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all professional skateboarders from Sweden.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P106 wd:Q10833314;\", \"# professional skateboarder\",\n    \"?item wdt:P27 wd:Q34;\" ,\"# country of citizenship Sweden\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all professional skateboarders from Sweden.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all professional skateboarders from Sweden.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P641 is sport\nwd:Q842284 is skateboarding\nwdt:P19 is place of birth\nwdt:P131 is located in the administrative territorial entity\nwd:Q34 is Sweden", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P641 wd:Q842284 ;\",\n    \"       wdt:P19 ?birthPlace .\",\n    \"?birthPlace wdt:P131 wd:Q34 .\"\n    ]}\n \t\t \t\t    \t  \t\t    \t"}
{"question": "Give me all professional skateboarders from Sweden.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all professional skateboarders from Sweden.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3199 is sport\nkg:2295 is skateboarding\nkg:5284 is place of birth\nkg:2937 is located in the administrative territorial entity\nkg:3100 is Sweden", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"?s kg:3199 kg:2295 ;\",\n    \"kg:5284 ?birthPlace .\",\n    \"?birthPlace kg:2937 kg:3100 .\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Give me all Argentine films.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all Argentine films.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q11424 ;\", \"# film\",\n    \"wdt:P495 wd:Q414.\" ,\"\\t# Argentina\"\n    ]}\n "}
{"question": "Give me all Argentine films.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all Argentine films.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q11424 is film\nwdt:P495 is country of origin\nwd:Q414 is Argentina", "response": "{\n  \"query\": [\n    \"SELECT\",\n    \"?item\",\n    \"WHERE\",\n    \"{\",\n    \"?item wdt:P31 wd:Q11424;\",\n    \"?item wdt:P495 wd:Q414.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all Argentine films.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all Argentine films.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4916 is instance of\nkg:9085 is film\nkg:6012 is country of origin\nkg:6146 is Argentina", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?film\",\n    \"WHERE {\",\n    \"?film kg:9085 \\\"true\\\"^^xsd:boolean .\",\n    \"?film kg:6012 kg:6146 .\",\n    \"}\"\n  ]\n}"}
{"question": "How did Michael Jackson die?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How did Michael Jackson die?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?causeOfDeath\",\n    \"WHERE {\",\n    \"  BIND(wd:Q2831 AS ?michaelJackson)\",\n    \"  ?michaelJackson wdt:P509 ?causeOfDeath .\",\n    \"}\"\n  ]\n}"}
{"question": "How did Michael Jackson die?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How did Michael Jackson die?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q2831 is Michael Jackson\nwdt:P509 is cause of death", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?causeOfDeath\",\n    \"WHERE {\",\n    \"  wd:Q2831 wdt:P509 ?causeOfDeath .\",\n    \"}\"\n  ]\n}"}
{"question": "How did Michael Jackson die?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How did Michael Jackson die?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3927 is Michael Jackson\nkg:0761 is cause of death", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?causeOfDeath\",\n    \"WHERE {\",\n    \"  kg:3927 kg:0761 ?causeOfDeath .\",\n    \"}\"\n  ]\n}"}
{"question": "Which U.S. state has been admitted latest?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which U.S. state has been admitted latest?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q35657 ;\",\n    \"       p:P794 ?statement .\",\n    \"?statement ps:P794 ?admissionDate .\",\n    \"FILTER NOT EXISTS { ?statement pq:P582 [] }\",\n    \"}\",\n    \"ORDER BY DESC(?admissionDate)\",\n    \"LIMIT 1\"\n  ]\n}"}
{"question": "Which U.S. state has been admitted latest?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which U.S. state has been admitted latest?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q35657 is U.S. state\nwdt:P571 is inception", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?state\",\n    \"WHERE {\",\n    \"?state wdt:P31 wd:Q35657.\",\n    \"?state wdt:P571 ?inception.\",\n    \"}\",\n    \"ORDER BY DESC(?inception)\",\n    \"LIMIT 1\"\n  ]\n}"}
{"question": "Which U.S. state has been admitted latest?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which U.S. state has been admitted latest?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0265 is instance of\nkg:2557 is U.S. state\nkg:1837 is inception", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?state\",\n    \"WHERE {\",\n    \"?state kg:2557 .\",\n    \"?state kg:1837 ?inception .\",\n    \"{ SELECT ?state (MAX(?inception) AS ?maxInception)\",\n    \"WHERE {\",\n    \"?state kg:2557 .\",\n    \"?state kg:1837 ?inception .\",\n    \"}\",\n    \"} \",\n    \"FILTER (?inception = ?maxInception).\",\n    \"}\"\n  ]\n}"}
{"question": "Which classes does the Millepede belong to?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which classes does the Millepede belong to?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?class\",\n    \"WHERE {\",\n    \"  wd:Q183346 wdt:P31 ?class.\",\n    \"}\"\n  ]\n}"}
{"question": "Which classes does the Millepede belong to?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which classes does the Millepede belong to?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q11185669 is millipede\nwdt:P279 is subclass of", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?class\",\n    \"WHERE {\",\n    \"  wd:Q11185669 wdt:P279 ?class .\",\n    \"}\"\n  ]\n}"}
{"question": "Which classes does the Millepede belong to?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which classes does the Millepede belong to?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0355 is millipede\nkg:4290 is subclass of", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?class\",\n    \"WHERE {\",\n    \"  kg:0355 kg:4290 ?class .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me the homepage of Forbes.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me the homepage of Forbes.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P2002 \\\"https://www.forbes.com/\\\" .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me the homepage of Forbes.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me the homepage of Forbes.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q25161472 is Forbes\nwdt:P856 is official website", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?website\",\n    \"WHERE {\",\n    \"  wd:Q25161472 wdt:P856 ?website .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me the homepage of Forbes.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me the homepage of Forbes.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2247 is Forbes\nkg:2521 is official website", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"  kg:2247 kg:2521 ?resource .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the husband of Amanda Palmer?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is the husband of Amanda Palmer?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q291628 AS ?amandaPalmer).\",\n    \"  ?amandaPalmer wdt:P26 ?item.\"\n    ]}\n "}
{"question": "Who is the husband of Amanda Palmer?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is the husband of Amanda Palmer?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P26 is spouse\nwd:Q240377 is Amanda Palmer", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q240377 wdt:P26 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the husband of Amanda Palmer?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is the husband of Amanda Palmer?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7753 is spouse\nkg:5663 is Amanda Palmer", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?husband\",\n    \"WHERE {\",\n    \"  kg:5663 kg:7753 ?husband .\",\n    \"}\"\n  ]\n}"}
{"question": "Who painted The Storm on the Sea of Galilee?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who painted The Storm on the Sea of Galilee?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?artist\",\n    \"WHERE {\",\n    \"  wd:Q150847 wdt:P170 ?artist .\",\n    \"}\"\n  ]\n}"}
{"question": "Who painted The Storm on the Sea of Galilee?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who painted The Storm on the Sea of Galilee?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q2246489 is The Storm on the Sea of Galilee\nwdt:P170 is creator", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?creator\",\n    \"WHERE {\",\n    \"  wd:Q2246489 wdt:P170 ?creator .\",\n    \"}\"\n  ]\n}"}
{"question": "Who painted The Storm on the Sea of Galilee?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who painted The Storm on the Sea of Galilee?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9947 is The Storm on the Sea of Galilee\nkg:9480 is creator", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?creator\",\n    \"WHERE {\",\n    \"  kg:9947 kg:9480 ?creator .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the highest place of Karakoram?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the highest place of Karakoram?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P361 wd:Q1777.\",\n    \"?item wdt:P807 (MAX(?height)).\",\n    \"?item wdt:P2044 ?height.\",\n    \"FILTER((?height > 0))\",\n    \"}\"\n  ]\n}"}
{"question": "What is the highest place of Karakoram?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the highest place of Karakoram?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q5469 is Karakoram\nwdt:P610 is highest point", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q5469 wdt:P610 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the highest place of Karakoram?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the highest place of Karakoram?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1348 is Karakoram\nkg:5338 is highest point", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?place\",\n    \"WHERE {\",\n    \"  kg:1348 kg:5338 ?place .\",\n    \"}\"\n  ]\n}"}
{"question": "When did Finland join the EU?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “When did Finland join the EU?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q33 AS ?item).\",\n    \"  ?item wdt:P463 ?euMembership.\",\n    \"  FILTER NOT EXISTS { ?euMembership wdt:P577 [] . }\",\n    \"}\"\n  ]\n}"}
{"question": "When did Finland join the EU?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “When did Finland join the EU?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q33 is Finland\np:P463 is member of\npq:P580 is start time\nps:P463 is member of\nwd:Q458 is European Union", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"PREFIX wd: <http://www.wikidata.org/entity/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q33 wdt:P463 wd:Q458.\",\n    \"  wd:Q33 p:P463 ?statement.\",\n    \"  ?statement ps:P463 wd:Q458.\",\n    \"  ?statement pq:P580 ?item.\"\n    ]}\n "}
{"question": "When did Finland join the EU?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “When did Finland join the EU?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2680 is Finland\nkg:1277 is member of\nkg:1675 is start time\nkg:8680 is member of\nkg:6217 is European Union", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"  kg:2680 kg:1277 ?resource .\",\n    \"  ?resource kg:1675 ?startTime .\",\n    \"  ?resource kg:8680 kg:6217 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which actors play in Big Bang Theory?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which actors play in Big Bang Theory?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"?tvShow wdt:P31 wd:Q12136 ; wdt:P112 wd:Q80303 ; rdfs:label \\\"The Big Bang Theory\\\"@en.\",\n    \"?tvShow wdt:P161 ?actor.\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Which actors play in Big Bang Theory?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which actors play in Big Bang Theory?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q8539 is The Big Bang Theory\nwdt:P161 is cast member", "response": "{\n  \"query\": [\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"  wd:Q8539 wdt:P161 ?actor .\",\n    \"}\"\n  ]\n}"}
{"question": "Which actors play in Big Bang Theory?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which actors play in Big Bang Theory?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1737 is The Big Bang Theory\nkg:7599 is cast member", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"  kg:1737 kg:7599 ?actor .\",\n    \"}\"\n  ]\n}"}
{"question": "Which computer scientist won an oscar?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which computer scientist won an oscar?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P106 wd:Q82594 ;\", \"# computer scientist\",\n    \"wdt:P166 wd:Q19020 .\" ,\"# won Oscar\"\n    ]}\n "}
{"question": "Which computer scientist won an oscar?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which computer scientist won an oscar?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P106 is occupation\nwd:Q82594 is computer scientist\nwdt:P166 is award received\nwdt:P31 is instance of\nwd:Q19020 is Academy Awards", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P106 wd:Q82594;\",\n    \"       wdt:P166 wd:Q19020.\",\n    \"}\"\n  ]\n}"}
{"question": "Which computer scientist won an oscar?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which computer scientist won an oscar?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1794 is occupation\nkg:0345 is computer scientist\nkg:5117 is award received\nkg:5645 is instance of\nkg:6613 is Academy Awards", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"?s kg:5645 kg:0345 ;\",\n    \"kg:5117 kg:6613 .\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "Who wrote Harry Potter?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who wrote Harry Potter?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?author\",\n    \"WHERE {\",\n    \"  wd:Q28865 wdt:P50 ?author .\",\n    \"}\"\n  ]\n}"}
{"question": "Who wrote Harry Potter?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who wrote Harry Potter?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q8337 is Harry Potter\nwdt:P50 is author", "response": "{\n  \"query\": [\n    \"SELECT ?author\",\n    \"WHERE {\",\n    \"  wd:Q8337 wdt:P50 ?author .\",\n    \"}\"\n  ]\n}"}
{"question": "Who wrote Harry Potter?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who wrote Harry Potter?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7554 is Harry Potter\nkg:8440 is author", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?author\",\n    \"WHERE {\",\n    \"  kg:7554 kg:8440 ?author .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all writers that won the Nobel Prize in literature.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all writers that won the Nobel Prize in literature.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?writer\",\n    \"WHERE {\",\n    \"?writer wdt:P166 wd:Q38006 .\",\n    \"?writer wdt:P106 wd:Q36180 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all writers that won the Nobel Prize in literature.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all writers that won the Nobel Prize in literature.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P106 is occupation\nwd:Q36180 is writer\nwdt:P166 is award received\nwd:Q37922 is Nobel Prize in Literature", "response": "{\n  \"query\": [\n    \"SELECT ?writer\",\n    \"WHERE {\",\n    \"?writer wdt:P106 wd:Q36180.\",\n    \"?writer wdt:P166 wd:Q37922.\"\n    ]}\n \t\t \t\t    \t  \t   \t\t\t"}
{"question": "Give me all writers that won the Nobel Prize in literature.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all writers that won the Nobel Prize in literature.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8720 is occupation\nkg:3054 is writer\nkg:4088 is award received\nkg:6822 is Nobel Prize in Literature", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?writer\",\n    \"WHERE {\",\n    \"?writer kg:8720 kg:3054 ;\",\n    \"       kg:4088 kg:6822 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me English actors starring in Lovesick.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me English actors starring in Lovesick.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"?tvShow wdt:P31 wd:Q201658 ; rdfs:label \\\"Lovesick\\\"@en.\",\n    \"?tvShow wdt:P161 ?actor.\",\n    \"?actor wdt:P27 wd:Q145.\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "Give me English actors starring in Lovesick.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me English actors starring in Lovesick.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q12125895 is Lovesick\nwdt:P161 is cast member\nwdt:P19 is place of birth\nwdt:P17 is country\nwd:Q145 is United Kingdom", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"?actor wdt:P161 wd:Q12125895;\",\n    \"      wdt:P19 ?birthPlace.\",\n    \"?birthPlace wdt:P17 wd:Q145.\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "Give me English actors starring in Lovesick.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me English actors starring in Lovesick.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5043 is Lovesick\nkg:7156 is cast member\nkg:3179 is place of birth\nkg:8637 is country\nkg:3447 is United Kingdom", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?actor\",\n    \"WHERE {\",\n    \"?show kg:7156 ?actor .\",\n    \"?show rdf:type kg:5043 .\",\n    \"?actor kg:3179 ?birthplace .\",\n    \"?birthplace kg:8637 kg:3447 .\",\n    \"FILTER (langMatches(lang(?actor), 'en'))\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "In which city was the president of Montenegro born?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “In which city was the president of Montenegro born?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?birthplace\",\n    \"WHERE {\",\n    \"?president wdt:P39 wd:Q794098 .\", \"# President of Montenegro\",\n    \"?president wdt:P19 ?birthplace .\", \"# birthplace\"\n    ]}\n "}
{"question": "In which city was the president of Montenegro born?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “In which city was the president of Montenegro born?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q236 is Montenegro\nwdt:P35 is head of state\nwdt:P19 is place of birth\nwdt:P31 is instance of\nwd:Q515 is city", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?city\",\n    \"{\",\n    \"?president wdt:P35 wd:Q236.\",\n    \"?president wdt:P19 ?birthPlace.\",\n    \"?birthPlace wdt:P31 wd:Q515.\",\n    \"?city = ?birthPlace\",\n    \"}\"\n  ]\n}"}
{"question": "In which city was the president of Montenegro born?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “In which city was the president of Montenegro born?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6244 is Montenegro\nkg:0839 is head of state\nkg:4651 is place of birth\nkg:0895 is instance of\nkg:0321 is city", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?city\",\n    \"WHERE {\",\n    \"?president kg:0839 kg:6244 ;\",\n    \"         kg:4651 ?birthPlace .\",\n    \"?birthPlace kg:0895 kg:0321 ;\",\n    \"          kg:0321 ?city .\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "Which U.S. state has the highest population density?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which U.S. state has the highest population density?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?state\",\n    \"WHERE {\",\n    \"?state wdt:P31 wd:Q35657 ;\", \"# instance of administrative territorial entity of the United States\",\n    \"  wdt:P276* wd:Q30 .\", \"# located in the United States\",\n    \"?state p:P1082 ?populationStatement .\",\n    \"?populationStatement ps:P1082 ?population .\",\n    \"?populationStatement pq:P585 ?date .\",\n    \"FILTER(YEAR(?date) = 2020) .\",\n    \"?state wdt:P2046 ?area .\", \"# area\",\n    \"BIND((?population / ?area) AS ?density) .\",\n    \"{ SELECT ?state (MAX(?density) AS ?maxDensity) WHERE {\",\n    \"?state wdt:P31 wd:Q35657 ;\",\n    \"  wdt:P276* wd:Q30 .\",\n    \"?state p:P1082 ?populationStatement .\",\n    \"?populationStatement ps:P1082 ?population .\",\n    \"?populationStatement pq:P585 ?date .\",\n    \"FILTER(YEAR(?date) = 2020) .\",\n    \"?state wdt:P2046 ?area .\",\n    \"BIND((?population / ?area) AS ?density) .\",\n    \"} GROUP BY ?state }\",\n    \"FILTER(?density = ?maxDensity)\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Which U.S. state has the highest population density?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which U.S. state has the highest population density?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q35657 is U.S. state\nwdt:P1082 is population\nwdt:P2046 is area", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?state\",\n    \"WHERE {\",\n    \"?state wdt:P31 wd:Q35657.\",\n    \"?state wdt:P1082 ?population.\",\n    \"?state wdt:P2046 ?area.\",\n    \"BIND(?population / ?area AS ?density).\",\n    \"{ SELECT ?state (MAX(?density) AS ?maxDensity) WHERE {\",\n    \"?state wdt:P31 wd:Q35657.\",\n    \"?state wdt:P1082 ?population.\",\n    \"?state wdt:P2046 ?area.\",\n    \"BIND(?population / ?area AS ?density).\",\n    \"} GROUP BY ?state }\",\n    \"FILTER(?density = ?maxDensity).\",\n    \"}\"\n  ]\n}"}
{"question": "Which U.S. state has the highest population density?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which U.S. state has the highest population density?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6804 is instance of\nkg:6879 is U.S. state\nkg:9633 is population\nkg:4555 is area", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?state\",\n    \"WHERE {\",\n    \"?state kg:6879 \\\"true\\\"^^xsd:boolean .\",\n    \"?state kg:9633 ?population .\",\n    \"?state kg:4555 ?area .\",\n    \"BIND (?population / ?area AS ?density) .\",\n    \"{ SELECT ?state (MAX (?population / ?area) AS ?maxDensity) WHERE { ?state kg:6879 \\\"true\\\"^^xsd:boolean . ?state kg:9633 ?population . ?state kg:4555 ?area . } GROUP BY ?state }\",\n    \"BIND ((?density = ?maxDensity) AS ?isMax) .\",\n    \"FILTER (?isMax)\",\n    \"}\"\n  ]\n}"}
{"question": "What is the longest river in China?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the longest river in China?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q4022 ;\", \"# river\",\n    \"wdt:P17 wd:Q148 ;\", \"# located in China\",\n    \"?length wdt:P2043 ?item .\", \"# length of the river\",\n    \"FILTER NOT EXISTS { ?other wdt:P31 wd:Q4022 ; wdt:P17 wd:Q148 ; ?olength wdt:P2043 ?other . FILTER (?olength > ?length) }\",\n    \"}\"\n  ]\n}"}
{"question": "What is the longest river in China?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the longest river in China?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q4022 is river\nwdt:P17 is country\nwd:Q148 is People's Republic of China\nwdt:P2043 is length", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?river\",\n    \"WHERE {\",\n    \"?river wdt:P31 wd:Q4022 ;\",\n    \"       wdt:P17 wd:Q148 ;\",\n    \"       wdt:P2043 ?length .\",\n    \"FILTER NOT EXISTS {\",\n    \"?otherRiver wdt:P31 wd:Q4022 ;\",\n    \"                wdt:P17 wd:Q148 ;\",\n    \"                wdt:P2043 ?otherLength .\",\n    \"FILTER (?otherLength > ?length)\",\n    \"}\",\n    \"}\"\n  ]\n}"}
{"question": "What is the longest river in China?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the longest river in China?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0268 is instance of\nkg:7764 is river\nkg:6821 is country\nkg:4374 is People's Republic of China\nkg:9050 is length", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?river\",\n    \"WHERE {\",\n    \"?river kg:7764 .\",\n    \"?river kg:0268 kg:4374 .\",\n    \"?river kg:9050 ?length .\",\n    \"}\",\n    \"ORDER BY DESC(?length)\",\n    \"LIMIT 1\"\n  ]\n}"}
{"question": "What is the area code of Berlin?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the area code of Berlin?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P402 ?areaCode .\",\n    \"?item wdt:P17 wd:Q90 .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the area code of Berlin?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the area code of Berlin?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q64 is Berlin\nwdt:P473 is local dialing code", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q64 AS ?item).\",\n    \"  ?item wdt:P473 [] .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the area code of Berlin?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the area code of Berlin?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1562 is Berlin\nkg:0879 is local dialing code", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?areaCode\",\n    \"WHERE {\",\n    \"  kg:1562 kg:hasAreaCode ?areaCode .\",\n    \"  FILTER (?areaCode = kg:0879)\",\n    \"}\"\n  ]\n}"}
{"question": "How many scientists graduated from an Ivy League university?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many scientists graduated from an Ivy League university?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P106 wd:Q901.\",\n    \"?item wdt:P69 ?university.\",\n    \"?university wdt:P31 wd:Q192611.\",\n    \"?university wdt:P361 wd:Q986522.\"\n    ]}\n "}
{"question": "How many scientists graduated from an Ivy League university?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many scientists graduated from an Ivy League university?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P106 is occupation\nwd:Q901 is scientist\nwdt:P69 is educated at\nwd:Q49113 is Ivy League\nwdt:P527 is has part(s)", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P106 wd:Q901.\",\n    \"?item wdt:P69 ?university.\",\n    \"?university wdt:P527 wd:Q49113.\"\n    ]}\n \t\t \t\t    \t  \t   \t\t\t"}
{"question": "How many scientists graduated from an Ivy League university?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many scientists graduated from an Ivy League university?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1048 is occupation\nkg:6101 is scientist\nkg:2513 is educated at\nkg:4279 is Ivy League\nkg:2228 is has part(s)", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"?s kg:1048 kg:6101.\",\n    \"?s kg:2513 ?u.\",\n    \"?u kg:2228 ?v.\",\n    \"?v kg:4279 \\\"Ivy League\\\"^^xsd:string.\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Which professional surfers were born in Australia?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which professional surfers were born in Australia?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P106 wd:Q7973238 ;\", \"# professional surfer\",\n    \"wdt:P19 wd:Q408.\", \"# born in Australia\",\n    \"}\"\n  ]\n}"}
{"question": "Which professional surfers were born in Australia?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which professional surfers were born in Australia?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P19 is place of birth\nwdt:P17 is country\nwd:Q408 is Australia\nwdt:P106 is occupation\nwd:Q13561328 is surfer", "response": "{\n  \"query\": [\n    \"SELECT\",\n    \"?item\",\n    \"WHERE\",\n    \"{\",\n    \"?item wdt:P106 wd:Q13561328 ;\",\n    \"wdt:P19 ?place .\",\n    \"?place wdt:P17 wd:Q408 .\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Which professional surfers were born in Australia?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which professional surfers were born in Australia?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4767 is place of birth\nkg:7914 is country\nkg:1900 is Australia\nkg:2462 is occupation\nkg:6340 is surfer", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"?s kg:4767 kg:1900 ;\",\n    \"      kg:2462 kg:6340 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all Dutch parties.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all Dutch parties.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q7278.\",\n    \"?item wdt:P17 wd:Q55.\"\n    ]}\n "}
{"question": "Give me all Dutch parties.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all Dutch parties.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P17 is country\nwd:Q55 is Netherlands\nwdt:P31 is instance of\nwd:Q7278 is political party", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q7278;\",\n    \"?item wdt:P17 wd:Q55.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all Dutch parties.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all Dutch parties.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1972 is country\nkg:1749 is Netherlands\nkg:3085 is instance of\nkg:4788 is political party", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?party\",\n    \"WHERE {\",\n    \"?party kg:3085 kg:4788 ;\",\n    \"       kg:1972 kg:1749 .\",\n    \"}\"\n  ]\n}"}
{"question": "How many moons does Mars have?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many moons does Mars have?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?moon\",\n    \"WHERE {\",\n    \"  wd:Q111 wd:t:31 ?mars .\",\n    \"  ?mars wdt:P398 ?moon .\",\n    \"}\"\n  ]\n}"}
{"question": "How many moons does Mars have?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many moons does Mars have?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q111 is Mars\nwdt:P398 is child astronomical body", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?moon\",\n    \"WHERE {\",\n    \"  wd:Q111 wdt:P398 ?moon .\",\n    \"}\"\n  ]\n}"}
{"question": "How many moons does Mars have?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many moons does Mars have?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5773 is Mars\nkg:8511 is child astronomical body", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?moon\",\n    \"WHERE {\",\n    \"  kg:5773 kg:8511 ?moon .\",\n    \"  FILTER (NOT (?moon = kg:5773))\",\n    \"}\"\n  ]\n}"}
{"question": "What is Batman's real name?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is Batman's real name?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q89 AS ?batman).\",\n    \"  ?batman wdt:P1477 ?name.\",\n    \"  FILTER(LANGMATCHES(LANG(?name), 'en')).\",\n    \"  ?batman wdt:P735 ?item.\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "What is Batman's real name?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is Batman's real name?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q2695156 is Batman\nwdt:P460 is said to be the same as", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q2695156 wdt:P1477 ?name .\",\n    \"  ?item wdt:P460 ?name .\",\n    \"}\"\n  ]\n}"}
{"question": "What is Batman's real name?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is Batman's real name?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8690 is Batman\nkg:9050 is said to be the same as", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?realName\",\n    \"WHERE {\",\n    \"  kg:8690 kg:9050 ?realName .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the author of WikiLeaks?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is the author of WikiLeaks?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P112 creatorOf <https://www.wikidata.org/wiki/Q43274> .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the author of WikiLeaks?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is the author of WikiLeaks?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q359 is WikiLeaks\nwdt:P50 is author", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?author\",\n    \"WHERE {\",\n    \"  wd:Q359 wdt:P50 ?author .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the author of WikiLeaks?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is the author of WikiLeaks?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2318 is WikiLeaks\nkg:3776 is author", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?author\",\n    \"WHERE {\",\n    \"  kg:2318 kg:3776 ?author .\",\n    \"}\"\n  ]\n}"}
{"question": "When was Carlo Giuliani shot?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “When was Carlo Giuliani shot?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q5;\",\n    \"?item wdt:P106 wd:Q82955;\",\n    \"?item wdt:P569 ?birthDate;\",\n    \"?item wdt:P570 ?deathDate;\",\n    \"?item wdt:P27 wd:Q38;\",\n    \"?item wdt:P734 ?givenName;\",\n    \"?item wdt:P735 ?familyName;\",\n    \"FILTER(CONTAINS(LCASE(?givenName), \\\"carlo\\\") && CONTAINS(LCASE(?familyName), \\\"giuliani\\\"))\",\n    \"?event wdt:P26 ?item;\",\n    \"?event wdt:P31 wd:Q147955;\",\n    \"?event wdt:P580 ?eventStartDate.\",\n    \"}\"\n  ]\n}"}
{"question": "When was Carlo Giuliani shot?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “When was Carlo Giuliani shot?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q164791 is Carlo Giuliani\nwdt:P570 is date of death", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q164791 AS ?item).\",\n    \"  ?item wdt:P570 ?date.\",\n    \"}\"\n  ]\n}"}
{"question": "When was Carlo Giuliani shot?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “When was Carlo Giuliani shot?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5393 is Carlo Giuliani\nkg:1019 is date of death", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?date\",\n    \"WHERE {\",\n    \"  kg:5393 kg:1019 ?date .\",\n    \"}\"\n  ]\n}"}
{"question": "Who was the wife of President Lincoln?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who was the wife of President Lincoln?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q91 AS ?lincoln).\",\n    \"  ?lincoln wdt:P26 ?item.\",\n    \"}\"\n  ]\n}"}
{"question": "Who was the wife of President Lincoln?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who was the wife of President Lincoln?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q91 is Abraham Lincoln\nwdt:P26 is spouse", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q91 wdt:P26 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "Who was the wife of President Lincoln?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who was the wife of President Lincoln?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0844 is Abraham Lincoln\nkg:0994 is spouse", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?x\",\n    \"WHERE {\",\n    \"  kg:0844 kg:0994 ?x .\",\n    \"}\"\n  ]\n}"}
{"question": "How many awards has Bertrand Russell?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many awards has Bertrand Russell?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?award\",\n    \"WHERE {\",\n    \"  wd:Q8925 wdt:P166 ?award .\",\n    \"}\"\n  ]\n}"}
{"question": "How many awards has Bertrand Russell?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many awards has Bertrand Russell?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q33760 is Bertrand Russell\nwdt:P166 is award received", "response": "{\n  \"query\": [\n    \"SELECT ?award\",\n    \"WHERE {\",\n    \"  wd:Q33760 wdt:P166 ?award .\",\n    \"}\"\n  ]\n}"}
{"question": "How many awards has Bertrand Russell?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many awards has Bertrand Russell?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2307 is Bertrand Russell\nkg:0557 is award received", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?award\",\n    \"WHERE {\",\n    \"  kg:2307 kg:0557 ?award .\",\n    \"}\"\n  ]\n}"}
{"question": "Is Pamela Anderson a vegan?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Is Pamela Anderson a vegan?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q5;\",\n    \"?item wdt:P106 wd:Q10858975;\",\n    \"?item wdt:P166 wd:Q21038108 .\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Is Pamela Anderson a vegan?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Is Pamela Anderson a vegan?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q83325 is Pamela Anderson\nwdt:P1576 is lifestyle\nwd:Q83364 is vegetarianism", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q83325 AS ?item).\",\n    \"  ?item wdt:P1576 wd:Q83364.\",\n    \"}\"\n  ]\n}"}
{"question": "Is Pamela Anderson a vegan?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Is Pamela Anderson a vegan?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5099 is Pamela Anderson\nkg:1327 is lifestyle\nkg:6354 is vegetarianism", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"  kg:5099 kg:1327 ?resource .\",\n    \"  FILTER (?resource = kg:6354)\",\n    \"}\"\n  ]\n}"}
{"question": "Which space probes were sent into orbit around the sun?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which space probes were sent into orbit around the sun?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q7228 ;\", \"# space probe\",\n    \"wdt:P376 ?orbit.\", \"# orbit\"\n    ]}\n   \t\t\t \t   \t\t\t\t \t\t"}
{"question": "Which space probes were sent into orbit around the sun?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which space probes were sent into orbit around the sun?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P522 is type of orbit\nwd:Q737809 is heliocentric orbit", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q2595698 ;\", \"# space probe\",\n    \"wdt:P522 wd:Q737809 .\", \"# heliocentric orbit\",\n    \"}\"\n  ]\n}"}
{"question": "Which space probes were sent into orbit around the sun?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which space probes were sent into orbit around the sun?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3989 is type of orbit\nkg:2459 is heliocentric orbit", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?probe\",\n    \"WHERE {\",\n    \"?probe a kg:SpaceProbe ;\",\n    \"       kg:orbit kg:3989 ;\",\n    \"       kg:typeOfOrbit kg:2459 .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the daughter of Robert Kennedy married to?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is the daughter of Robert Kennedy married to?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P22 wd:Q192294; # father\",\n    \"wdt:P26 ?spouse. # spouse\",\n    \"FILTER (?item != wd:Q192294).\", \"# exclude Robert Kennedy himself\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the daughter of Robert Kennedy married to?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is the daughter of Robert Kennedy married to?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q25310 is Robert F. Kennedy\nwdt:P40 is child\nwdt:P21 is sex or gender\nwd:Q6581072 is female\nwdt:P26 is spouse", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"PREFIX wd: <http://www.wikidata.org/entity/>\",\n    \"SELECT ?daughter ?spouse\",\n    \"WHERE {\",\n    \"  wd:Q25310 wdt:P40 ?daughter .\",\n    \"  ?daughter wdt:P21 wd:Q6581072 .\",\n    \"  ?daughter wdt:P26 ?spouse .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the daughter of Robert Kennedy married to?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is the daughter of Robert Kennedy married to?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5083 is Robert F. Kennedy\nkg:1582 is child\nkg:5789 is sex or gender\nkg:3234 is female\nkg:0173 is spouse", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?spouse\",\n    \"WHERE {\",\n    \"  ?daughter kg:1582 kg:5083 .\",\n    \"  ?daughter kg:5789 kg:3234 .\",\n    \"  ?daughter kg:0173 ?spouse .\",\n    \"}\"\n  ]\n}"}
{"question": "How many students does the Free University of Amsterdam have?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many students does the Free University of Amsterdam have?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q992044 AS ?item).\",\n    \"  ?item wdt:P1630 ?students.\",\n    \"}\"\n  ]\n}"}
{"question": "How many students does the Free University of Amsterdam have?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many students does the Free University of Amsterdam have?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q214341 is University of Amsterdam\nwdt:P2196 is students count", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q9955 AS ?item).\", \"# Free University of Amsterdam\",\n    \"  ?item wdt:P2196 ?students.\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "How many students does the Free University of Amsterdam have?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many students does the Free University of Amsterdam have?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4066 is University of Amsterdam\nkg:8357 is students count", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?studentsCount\",\n    \"WHERE {\",\n    \"  kg:4066 kg:hasStudentsCount ?studentsCount .\",\n    \"  FILTER (?studentsCount = kg:8357)\",\n    \"}\"\n  ]\n}"}
{"question": "What is the revenue of IBM?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the revenue of IBM?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  ?item wdt:P1128 ?revenue.\",\n    \"  ?item wdt:P161 \\\"IBM\\\".\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "What is the revenue of IBM?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the revenue of IBM?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q37156 is IBM\nwdt:P2139 is total revenue", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?revenue\",\n    \"WHERE {\",\n    \"  wd:Q37156 wdt:P2139 ?revenue .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the revenue of IBM?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the revenue of IBM?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8611 is IBM\nkg:4561 is total revenue", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?revenue\",\n    \"WHERE {\",\n    \"  kg:8611 kg:4561 ?revenue .\",\n    \"}\"\n  ]\n}"}
{"question": "How many James Bond movies do exist?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many James Bond movies do exist?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q11424;\",\n    \"       wdt:P840 wd:Q1066636 .\",\n    \"}\"\n  ]\n}"}
{"question": "How many James Bond movies do exist?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many James Bond movies do exist?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q11424 is film\nwd:Q2009573 is James Bond\nwdt:P144 is based on\nwdt:P674 is characters", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q11424;\",\n    \"?item wdt:P674 wd:Q2009573.\",\n    \"}\"\n  ]\n}"}
{"question": "How many James Bond movies do exist?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many James Bond movies do exist?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7008 is instance of\nkg:7673 is film\nkg:9402 is James Bond\nkg:9593 is based on\nkg:2301 is characters", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?film\",\n    \"WHERE {\",\n    \"?film kg:7673 .\",\n    \"?film kg:9593 ?book .\",\n    \"?book kg:2301 kg:9402 .\",\n    \"}\"\n  ]\n}"}
{"question": "Who does the voice of Bart Simpson?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who does the voice of Bart Simpson?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P161 wd:Q131105.\",\n    \"?item wdt:P453 ?voiceActor.\",\n    \"FILTER(CONTAINS(LCASE(?voiceActor), \\\"bart simpson\\\"))\",\n    \"}\"\n  ]\n}"}
{"question": "Who does the voice of Bart Simpson?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who does the voice of Bart Simpson?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q5480 is Bart Simpson\nwdt:P725 is voice actor", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q5480 wdt:P725 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "Who does the voice of Bart Simpson?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who does the voice of Bart Simpson?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0013 is Bart Simpson\nkg:9734 is voice actor", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?voiceActor\",\n    \"WHERE {\",\n    \"  kg:0013 kg:voiceActor ?voiceActor .\",\n    \"}\"\n  ]\n}"}
{"question": "Who was Tom Hanks married to?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who was Tom Hanks married to?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?spouse\",\n    \"WHERE {\",\n    \"  BIND(wd:Q2269 AS ?tomHanks)\",\n    \"  ?tomHanks wdt:P26 ?spouse.\"\n    ]}\n "}
{"question": "Who was Tom Hanks married to?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who was Tom Hanks married to?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q2263 is Tom Hanks\nwdt:P26 is spouse", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q2263 wdt:P26 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "Who was Tom Hanks married to?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who was Tom Hanks married to?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4790 is Tom Hanks\nkg:1852 is spouse", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?spouse\",\n    \"WHERE {\",\n    \"  kg:4790 kg:1852 ?spouse .\",\n    \"}\"\n  ]\n}"}
{"question": "Through which countries does the Yenisei river flow?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Through which countries does the Yenisei river flow?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"  wd:Q188037 wdt:P403 ?river.\",\n    \"  ?river wdt:P972 ?country.\",\n    \"}\"\n  ]\n}"}
{"question": "Through which countries does the Yenisei river flow?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Through which countries does the Yenisei river flow?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q78707 is Yenisey\nwdt:P17 is country", "response": "{\n  \"query\": [\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"  wd:Q78707 wdt:P403 ?river.\",\n    \"  ?river wdt:P17 ?country.\",\n    \"}\"\n  ]\n}"}
{"question": "Through which countries does the Yenisei river flow?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Through which countries does the Yenisei river flow?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4880 is Yenisey\nkg:6798 is country", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"  kg:4880 kg:flowsThrough ?country .\",\n    \"  ?country rdf:type kg:6798 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all cars that are produced in Germany.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all cars that are produced in Germany.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q1420 ;\", \"# car is an instance of vehicle (Q1420)\",\n    \"wdt:P495 wd:Q183.\", \"# country of origin is Germany (Q183)\"\n    ]}\n   \t\t\t\t\t\t    \t  \t   "}
{"question": "Give me all cars that are produced in Germany.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all cars that are produced in Germany.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q59773381 is automobile model series\nwdt:P176 is manufacturer\nwdt:P17 is country\nwd:Q183 is Germany\nwdt:P31 is instance of\nwd:Q786820 is automobile manufacturer", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q59773381 ;\",\n    \"       wdt:P176 ?manufacturer .\",\n    \"?manufacturer wdt:P17 wd:Q183 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all cars that are produced in Germany.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all cars that are produced in Germany.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4758 is instance of\nkg:4232 is automobile model series\nkg:9437 is manufacturer\nkg:8414 is country\nkg:9406 is Germany\nkg:4758 is instance of\nkg:2448 is automobile manufacturer", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?car\",\n    \"WHERE {\",\n    \"?car kg:4232 ?model .\",\n    \"?model kg:9437 ?manufacturer .\",\n    \"?manufacturer kg:8414 kg:9406 .\",\n    \"}\"\n  ]\n}"}
{"question": "When did Michael Jackson die?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “When did Michael Jackson die?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  ?item wdt:P31 wd:Q5;\",\n    \"  ?item wdt:P166 wd:Q28349;\",\n    \"  ?item wdt:P569 ?birthDate;\",\n    \"  ?item wdt:P570 ?deathDate.\",\n    \"  FILTER (YEAR(?deathDate) > 0).\",\n    \"}\"\n  ]\n}"}
{"question": "When did Michael Jackson die?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “When did Michael Jackson die?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q2831 is Michael Jackson\nwdt:P570 is date of death", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?dateOfDeath\",\n    \"WHERE {\",\n    \"  wd:Q2831 wdt:P570 ?dateOfDeath .\",\n    \"}\"\n  ]\n}"}
{"question": "When did Michael Jackson die?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “When did Michael Jackson die?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1405 is Michael Jackson\nkg:3025 is date of death", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?dateOfDeath\",\n    \"WHERE {\",\n    \"  kg:1405 kg:3025 ?dateOfDeath .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the highest volcano in Africa?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the highest volcano in Africa?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q803 .\", \"# volcano\",\n    \"?item wdt:P30 wd:Q15 .\", \"# located in Africa\",\n    \"?item wdt:P2547 ?elevation .\", \"# elevation above sea level\",\n    \"{ SELECT ?item (MAX(?elevation) AS ?maxElevation)\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q803 .\",\n    \"?item wdt:P30 wd:Q15 .\",\n    \"?item wdt:P2547 ?elevation .\",\n    \"}\",\n    \"} \",\n    \"FILTER (?elevation = ?maxElevation).\",\n    \"}\"\n  ]\n}"}
{"question": "What is the highest volcano in Africa?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the highest volcano in Africa?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P30 is continent\nwd:Q15 is Africa\nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q8072 is volcano\nwdt:P2044 is elevation above sea level", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q8072 ;\",\n    \"       wdt:P30 wd:Q15 ;\",\n    \"       wdt:P2044 ?elevation .\",\n    \"FILTER NOT EXISTS {\",\n    \"?other wdt:P31 wd:Q8072 ;\",\n    \"          wdt:P30 wd:Q15 ;\",\n    \"          wdt:P2044 ?otherElevation .\",\n    \"FILTER (?otherElevation > ?elevation && ?other != ?item)\",\n    \"}\",\n    \"}\"\n  ]\n}"}
{"question": "What is the highest volcano in Africa?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the highest volcano in Africa?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2785 is continent\nkg:0205 is Africa\nkg:3352 is instance of\nkg:5941 is subclass of\nkg:4262 is volcano\nkg:0560 is elevation above sea level", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?volcano\",\n    \"WHERE {\",\n    \"?continent kg:2785 kg:0205 .\",\n    \"?mountain kg:3352 kg:4262 .\",\n    \"?mountain kg:5941 ?volcanoType .\",\n    \"?volcanoType kg:5941 kg:4262 .\",\n    \"?mountain kg:0560 ?elevation .\",\n    \"{ SELECT ?mountain (MAX(?elevation) AS ?maxElevation) \",\n    \"WHERE {\",\n    \"?mountain kg:3352 kg:4262 .\",\n    \"?mountain kg:0560 ?elevation .\",\n    \"} GROUP BY ?mountain }\",\n    \"?volcano kg:0560 ?maxElevation .\",\n    \"?volcano kg:3352 kg:4262 .\",\n    \"FILTER (?mountain = ?volcano)\",\n    \"}\"\n  ]\n}"}
{"question": "Which poet wrote the most books?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which poet wrote the most books?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?poet\",\n    \"WHERE {\",\n    \"?poet wdt:P106 wd:Q36180;\",\n    \"?poet wdt:P800 ?book.\",\n    \"}\"\n  ]\n}"}
{"question": "Which poet wrote the most books?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which poet wrote the most books?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P106 is occupation\nwd:Q49757 is poet\nwdt:P50 is author\nwdt:P31 is instance of\nwd:Q571 is book", "response": "{\n  \"query\": [\n    \"SELECT ?poet\",\n    \"WHERE {\",\n    \"?poet wdt:P106 wd:Q49757.\",\n    \"?book wdt:P31 wd:Q571;\",\n    \"?book wdt:P50 ?poet.\",\n    \"}\"\n  ]\n}"}
{"question": "Which poet wrote the most books?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which poet wrote the most books?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6471 is occupation\nkg:0774 is poet\nkg:6411 is author\nkg:8098 is instance of\nkg:4080 is book", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?poet\",\n    \"WHERE {\",\n    \"?poet kg:8098 kg:0774 .\",\n    \"?poet kg:6411 ?book .\",\n    \"?book kg:4080 ?bookType .\",\n    \"FILTER NOT EXISTS {\",\n    \"?otherPoet kg:8098 kg:0774 .\",\n    \"?otherPoet kg:6411 ?otherBook .\",\n    \"?otherBook kg:4080 ?bookType .\",\n    \"FILTER (?otherPoet != ?poet)\",\n    \"FILTER (COUNT(DISTINCT ?otherBook) > COUNT(DISTINCT ?book))\",\n    \"}\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all spacecrafts that flew to Mars.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all spacecrafts that flew to Mars.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?spacecraft\",\n    \"WHERE {\",\n    \"?spacecraft wdt:P31 wd:Q26522 ;\",\n    \"       wdt:P175 ?mars .\",\n    \"FILTER (NOT EXISTS {?spacecraft wdt:P576 []})\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all spacecrafts that flew to Mars.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all spacecrafts that flew to Mars.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q389459 is Mars rover", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?spacecraft\",\n    \"WHERE {\",\n    \"?spacecraft wdt:P31 wd:Q25927898 .\", \"# spacecraft is instance of space probe\",\n    \"?spacecraft wdt:P827 wd:Q699 .\" , \"# orbit or landed on Mars\"\n    ,\"}\"\n  ]\n}"}
{"question": "Give me all spacecrafts that flew to Mars.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all spacecrafts that flew to Mars.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4000 is instance of\nkg:9758 is Mars rover", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?spacecraft\",\n    \"WHERE {\",\n    \"?spacecraft kg:4000 kg:Mars.\",\n    \"FILTER (?spacecraft != kg:Mars)\",\n    \"}\"\n  ]\n}"}
{"question": "Show me all Czech movies.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Show me all Czech movies.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q11424.\",\n    \"?item wdt:P495 wd:Q35.\",\n    \"}\"\n  ]\n}"}
{"question": "Show me all Czech movies.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Show me all Czech movies.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q11424 is film\nwdt:P495 is country of origin\nwd:Q213 is Czech Republic\nwdt:P495 is country of origin\nwd:Q33946 is Czechoslovakia", "response": "{\n  \"query\": [\n    \"SELECT\",\n    \"?item\",\n    \"WHERE\",\n    \"{\",\n    \"?item wdt:P31 wd:Q11424 ;\",\n    \"wdt:P495 wd:Q213 .\"\n  ]\n  }\n "}
{"question": "Show me all Czech movies.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Show me all Czech movies.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2993 is instance of\nkg:6480 is film\nkg:2995 is country of origin\nkg:1556 is Czech Republic\nkg:2995 is country of origin\nkg:0212 is Czechoslovakia", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?movie\",\n    \"WHERE {\",\n    \"?movie kg:6480 \\\"true\\\"^^xsd:boolean .\",\n    \"?movie kg:2995 kg:1556 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all taikonauts.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all taikonauts.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P106 wd:Q82297456 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all taikonauts.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all taikonauts.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P106 is occupation\nwd:Q11631 is astronaut\nwdt:P27 is country of citizenship\nwd:Q148 is People's Republic of China", "response": "{\n  \"query\": [\n    \"SELECT ?taikonaut\",\n    \"WHERE {\",\n    \"?taikonaut wdt:P106 wd:Q11631 ;\",\n    \"         wdt:P27 wd:Q148 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all taikonauts.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all taikonauts.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4503 is occupation\nkg:9378 is astronaut\nkg:3941 is country of citizenship\nkg:8528 is People's Republic of China", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"?s kg:4503 kg:9378 ;\",\n    \"       kg:3941 kg:8528 .\"\n    ]}\n \t\t\t\t\t  \t\t\t\t\t"}
{"question": "Which countries have more than ten volcanoes?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which countries have more than ten volcanoes?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?country wdt:P31 wd:Q6256 ;\",\n    \"       p:P1128 ?statement .\",\n    \"?statement ps:P1128 ?volcanoes ;\",\n    \"           pq:P1114 ?count .\",\n    \"FILTER (?count > 10)\",\n    \"}\"\n  ]\n}"}
{"question": "Which countries have more than ten volcanoes?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which countries have more than ten volcanoes?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q8072 is volcano\nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q8072 is volcano\nwdt:P17 is country", "response": "{\n  \"query\": [\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?volcano wdt:P31 wd:Q8072.\",\n    \"?volcano wdt:P17 ?country.\",\n    \"{ SELECT ?country (COUNT(?volcano) AS ?count)\",\n    \"WHERE {\",\n    \"?volcano wdt:P31 wd:Q8072.\",\n    \"?volcano wdt:P17 ?country.\",\n    \"}\",\n    \"GROUP BY ?country\",\n    \"HAVING (?count > 10)\",\n    \"}\"\n  ]\n}\n "}
{"question": "Which countries have more than ten volcanoes?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which countries have more than ten volcanoes?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1994 is instance of\nkg:7112 is volcano\nkg:1994 is instance of\nkg:0630 is subclass of\nkg:7112 is volcano\nkg:3464 is country", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?volcano kg:7112 ?country .\",\n    \"?country kg:3464 [] .\",\n    \"{\",\n    \"SELECT ?country (COUNT(DISTINCT ?volcano) AS ?count)\",\n    \"WHERE {\",\n    \"?volcano kg:7112 ?country .\",\n    \"?country kg:3464 [] .\",\n    \"}\",\n    \"GROUP BY ?country\",\n    \"HAVING (?count > 10)\",\n    \"}\"\n  ]\n}\n "}
{"question": "Give me all movies with Tom Cruise.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all movies with Tom Cruise.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P161 wd:Q37049.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all movies with Tom Cruise.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all movies with Tom Cruise.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P161 is cast member\nwd:Q37079 is Tom Cruise", "response": "{\n  \"query\": [\n    \"SELECT ?movie\",\n    \"WHERE {\",\n    \"?movie wdt:P161 wd:Q37079 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all movies with Tom Cruise.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all movies with Tom Cruise.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7974 is cast member\nkg:1558 is Tom Cruise", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?movie\",\n    \"WHERE {\",\n    \"?movie kg:7974 kg:1558 .\",\n    \"}\"\n  ]\n}"}
{"question": "When did Dracula's creator die?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “When did Dracula's creator die?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q100651 as ?dracula).\",\n    \"  ?dracula wdt:P50 ?creator.\",\n    \"  ?creator wdt:P569 ?birth.\",\n    \"  ?creator wdt:P570 ?death.\",\n    \"  FILTER NOT EXISTS { ?creator wdt:P570 [] }\",\n    \"  BIND(YEAR(?death) AS ?yearOfDeath).\",\n    \"  BIND(?creator as ?item)\"\n    ]}\n "}
{"question": "When did Dracula's creator die?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “When did Dracula's creator die?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q3266236 is Count Dracula\nwdt:P170 is creator\nwdt:P570 is date of death", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?creator\",\n    \"WHERE {\",\n    \"  wd:Q3266236 wdt:P170 ?creator .\",\n    \"  ?creator wdt:P570 ?dateOfDeath .\",\n    \"  FILTER (BOUND(?dateOfDeath))\",\n    \"}\"\n  ]\n}"}
{"question": "When did Dracula's creator die?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “When did Dracula's creator die?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7006 is Count Dracula\nkg:7234 is creator\nkg:3219 is date of death", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"  kg:7006 kg:7234 ?creator .\",\n    \"  ?creator kg:3219 ?dateOfDeath .\",\n    \"  BIND(?creator AS ?resource)\",\n    \"}\"\n  ]\n}"}
{"question": "Who created English Wikipedia?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who created English Wikipedia?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P112 ?creator .\",\n    \"?item wdt:P407 \\\"en\\\" .\",\n    \"?item wdt:P31 wd:Q180684 .\",\n    \"}\"\n  ]\n}"}
{"question": "Who created English Wikipedia?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who created English Wikipedia?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q52 is Wikipedia\nwdt:P170 is creator\nwdt:P31 is instance of\nwd:Q5 is human", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q5 .\",\n    \"?item wdt:P170 wd:Q52 .\",\n    \"FILTER (LANGMATCHES(LANG(?item), 'en'))\"\n  ]\n  }\n "}
{"question": "Who created English Wikipedia?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who created English Wikipedia?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8535 is Wikipedia\nkg:0687 is creator\nkg:4965 is instance of\nkg:7883 is human", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"?wikipedia kg:4965 kg:8535 .\",\n    \"?creator kg:0687 ?wikipedia .\",\n    \"?creator kg:7883 kg:7883 .\",\n    \"FILTER (?wikipedia = kg:8535)\",\n    \"BIND (?creator AS ?resource)\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Give me all female German chancellors.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all female German chancellors.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q5 ;\", \"# instance of human\",\n    \"     wdt:P21 wd:Q65810724 ;\", \"# female\",\n    \"     wdt:P39 wd:Q14211\" , \"# position held: chancellor of Germany\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all female German chancellors.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all female German chancellors.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P21 is sex or gender\nwd:Q6581072 is female\nwdt:P39 is position held\nwd:Q4970706 is Federal Chancellor of Germany", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P21 wd:Q6581072 ;\",\n    \"       wdt:P39 wd:Q4970706 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all female German chancellors.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all female German chancellors.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3087 is sex or gender\nkg:5264 is female\nkg:4281 is position held\nkg:0263 is Federal Chancellor of Germany", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"?s kg:3087 kg:5264 ;\",\n    \"      kg:4281 kg:0263 .\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "Who owns Aldi?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who owns Aldi?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?owner WHERE {\",\n    \"  wd:Q783794 wdt:P112 ?owner .\",\n    \"}\"\n  ]\n}"}
{"question": "Who owns Aldi?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who owns Aldi?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q125054 is Aldi\nwdt:P355 is has subsidiary", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?owner\",\n    \"WHERE {\",\n    \"  wd:Q125054 wdt:P112 ?owner .\",\n    \"}\"\n  ]\n}"}
{"question": "Who owns Aldi?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who owns Aldi?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2823 is Aldi\nkg:3490 is has subsidiary", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?owner\",\n    \"WHERE {\",\n    \"  kg:2823 kg:3490 ?owner .\",\n    \"}\"\n  ]\n}"}
{"question": "Who was influenced by Socrates?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who was influenced by Socrates?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P737 wd:Q1691.\",\n    \"}\"\n  ]\n}"}
{"question": "Who was influenced by Socrates?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who was influenced by Socrates?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q5 is human\nwdt:P737 is influenced by\nwd:Q913 is Socrates", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q5 .\",\n    \"?item wdt:P737 wd:Q913 .\",\n    \"}\"\n  ]\n}"}
{"question": "Who was influenced by Socrates?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who was influenced by Socrates?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7202 is instance of\nkg:2379 is human\nkg:1789 is influenced by\nkg:7075 is Socrates", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"?resource kg:1789 kg:7075 .\",\n    \"?resource a kg:2379 .\",\n    \"}\"\n  ]\n}"}
{"question": "How deep is Lake Chiemsee?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How deep is Lake Chiemsee?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q165899 AS ?lake).\",\n    \"  ?lake wdt:P2044 ?depth.\",\n    \"  FILTER NOT EXISTS { ?lake wdt:P31 wd:Q486972 }. \",\n    \"  BIND(?lake AS ?item)\",\n    \"}\"\n  ]\n}"}
{"question": "How deep is Lake Chiemsee?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How deep is Lake Chiemsee?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q4138 is Chiemsee\nwdt:P4511 is vertical depth", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?depth\",\n    \"WHERE {\",\n    \"  wd:Q4138 wdt:P4511 ?depth .\",\n    \"}\"\n  ]\n}"}
{"question": "How deep is Lake Chiemsee?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How deep is Lake Chiemsee?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0491 is Chiemsee\nkg:7474 is vertical depth", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?depth\",\n    \"WHERE {\",\n    \"  kg:0491 kg:7474 ?depth .\",\n    \"}\"\n  ]\n}"}
{"question": "Who were the parents of Queen Victoria?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who were the parents of Queen Victoria?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?parent\",\n    \"WHERE {\",\n    \"  wd:Q9431 wdt:P22 ?parent.\",\n    \"  wd:Q9431 wdt:P31 wd:Q5.\",\n    \"}\"\n  ]\n}"}
{"question": "Who were the parents of Queen Victoria?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who were the parents of Queen Victoria?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q9439 is Victoria\nwdt:P22 is father\nwdt:P25 is mother", "response": "{\n  \"query\": [\n    \"SELECT ?father ?mother\",\n    \"WHERE {\",\n    \"  wd:Q9439 wdt:P22 ?father .\",\n    \"  wd:Q9439 wdt:P25 ?mother .\",\n    \"}\"\n  ]\n}"}
{"question": "Who were the parents of Queen Victoria?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who were the parents of Queen Victoria?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9270 is Victoria\nkg:8401 is father\nkg:9007 is mother", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?parent\",\n    \"WHERE {\",\n    \"  kg:9270 kg:8401 ?father .\",\n    \"  kg:9270 kg:9007 ?mother .\",\n    \"  BIND (?father AS ?parent) .\",\n    \"  UNION\",\n    \"  BIND (?mother AS ?parent) .\",\n    \"}\"\n  ]\n}"}
{"question": "Are there any castles in the United States?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Are there any castles in the United States?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q1248784.\",\n    \"?item wdt:P17 wd:Q30.\"\n    ]}\n "}
{"question": "Are there any castles in the United States?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Are there any castles in the United States?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q23413 is castle\nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q23413 is castle\nwdt:P17 is country\nwd:Q30 is United States of America", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31/wdt:P279* wd:Q23413 ;\",\n    \"       wdt:P17 wd:Q30 .\",\n    \"}\"\n  ]\n}"}
{"question": "Are there any castles in the United States?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Are there any castles in the United States?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2659 is instance of\nkg:9811 is castle\nkg:2659 is instance of\nkg:0624 is subclass of\nkg:9811 is castle\nkg:6840 is country\nkg:2187 is United States of America", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"?resource kg:2659 kg:9811 ;\",\n    \"       kg:6840 kg:2187 .\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "Which languages are spoken in Estonia?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which languages are spoken in Estonia?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?language\",\n    \"WHERE {\",\n    \"  wd:Q1919 wdt:P407 ?language .\",\n    \"}\"\n  ]\n}"}
{"question": "Which languages are spoken in Estonia?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which languages are spoken in Estonia?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q191 is Estonia\nwdt:P2936 is language used", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q191 wdt:P2936 ?item.\",\n    \"}\"\n  ]\n}"}
{"question": "Which languages are spoken in Estonia?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which languages are spoken in Estonia?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2008 is Estonia\nkg:5569 is language used", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?language\",\n    \"WHERE {\",\n    \"  kg:2008 kg:5569 ?language .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me a list of all critically endangered birds.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me a list of all critically endangered birds.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q811 \",\n    \"?item wdt:P830 \\\"critically endangered\\\"@en .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me a list of all critically endangered birds.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me a list of all critically endangered birds.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P171 is parent taxon\nwd:Q5113 is bird\nwdt:P141 is IUCN conservation status\nwd:Q219127 is Critically Endangered", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P171* wd:Q5113.\",\n    \"?item wdt:P141 wd:Q219127.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me a list of all critically endangered birds.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me a list of all critically endangered birds.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7081 is parent taxon\nkg:9693 is bird\nkg:6932 is IUCN conservation status\nkg:4268 is Critically Endangered", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?bird\",\n    \"WHERE {\",\n    \"?bird kg:9693 true .\",\n    \"?bird kg:6932 kg:4268 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which countries are connected by the Rhine?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which countries are connected by the Rhine?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?river wdt:P31 wd:Q122722.\",\n    \"?river wdt:P17 ?country.\",\n    \"FILTER(wdt:P17 = ?river).\",\n    \"?river wdt:P402 ?rhine.\",\n    \"FILTER(?rhine = \\\"Rhine\\\").\",\n    \"}\"\n  ]\n}"}
{"question": "Which countries are connected by the Rhine?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which countries are connected by the Rhine?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q584 is Rhine\nwdt:P17 is country\nwdt:P31 is instance of\nwd:Q6256 is country", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?river wdt:P31 wd:Q4022 .\", \"# instance of river\",\n    \"?river wdt:P17 ?country .\", \"# country located in the river's basin or connected to it, but we need countries that the Rhine flows through\",\n    \"{ SELECT ?river WHERE { wd:Q584 wdt:P31 ?river } }\", \"# get the entity for Rhine and check if it is a river (instance of)\",\n    \"?country wdt:P31 wd:Q6256 .\", \"# ensure country is an instance of country to filter results\",\n    \"FILTER (?river = wd:Q584)\", \"# only consider the Rhine\"\n    ,\n    \"}\"\n  ]\n}\n "}
{"question": "Which countries are connected by the Rhine?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which countries are connected by the Rhine?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7366 is Rhine\nkg:2020 is country\nkg:7795 is instance of\nkg:4041 is country", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?country\",\n    \"WHERE {\",\n    \"?river kg:7795 kg:7366.\",\n    \"?country kg:4041 ?river.\"\n    ]}\n \t\t\t\t\t  \t\t\t"}
{"question": "Who was the father of Queen Elizabeth II?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who was the father of Queen Elizabeth II?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?father\",\n    \"WHERE {\",\n    \"  wd:Q9684 wdt:P22 ?father .\",\n    \"}\"\n  ]\n}"}
{"question": "Who was the father of Queen Elizabeth II?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who was the father of Queen Elizabeth II?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q9682 is Elizabeth II\nwdt:P22 is father", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?father\",\n    \"WHERE {\",\n    \"  wd:Q9682 wdt:P22 ?father .\",\n    \"}\"\n  ]\n}"}
{"question": "Who was the father of Queen Elizabeth II?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who was the father of Queen Elizabeth II?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1364 is Elizabeth II\nkg:0150 is father", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?father\",\n    \"WHERE {\",\n    \"  kg:1364 kg:0150 ?father .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all chemical elements.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all chemical elements.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q11344 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all chemical elements.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all chemical elements.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q11344 is chemical element", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q11344.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all chemical elements.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all chemical elements.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6296 is instance of\nkg:3198 is chemical element", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?element\",\n    \"WHERE {\",\n    \"?element kg:3198 \\\"chemical element\\\".\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all American presidents of the last 20 years.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all American presidents of the last 20 years.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q5 ;\", \"# instance of human\",\n    \"      wdt:P106 wd:Q672838 ;\", \"# occupation: politician\",\n    \"      wdt:P39 wd:Q11696 ;\", \"# position held: President of the United States\",\n    \"      ?p ?startTime .\",\n    \"FILTER(YEAR(?startTime) > (2023 - 20))\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all American presidents of the last 20 years.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all American presidents of the last 20 years.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \np:P39 is position held\nps:P39 is position held\nwd:Q11696 is President of the United States\npq:P582 is end time", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item p:P39 ps:P39 wd:Q11696.\",\n    \"?item p:P39 [pq:P582 ?endTime].\",\n    \"FILTER (YEAR(?endTime) > (2023 - 20))\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all American presidents of the last 20 years.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all American presidents of the last 20 years.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3971 is position held\nkg:3124 is position held\nkg:4794 is President of the United States\nkg:9895 is end time", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?president\",\n    \"WHERE {\",\n    \"?president kg:3971 kg:4794 .\",\n    \"?president kg:3124 ?position .\",\n    \"?position kg:9895 ?endTime .\",\n    \"FILTER (?endTime > \\\"2002-01-01\\\"^^xsd:date)\",\n    \"}\"\n  ]\n}"}
{"question": "When is the movie Worst Case Scenario going to be in cinemas in the Netherlands?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “When is the movie Worst Case Scenario going to be in cinemas in the Netherlands?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"PREFIX wd: <http://www.wikidata.org/entity/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q11424 ;\", \"# movie\",\n    \"wdt:P1476 ?title .\", \"# title\",\n    \"FILTER(CONTAINS(LCASE(?title), 'worst case scenario')) .\",\n    \"?item wdt:P577 ?releaseDate .\", \"# release date\",\n    \"?country wdt:P31 wd:Q55 ;\", \"# country\",\n    \"wdt:P407 ?language .\", \"# language\",\n    \"FILTER(?language = wd:Q9399) .\", \"# dutch language\",\n    \"?item wdt:P840 ?distributor .\", \"# distributor\",\n    \"?distributor wdt:P17 ?country .\", \"# country of origin\",\n    \"FILTER(?country = wd:Q55) .\", \"# netherlands\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "When is the movie Worst Case Scenario going to be in cinemas in the Netherlands?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “When is the movie Worst Case Scenario going to be in cinemas in the Netherlands?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q6667101 is Worst Case Scenario\nwdt:P577 is publication date", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q6667101 wdt:P577 ?publicationDate.\",\n    \"  FILTER(YEAR(?publicationDate) = YEAR(NOW()))\",\n    \"  ?item wdt:P31 wd:Q11424 ; wdt:P840 wd:Q3397900 ; wdt:P577 ?itemPublicationDate.\",\n    \"  FILTER(YEAR(?itemPublicationDate) = YEAR(NOW()))\",\n    \"}\"\n  ]\n}"}
{"question": "When is the movie Worst Case Scenario going to be in cinemas in the Netherlands?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “When is the movie Worst Case Scenario going to be in cinemas in the Netherlands?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7286 is Worst Case Scenario\nkg:0465 is publication date", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?cinemaDate\",\n    \"WHERE {\",\n    \"  kg:7286 kg:0465 ?cinemaDate.\",\n    \"  FILTER (langMatches(lang(?cinemaDate), 'nl'))\"\n    ]}\n "}
{"question": "Whom did Lance Bass marry?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Whom did Lance Bass marry?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q31093 AS ?lanceBass)\",\n    \"  ?lanceBass wdt:P26 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "Whom did Lance Bass marry?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Whom did Lance Bass marry?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q443120 is Lance Bass\nwdt:P26 is spouse", "response": "{\n \t\t\t    \t     \t\"query\": [\n \t      \t\t\t\t\"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n \t      \t\t\t\t\"PREFIX wd: <http://www.wikidata.org/entity/>\",\n \t      \t\t\t\t\"SELECT ?item \",\n \t      \t\t\t\t\"WHERE {\",\n \t      \t\t\t\t\"wd:Q443120 wdt:P26 ?item .\",\n \t      \t\t\t\t\"}\"\n \t      ]\n}"}
{"question": "Whom did Lance Bass marry?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Whom did Lance Bass marry?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6052 is Lance Bass\nkg:2399 is spouse", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?spouse\",\n    \"WHERE {\",\n    \"  kg:6052 kg:2399 ?spouse .\",\n    \"}\"\n  ]\n}"}
{"question": "What languages are spoken in Pakistan?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What languages are spoken in Pakistan?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"SELECT ?language\",\n    \"WHERE {\",\n    \"?country wdt:P31 wd:Q17 ;\",\n    \"       wdt:P407 ?language .\",\n    \"FILTER (LANGMATCHES(LANG(?language), 'en'))\",\n    \"}\"\n  ]\n}"}
{"question": "What languages are spoken in Pakistan?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What languages are spoken in Pakistan?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q843 is Pakistan\nwdt:P2936 is language used", "response": "{\n  \"query\": [\n    \"SELECT ?language\",\n    \"WHERE {\",\n    \"  wd:Q843 wdt:P2936 ?language.\",\n    \"}\"\n  ]\n}"}
{"question": "What languages are spoken in Pakistan?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What languages are spoken in Pakistan?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6648 is Pakistan\nkg:4682 is language used", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?language\",\n    \"WHERE {\",\n    \"  kg:6648 kg:4682 ?language .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the daughter of Bill Clinton married to?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is the daughter of Bill Clinton married to?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?husband\",\n    \"WHERE {\",\n    \"?daughter wdt:P22 wd:Q11229.\",\n    \"?daughter wdt:P26 ?husband.\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the daughter of Bill Clinton married to?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is the daughter of Bill Clinton married to?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q1124 is Bill Clinton\nwdt:P40 is child\nwdt:P26 is spouse", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?daughter ?spouse\",\n    \"WHERE {\",\n    \"  wd:Q1124 wdt:P40 ?daughter .\",\n    \"  FILTER EXISTS { ?daughter wdt:P31 wd:Q6581076 }\", \"# female\",\n    \"  ?daughter wdt:P26 ?spouse .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the daughter of Bill Clinton married to?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is the daughter of Bill Clinton married to?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9068 is Bill Clinton\nkg:6665 is child\nkg:3317 is spouse", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?spouse\",\n    \"WHERE {\",\n    \"  ?daughter kg:6665 kg:9068 .\",\n    \"  ?daughter kg:3317 ?spouse .\",\n    \"}\"\n  ]\n}"}
{"question": "Who was on the Apollo 11 mission?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who was on the Apollo 11 mission?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q5 ;\",\n    \"       p:P452 ?statement .\",\n    \"?statement ps:P452 wd:Q6793 .\",\n    \"}\"\n  ]\n}"}
{"question": "Who was on the Apollo 11 mission?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who was on the Apollo 11 mission?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q43653 is Apollo 11\nwdt:P1029 is crew member(s)", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?crewMember\",\n    \"WHERE {\",\n    \"  wd:Q43653 wdt:P1029 ?crewMember .\",\n    \"}\"\n  ]\n}"}
{"question": "Who was on the Apollo 11 mission?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who was on the Apollo 11 mission?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4688 is Apollo 11\nkg:5941 is crew member(s)", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?crewMember\",\n    \"WHERE {\",\n    \"  kg:4688 kg:5941 ?crewMember .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all B-sides of the Ramones.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all B-sides of the Ramones.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q21198398 .\", \"# B-side\",\n    \"?item wdt:P175 wd:Q48282 .\" , \"# by the Ramones\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Give me all B-sides of the Ramones.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all B-sides of the Ramones.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P175 is performer\nwd:Q483407 is Ramones\np:P1433 is published in\npq:P2868 is subject has role\nwd:Q13432985 is B-side", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"PREFIX wd: <http://www.wikidata.org/entity/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P175 wd:Q483407;\",\n    \"       wdt:P1433 ?publication;\",\n    \"       p:P2868 ?statement;\",\n    \"       ?statement pq:P2868 wd:Q13432985.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all B-sides of the Ramones.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all B-sides of the Ramones.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3319 is performer\nkg:6375 is Ramones\nkg:0743 is published in\nkg:3528 is subject has role\nkg:7841 is B-side", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"?track kg:3319 kg:6375 ;\",\n    \"       kg:7841 \\\"true\\\"^^xsd:boolean .\",\n    \"BIND (?track AS ?resource)\",\n    \"}\"\n  ]\n}"}
{"question": "Who was called Scarface?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who was called Scarface?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P1448 \\\"Scarface\\\"@en.\",\n    \"}\"\n  ]\n}"}
{"question": "Who was called Scarface?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who was called Scarface?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P1449 is nickname", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P1449 \\\"Scarface\\\" .\",\n    \"}\"\n  ]\n}"}
{"question": "Who was called Scarface?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who was called Scarface?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6080 is nickname", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"?s kg:6080 \\\"Scarface\\\"@en.\",\n    \"}\"\n  ]\n}"}
{"question": "Which rivers flow into the North Sea?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which rivers flow into the North Sea?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P403 'North Sea'.\",\n    \"?item wdt:P31 wd:Q4022.\",\n    \"}\"\n  ]\n}"}
{"question": "Which rivers flow into the North Sea?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which rivers flow into the North Sea?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q4022 is river\nwdt:P403 is mouth of the watercourse\nwd:Q1693 is North Sea", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q4022.\",\n    \"?item wdt:P403 wd:Q1693.\"\n    ]}\n \t\t \t\t    \t  \t   \t\t\t"}
{"question": "Which rivers flow into the North Sea?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which rivers flow into the North Sea?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4180 is instance of\nkg:3859 is river\nkg:2573 is mouth of the watercourse\nkg:7040 is North Sea", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?river\",\n    \"WHERE {\",\n    \"?river kg:3859 \\\"true\\\"^^xsd:boolean .\",\n    \"?river kg:2573 ?mouth .\",\n    \"?mouth kg:7040 \\\"true\\\"^^xsd:boolean .\",\n    \"}\"\n  ]\n}"}
{"question": "Where is Fort Knox located?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Where is Fort Knox located?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P131 wd:Q1353.\",\n    \"?item wdt:P279 wd:Q39714.\"\n    ]}\n "}
{"question": "Where is Fort Knox located?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Where is Fort Knox located?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q8962067 is Fort Knox\nwdt:P131 is located in the administrative territorial entity", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q8962067 wdt:P131 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "Where is Fort Knox located?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Where is Fort Knox located?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5049 is Fort Knox\nkg:8699 is located in the administrative territorial entity", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?location\",\n    \"WHERE {\",\n    \"  kg:5049 kg:8699 ?location .\",\n    \"}\"\n  ]\n}"}
{"question": "How many emperors did China have?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many emperors did China have?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q34787.\",\n    \"?item wdt:P27 wd:Q148.\"\n    ]}\n "}
{"question": "How many emperors did China have?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many emperors did China have?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P39 is position held\nwd:Q268218 is Emperor of China", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P39 wd:Q268218.\",\n    \"}\"\n  ]\n}"}
{"question": "How many emperors did China have?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many emperors did China have?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6554 is position held\nkg:0781 is Emperor of China", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?emperor\",\n    \"WHERE {\",\n    \"?emperor kg:0781 [] .\",\n    \"}\"\n  ]\n}"}
{"question": "What are the names of the Teenage Mutant Ninja Turtles?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What are the names of the Teenage Mutant Ninja Turtles?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?turtle\",\n    \"WHERE {\",\n    \"?turtle wdt:P31 wd:Q21070522.\",\n    \"}\"\n  ]\n}"}
{"question": "What are the names of the Teenage Mutant Ninja Turtles?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What are the names of the Teenage Mutant Ninja Turtles?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P361 is part of\nwd:Q1381762 is Teenage Mutant Ninja Turtles", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P361 wd:Q1381762.\",\n    \"}\"\n  ]\n}"}
{"question": "What are the names of the Teenage Mutant Ninja Turtles?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What are the names of the Teenage Mutant Ninja Turtles?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0588 is part of\nkg:3896 is Teenage Mutant Ninja Turtles", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?turtle\",\n    \"WHERE {\",\n    \"?turtle kg:isPartOf kg:3896 .\",\n    \"}\"\n  ]\n}"}
{"question": "Where does Piccadilly start?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Where does Piccadilly start?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P131* wd:Q17153.\",\n    \"?item wdt:P18 ?image.\",\n    \"FILTER NOT EXISTS { ?item wdt:P576 [] }\",\n    \"}\"\n  ]\n}"}
{"question": "Where does Piccadilly start?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Where does Piccadilly start?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q1124023 is Piccadilly\nwdt:P559 is terminus", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?start\",\n    \"WHERE {\",\n    \"  wd:Q1124023 wdt:P559 ?start .\",\n    \"}\"\n  ]\n}"}
{"question": "Where does Piccadilly start?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Where does Piccadilly start?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5579 is Piccadilly\nkg:8836 is terminus", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?start\",\n    \"WHERE {\",\n    \"  kg:5579 kg:start ?start .\",\n    \"  FILTER (?start != kg:8836)\",\n    \"}\"\n  ]\n}"}
{"question": "What is the name of the university where Obama's wife studied?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the name of the university where Obama's wife studied?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?university\",\n    \"WHERE {\",\n    \"  wd:Q13133 wdt:P26 ?wife.\",\n    \"  ?wife wdt:P69 ?university.\",\n    \"}\"\n  ]\n}"}
{"question": "What is the name of the university where Obama's wife studied?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the name of the university where Obama's wife studied?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q76 is Barack Obama\nwdt:P26 is spouse\nwdt:P69 is educated at\nwdt:P361 is part of\nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q3918 is university", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?university\",\n    \"WHERE {\",\n    \"  wd:Q76 wdt:P26 ?spouse .\",\n    \"  ?spouse wdt:P69 ?university .\",\n    \"  ?university wdt:P31 wd:Q3918 .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the name of the university where Obama's wife studied?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the name of the university where Obama's wife studied?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4581 is Barack Obama\nkg:1069 is spouse\nkg:3662 is educated at\nkg:9515 is part of\nkg:6870 is instance of\nkg:9045 is subclass of\nkg:8505 is university", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?university\",\n    \"WHERE {\",\n    \"  kg:4581 kg:1069 ?spouse .\",\n    \"  ?spouse kg:3662 ?university .\",\n    \"  ?university kg:6870 kg:8505 .\",\n    \"}\"\n  ]\n}"}
{"question": "When did Paraguay proclaim its independence?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “When did Paraguay proclaim its independence?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q6256 ;\", \"# Paraguay is an instance of country\",\n    \"       wdt:P740 ?independenceEvent .\", \"# has independence event\",\n    \"       ?independenceEvent wdt:P577 ?date .\", \"# date of independence\",\n    \"}\"\n  ]\n}"}
{"question": "When did Paraguay proclaim its independence?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “When did Paraguay proclaim its independence?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q733 is Paraguay\nwdt:P571 is inception", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"PREFIX wd: <http://www.wikidata.org/entity/>\",\n    \"SELECT ?inception\",\n    \"WHERE {\",\n    \"  wd:Q733 wdt:P769 ?independence,\",\n    \"  ?independence wdt:P577 ?inception .\",\n    \"}\"\n  ]\n}"}
{"question": "When did Paraguay proclaim its independence?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “When did Paraguay proclaim its independence?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7772 is Paraguay\nkg:2115 is inception", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?inceptionDate\",\n    \"WHERE {\",\n    \"  kg:7772 kg:2115 ?inceptionDate .\",\n    \"}\"\n  ]\n}"}
{"question": "How short is the shortest active NBA player?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How short is the shortest active NBA player?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?player ?height\",\n    \"WHERE {\",\n    \"?player wdt:P106 wd:Q2538506 ;\", \"# NBA player\",\n    \"      wdt:P135 ?team ;\", \"# team\",\n    \"      wdt:P2048 ?height .\", \"# height\",\n    \"?team wdt:P361 wd:Q396645 .\", \"# part of NBA\",\n    \"FILTER NOT EXISTS { ?player wdt:P576 [] }\", \"# active player (no end date)\",\n    \"}\"\n  ]\n}"}
{"question": "How short is the shortest active NBA player?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How short is the shortest active NBA player?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P106 is occupation\nwd:Q3665646 is basketball player\nwdt:P54 is member of sports team\nwdt:P118 is league\nwd:Q155223 is National Basketball Association\np:P54 is member of sports team\npq:P582 is end time\nwdt:P2048 is height", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"PREFIX wd: <http://www.wikidata.org/entity/>\",\n    \"SELECT ?player\",\n    \"WHERE {\",\n    \"?player wdt:P106 wd:Q3665646 ;\",\n    \"         p:P54 ?team .\",\n    \"?team ps:P54 ?sportsTeam ;\",\n    \"        pq:P582 \\\"present\\\" .\",\n    \"?sportsTeam wdt:P118 wd:Q155223 ;\",\n    \"?player wdt:P2048 ?height .\",\n    \"FILTER NOT EXISTS { ?player wdt:P576 [] }\",\n    \"}\"\n  ]\n}"}
{"question": "How short is the shortest active NBA player?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How short is the shortest active NBA player?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2623 is occupation\nkg:7892 is basketball player\nkg:5833 is member of sports team\nkg:9646 is league\nkg:3977 is National Basketball Association\nkg:2614 is member of sports team\nkg:5985 is end time\nkg:4026 is height", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?player\",\n    \"WHERE {\",\n    \"?player kg:7892 ;\",\n    \"       kg:5833 / kg:9646 / kg:3977 ;\",\n    \"       kg:4026 ?height .\",\n    \"FILTER NOT EXISTS { ?player kg:5985 [] }\",\n    \"}\"\n  ]\n}"}
{"question": "Where did Abraham Lincoln die?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Where did Abraham Lincoln die?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q91 AS ?lincoln).\",\n    \"  ?lincoln wdt:P119 ?deathPlace.\",\n    \"  BIND(?deathPlace AS ?item).\",\n    \"}\"\n  ]\n}"}
{"question": "Where did Abraham Lincoln die?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Where did Abraham Lincoln die?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q91 is Abraham Lincoln\nwdt:P20 is place of death", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q91 wdt:P20 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "Where did Abraham Lincoln die?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Where did Abraham Lincoln die?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6303 is Abraham Lincoln\nkg:0971 is place of death", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?place\",\n    \"WHERE {\",\n    \"  kg:6303 kg:0971 ?place .\",\n    \"}\"\n  ]\n}"}
{"question": "When was Jack Wolfskin founded?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “When was Jack Wolfskin founded?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P112 ?foundingDate .\",\n    \"?item wdt:P161 \\\"Jack Wolfskin\\\" .\",\n    \"}\"\n  ]\n}"}
{"question": "When was Jack Wolfskin founded?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “When was Jack Wolfskin founded?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q536133 is Jack Wolfskin\nwdt:P571 is inception", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q536133 AS ?item).\",\n    \"  ?item wdt:P571 ?inception.\",\n    \"}\"\n  ]\n}"}
{"question": "When was Jack Wolfskin founded?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “When was Jack Wolfskin founded?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5071 is Jack Wolfskin\nkg:3303 is inception", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?inception\",\n    \"WHERE {\",\n    \"  kg:5071 kg:3303 ?inception .\",\n    \"}\"\n  ]\n}"}
{"question": "In which city is the headquarter of Air China?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “In which city is the headquarter of Air China?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P161 wd:Q27959 .\",\n    \"?item wdt:P159 ?city .\",\n    \"}\"\n  ]\n}"}
{"question": "In which city is the headquarter of Air China?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “In which city is the headquarter of Air China?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q51747 is Air China\nwdt:P159 is headquarters location", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q51747 wdt:P159 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "In which city is the headquarter of Air China?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “In which city is the headquarter of Air China?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7473 is Air China\nkg:7154 is headquarters location", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?headquarterLocation\",\n    \"WHERE {\",\n    \"  kg:7473 kg:7154 ?headquarterLocation .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the founding year of the brewery that produces Pilsner Urquell?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the founding year of the brewery that produces Pilsner Urquell?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?brewery ?foundingYear\",\n    \"WHERE {\",\n    \"  BIND(wd:Q158057 AS ?beer).\",\n    \"  ?beer wdt:P176 ?brewery.\",\n    \"  ?brewery wdt:P577 ?foundingYear.\",\n    \"}\"\n  ]\n}"}
{"question": "What is the founding year of the brewery that produces Pilsner Urquell?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the founding year of the brewery that produces Pilsner Urquell?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q948831 is Plzeňský Prazdroj\nwdt:P571 is inception", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?foundingYear\",\n    \"WHERE {\",\n    \"  wd:Q948831 wdt:P571 ?foundingYear .\",\n    \"}\"\n  ]\n}"}
{"question": "What is the founding year of the brewery that produces Pilsner Urquell?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the founding year of the brewery that produces Pilsner Urquell?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7689 is Plzeňský Prazdroj\nkg:3236 is inception", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?brewery\",\n    \"WHERE {\",\n    \"  ?beer rdfs:label \\\"Pilsner Urquell\\\"@en;\",\n    \"         wdt:P31 wd:Q35657;\", \"# Beer\",\n    \"         wdt:P159 ?brewery.\",\n    \"  ?brewery wdt:P31 wd:Q838948;\", \"# Brewery\",\n    \"         wdt:P161 kg:7689.\" , \"# Plzeňský Prazdroj\"\n    ]}\n   \t\t\t\t\t\t    \t  \t   "}
{"question": "When did the Boston Tea Party take place?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “When did the Boston Tea Party take place?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P793 wd:Q622618.\",\n    \"?item wdt:P577 ?date.\",\n    \"}\"\n  ]\n}"}
{"question": "When did the Boston Tea Party take place?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “When did the Boston Tea Party take place?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q19024 is Boston Tea Party\nwdt:P585 is point in time", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q19024 AS ?item).\",\n    \"  ?item wdt:P585 ?time.\",\n    \"}\"\n  ]\n}"}
{"question": "When did the Boston Tea Party take place?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “When did the Boston Tea Party take place?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3929 is Boston Tea Party\nkg:0565 is point in time", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?event\",\n    \"WHERE {\",\n    \"  kg:3929 kg:0565 ?event .\",\n    \"}\"\n  ]\n}"}
{"question": "Which animals are critically endangered?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which animals are critically endangered?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P407 ?taxon.\",\n    \"?item wdt:P141 ?conservationStatus.\",\n    \"FILTER (?conservationStatus = wd:Q47383314).\",\n    \"}\"\n  ]\n}"}
{"question": "Which animals are critically endangered?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which animals are critically endangered?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P141 is IUCN conservation status\nwd:Q219127 is Critically Endangered", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P141 wd:Q219127.\",\n    \"}\"\n  ]\n}"}
{"question": "Which animals are critically endangered?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which animals are critically endangered?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7101 is IUCN conservation status\nkg:9298 is Critically Endangered", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"?s kg:7101 kg:9298 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which politicians were married to a German?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which politicians were married to a German?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?politician\",\n    \"WHERE {\",\n    \"?politician wdt:P106 wd:Q82955 ;\",\n    \"wdt:P26 ?spouse .\",\n    \"?spouse wdt:P27 wd:Q183 .\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Which politicians were married to a German?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which politicians were married to a German?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P106 is occupation\nwd:Q82955 is politician\nwdt:P26 is spouse\nwdt:P27 is country of citizenship\nwd:Q183 is Germany\nwdt:P19 is place of birth\nwdt:P17 is country\nwd:Q183 is Germany", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?politician\",\n    \"WHERE {\",\n    \"?politician wdt:P106 wd:Q82955.\",\n    \"?politician wdt:P26 ?spouse.\",\n    \"?spouse wdt:P27 wd:Q183.\"\n    ]}\n "}
{"question": "Which politicians were married to a German?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which politicians were married to a German?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5848 is occupation\nkg:1708 is politician\nkg:0863 is spouse\nkg:5898 is country of citizenship\nkg:7899 is Germany\nkg:6832 is place of birth\nkg:5012 is country\nkg:7899 is Germany", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?politician\",\n    \"WHERE {\",\n    \"?politician kg:1708 [] ;\",\n    \"         kg:0863 ?spouse .\",\n    \"?spouse kg:5898 kg:7899\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "How big is the earth's diameter?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How big is the earth's diameter?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P2234 [] .\",\n    \"?item wdt:P31 wd:Q2 .\",\n    \"}\"\n  ]\n}"}
{"question": "How big is the earth's diameter?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How big is the earth's diameter?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q2 is Earth\nwdt:P2386 is diameter", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?diameter\",\n    \"WHERE {\",\n    \"  wd:Q2 wdt:P2386 ?diameter .\",\n    \"}\"\n  ]\n}"}
{"question": "How big is the earth's diameter?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How big is the earth's diameter?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8706 is Earth\nkg:1993 is diameter", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"  kg:8706 kg:1993 ?resource .\",\n    \"}\"\n  ]\n}"}
{"question": "Is the wife of President Obama called Michelle?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Is the wife of President Obama called Michelle?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q76 AS ?president).\", \"# Barack Obama\",\n    \"  ?president wdt:P26 ?wife.\", \"# spouse\",\n    \"  FILTER(?wife = wd:Q13133).\", \"# Michelle Obama\",\n    \"  BIND(?wife AS ?item).\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Which U.S. state has the abbreviation MN?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which U.S. state has the abbreviation MN?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P635 \\\"MN\\\".\",\n    \"?item wdt:P31 wd:Q35657.\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Which U.S. state has the abbreviation MN?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which U.S. state has the abbreviation MN?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q35657 is U.S. state\nwdt:P1813 is short name", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q35657;\",\n    \"       wdt:P1813 \\\"MN\\\".\",\n    \"}\"\n  ]\n}"}
{"question": "Which U.S. state has the abbreviation MN?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which U.S. state has the abbreviation MN?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3306 is instance of\nkg:9063 is U.S. state\nkg:3554 is short name", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?s\",\n    \"WHERE {\",\n    \"?s kg:9063 \\\"U.S. state\\\";\",\n    \"       kg:3554 \\\"MN\\\".\",\n    \"}\"\n  ]\n}"}
{"question": "When did Muhammad die?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “When did Muhammad die?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q943 \\\"?item\\\").\",\n    \"  ?item wdt:P569 ?birth.\",\n    \"  ?item wdt:P570 ?death.\",\n    \"  FILTER (BOUND(?death))\",\n    \"}\"\n  ]\n}"}
{"question": "When did Muhammad die?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “When did Muhammad die?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q9458 is Muhammad\nwdt:P570 is date of death", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?dateOfDeath\",\n    \"WHERE {\",\n    \"  wd:Q9458 wdt:P570 ?dateOfDeath .\",\n    \"}\"\n  ]\n}"}
{"question": "When did Muhammad die?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “When did Muhammad die?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:4901 is Muhammad\nkg:4086 is date of death", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?dateOfDeath\",\n    \"WHERE {\",\n    \"  kg:4901 kg:4086 ?dateOfDeath .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the governor of Texas?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is the governor of Texas?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P6 wd:Q1453.\",\n    \"?item wdt:P39 wd:Q11696.\"\n    ]}\n "}
{"question": "Who is the governor of Texas?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is the governor of Texas?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q1439 is Texas\nwdt:P1313 is office held by head of government\nwd:Q5589725 is Governor of Texas\nwd:Q5589725 is Governor of Texas\nwdt:P1308 is officeholder", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q1439 AS ?Texas).\",\n    \"  ?item wdt:P1308 wd:Q5589725.\",\n    \"  FILTER(EXISTS { ?Texas wdt:P1313 wd:Q5589725 })\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the governor of Texas?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is the governor of Texas?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5711 is Texas\nkg:0217 is office held by head of government\nkg:9831 is Governor of Texas\nkg:9831 is Governor of Texas\nkg:6636 is officeholder", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?governor\",\n    \"WHERE {\",\n    \"  kg:5711 kg:0217 ?office .\",\n    \"  ?office kg:6636 ?governor .\",\n    \"  FILTER (?office = kg:9831)\",\n    \"}\"\n  ]\n}"}
{"question": "Which movies did Kurosawa direct?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which movies did Kurosawa direct?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?movie\",\n    \"WHERE {\",\n    \"  ?movie wdt:P57 wd:Q37009 .\",\n    \"  ?movie wdt:P31 wd:Q11424 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which movies did Kurosawa direct?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which movies did Kurosawa direct?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P57 is director\nwd:Q8006 is Akira Kurosawa", "response": "{\n  \"query\": [\n    \"SELECT ?movie\",\n    \"WHERE {\",\n    \"  ?movie wdt:P57 wd:Q8006 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which movies did Kurosawa direct?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which movies did Kurosawa direct?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6393 is director\nkg:4441 is Akira Kurosawa", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?movie\",\n    \"WHERE {\",\n    \"  ?movie kg:6393 kg:4441 .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me the official websites of actors of the television show Charmed.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me the official websites of actors of the television show Charmed.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?website\",\n    \"WHERE {\",\n    \"?actor wdt:P106 wd:Q10800557 .\", \"# actor is an instance of human\",\n    \"?actor wdt:P161 wd:Q514456 .\", \"# actor was part of Charmed TV series\",\n    \"?actor wdt:P856 ?website .\", \"# official website\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Give me the official websites of actors of the television show Charmed.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me the official websites of actors of the television show Charmed.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q162371 is Charmed\np:P161 is cast member\nps:P161 is cast member\nwdt:P856 is official website", "response": "{\n  \"query\": [\n    \"SELECT ?website WHERE {\",\n    \"  wd:Q162371 wdt:P161 ?actor .\",\n    \"  ?actor wdt:P856 ?website .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me the official websites of actors of the television show Charmed.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me the official websites of actors of the television show Charmed.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7013 is Charmed\nkg:2103 is cast member\nkg:1343 is cast member\nkg:2499 is official website", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?website\",\n    \"WHERE {\",\n    \"?actor kg:2103 kg:7013;\",\n    \"       kg:1343 ?character.\",\n    \"?actor kg:2499 ?website.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all libraries established before 1400.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all libraries established before 1400.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q15632617;\",\n    \"       wdt:P577 ?inception.\",\n    \"FILTER (xsd:gYear(?inception) < 1400)\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all libraries established before 1400.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all libraries established before 1400.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q7075 is library\nwdt:P571 is inception", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q7075.\",\n    \"?item wdt:P571 ?inception.\",\n    \"FILTER (?inception < \\\"1400-01-01T00:00:00Z\\\"^^xsd:dateTime)\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all libraries established before 1400.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all libraries established before 1400.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6814 is instance of\nkg:6349 is subclass of\nkg:3669 is library\nkg:4653 is inception", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?library\",\n    \"WHERE {\",\n    \"?library kg:3669 .\",\n    \"?library kg:4653 ?inception .\",\n    \"FILTER (?inception < \\\"1400-01-01\\\"^^xsd:date)\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all Frisian islands that belong to the Netherlands.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me all Frisian islands that belong to the Netherlands.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q338844.\",\n    \"?item wdt:P17 wd:Q55.\",\n    \"?item wdt:P361 wd:Q205649.\"\n    ]}\n "}
{"question": "Give me all Frisian islands that belong to the Netherlands.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me all Frisian islands that belong to the Netherlands.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q76936 is Frisian Islands\nwdt:P527 is has part(s)\nwd:Q76936 is Frisian Islands\nwdt:P527 is has part(s)\nwdt:P361 is part of\nwdt:P17 is country\nwd:Q55 is Netherlands\nwdt:P31 is instance of\nwd:Q23442 is island", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P361 wd:Q76936;\",\n    \"      wdt:P17 wd:Q55;\",\n    \"      wdt:P31 wd:Q23442.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me all Frisian islands that belong to the Netherlands.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me all Frisian islands that belong to the Netherlands.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:0335 is Frisian Islands\nkg:0424 is has part(s)\nkg:0335 is Frisian Islands\nkg:0424 is has part(s)\nkg:7181 is part of\nkg:9177 is country\nkg:0464 is Netherlands\nkg:6116 is instance of\nkg:9691 is island", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?island\",\n    \"WHERE {\",\n    \"?island kg:6116 kg:9691 ;\",\n    \"         kg:7181 ?frisianIslands .\",\n    \"?frisianIslands kg:0424 ?netherlandsPart .\",\n    \"?netherlandsPart kg:9177 kg:0464 .\",\n    \"?frisianIslands kg:0335 [] .\",\n    \"}\"\n  ]\n}"}
{"question": "Which museum exhibits The Scream by Munch?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which museum exhibits The Scream by Munch?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?museum\",\n    \"WHERE {\",\n    \"?painting wdt:P31 wd:Q3305213 ; wdt:P170 wd:Q5597.\",\n    \"?museum wdt:P195 ?painting.\",\n    \"}\"\n  ]\n}"}
{"question": "Which museum exhibits The Scream by Munch?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which museum exhibits The Scream by Munch?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q471379 is The Scream\nwdt:P527 is has part(s)\nwdt:P276 is location\nwdt:P31 is instance of\nwd:Q207694 is art museum", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?museum\",\n    \"WHERE {\",\n    \"?art wdt:P276 ?museum .\",\n    \"?art wdt:P31 wd:Q838948 .\",\n    \"?art wdt:P527 wd:Q471379 .\",\n    \"?museum wdt:P31 wd:Q207694 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which museum exhibits The Scream by Munch?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which museum exhibits The Scream by Munch?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3794 is The Scream\nkg:7898 is has part(s)\nkg:1678 is location\nkg:3411 is instance of\nkg:9154 is art museum", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?museum\",\n    \"WHERE {\",\n    \"?art kg:3411 kg:9154 .\",\n    \"?art kg:1678 ?museum .\",\n    \"?art kg:7898 kg:3794 .\",\n    \"}\"\n  ]\n}"}
{"question": "When was the De Beers company founded?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “When was the De Beers company founded?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P112 ?foundingDate .\",\n    \"?item wdt:P161 \\\"De Beers\\\"@en .\",\n    \"}\"\n  ]\n}"}
{"question": "When was the De Beers company founded?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “When was the De Beers company founded?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q471891 is De Beers\nwdt:P571 is inception", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  BIND(wd:Q471891 AS ?item).\",\n    \"  ?item wdt:P571 ?inception.\",\n    \"}\"\n  ]\n}"}
{"question": "When was the De Beers company founded?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “When was the De Beers company founded?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5562 is De Beers\nkg:9354 is inception", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"  kg:5562 kg:9354 ?resource .\",\n    \"}\"\n  ]\n}"}
{"question": "Who became president after JFK died?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who became president after JFK died?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P39 wd:Q11696.\",\n    \"?previousPresident wdt:P39 wd:Q11696;\",\n    \"wdt:P155 wdt:Q5113.\",\n    \"?item wdt:P26 ?previousPresident.\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "Who became president after JFK died?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who became president after JFK died?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q9696 is John F. Kennedy\np:P39 is position held\nps:P39 is position held\nwd:Q11696 is President of the United States\npq:P1366 is replaced by", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"PREFIX wd: <http://www.wikidata.org/entity/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"  wd:Q9696 p:P39 ?statement .\",\n    \"  ?statement ps:P39 wd:Q11696 .\",\n    \"  ?statement pq:P1366 ?item .\",\n    \"}\"\n  ]\n}"}
{"question": "Who became president after JFK died?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who became president after JFK died?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:9891 is John F. Kennedy\nkg:7907 is position held\nkg:3493 is position held\nkg:8998 is President of the United States\nkg:8421 is replaced by", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"  kg:9891 kg:8421 ?replacedBy .\",\n    \"  ?replacedBy kg:7907 kg:8998 .\",\n    \"  FILTER (?replacedBy != kg:9891)\",\n    \"  BIND(?replacedBy AS ?resource)\",\n    \"}\"\n  ]\n}"}
{"question": "Who are the parents of the wife of Juan Carlos I?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who are the parents of the wife of Juan Carlos I?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?parent\",\n    \"WHERE {\",\n    \"  wd:Q45869 wdt:P26 ?wife.\",\n    \"  ?wife wdt:P22 ?parent.\",\n    \"}\"\n  ]\n}"}
{"question": "Who are the parents of the wife of Juan Carlos I?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who are the parents of the wife of Juan Carlos I?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q19943 is Juan Carlos I of Spain\nwdt:P26 is spouse\nwdt:P40 is child", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?parent\",\n    \"WHERE {\",\n    \"  wd:Q19943 wdt:P26 ?wife.\",\n    \"  ?wife wdt:P40 ?parent.\",\n    \"}\"\n  ]\n}"}
{"question": "Who are the parents of the wife of Juan Carlos I?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who are the parents of the wife of Juan Carlos I?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:7309 is Juan Carlos I of Spain\nkg:9505 is spouse\nkg:1329 is child", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?parent\",\n    \"WHERE {\",\n    \"  kg:7309 kg:9505 ?wife .\",\n    \"  ?wife kg:1329 ?parent .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the novelist of the work a song of ice and fire?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is the novelist of the work a song of ice and fire?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?author\",\n    \"WHERE {\",\n    \"?work wdt:P50 ?author .\",\n    \"?work wdt:P1476 \\\"A Song of Ice and Fire\\\"@en .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the novelist of the work a song of ice and fire?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is the novelist of the work a song of ice and fire?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q45875 is A Song of Ice and Fire\nwdt:P106 is occupation\nwd:Q6625963 is novelist", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?novelist\",\n    \"WHERE {\",\n    \"  wd:Q45875 wdt:P50 ?novelist .\",\n    \"  ?novelist wdt:P106 wd:Q6625963 .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the novelist of the work a song of ice and fire?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is the novelist of the work a song of ice and fire?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2137 is A Song of Ice and Fire\nkg:0038 is occupation\nkg:9798 is novelist", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?novelist\",\n    \"WHERE {\",\n    \"  kg:2137 kg:0038 ?novelist .\",\n    \"  ?novelist kg:9798 \\\"novelist\\\"^^xsd:string.\",\n    \"}\"\n  ]\n}"}
{"question": "In which studio did the Beatles record their first album?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “In which studio did the Beatles record their first album?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?studio\",\n    \"WHERE {\",\n    \"  wd:Q1299 wdt:P264 ?album .\",\n    \"  ?album wdt:P272 ?studio .\",\n    \"  FILTER(NOT EXISTS { ?album wdt:P577 <\\\"1963-03-22\\\"T00:00:00Z\\\"^^xsd:dateTime> })\",\n    \"}\"\n  ]\n}"}
{"question": "In which studio did the Beatles record their first album?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “In which studio did the Beatles record their first album?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q482994 is album\nwdt:P175 is performer\nwd:Q1299 is The Beatles\nwdt:P577 is publication date\nwdt:P483 is recorded at studio or venue", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"PREFIX wd: <http://www.wikidata.org/entity/>\",\n    \"SELECT ?studio\",\n    \"WHERE {\",\n    \"?album wdt:P31 wd:Q482994 ;\",\n    \"       wdt:P175 wd:Q1299 ;\",\n    \"       wdt:P577 ?date .\",\n    \"FILTER NOT EXISTS { ?earlierAlbum wdt:P31 wd:Q482994 ; wdt:P175 wd:Q1299 ; wdt:P577 ?earlierDate . FILTER (?earlierDate < ?date) }\",\n    \"?album wdt:P483 ?studio .\",\n    \"}\"\n  ]\n}"}
{"question": "In which studio did the Beatles record their first album?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “In which studio did the Beatles record their first album?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2481 is instance of\nkg:0784 is album\nkg:2791 is performer\nkg:1100 is The Beatles\nkg:7038 is publication date\nkg:1938 is recorded at studio or venue", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?studio\",\n    \"WHERE {\",\n    \"  ?album kg:0784 \\\"Please Please Me\\\";\",\n    \"         kg:2791 kg:1100;\",\n    \"         kg:7038 ?date .\",\n    \"  FILTER (NOT EXISTS { ?album2 kg:0784 ?title ; kg:2791 kg:1100 ; kg:7038 ?date2 . FILTER (?date2 < ?date) })\",\n    \"  ?album kg:1938 ?studio .\",\n    \"}\"\n  ]\n}"}
{"question": "When did princess Diana die?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “When did princess Diana die?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q1335818 ;\", \"# Princess Diana is an instance of human\",\n    \"wdt:P27 wd:Q145 ;\", \"# and has country United Kingdom\",\n    \"wdt:P734 \\\"Diana\\\"@en ;\", \"# with first name Diana\",\n    \"wdt:P735 \\\"Princess of Wales\\\"@en ;\", \"# and title Princess of Wales\",\n    \"?item wdt:P569 ?birth .\", \"# get birth date\",\n    \"?item wdt:P570 ?death .\", \"# get death date\",\n    \"FILTER (NOT ISBLANK(?death))\", \"# filter out living people\",\n    \"}\"\n  ]\n}"}
{"question": "When did princess Diana die?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “When did princess Diana die?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q9685 is Diana, Princess of Wales\nwdt:P570 is date of death", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?dateOfDeath\",\n    \"WHERE {\",\n    \"  wd:Q9685 wdt:P570 ?dateOfDeath .\",\n    \"}\"\n  ]\n}"}
{"question": "When did princess Diana die?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “When did princess Diana die?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8027 is Diana, Princess of Wales\nkg:4930 is date of death", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?date\",\n    \"WHERE {\",\n    \"  kg:8027 kg:4930 ?date .\",\n    \"}\"\n  ]\n}"}
{"question": "Who founded Intel?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who founded Intel?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?founder\",\n    \"WHERE {\",\n    \"  wd:Q37017 wdt:P112 ?founder .\",\n    \"}\"\n  ]\n}"}
{"question": "Who founded Intel?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who founded Intel?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q248 is Intel\nwdt:P112 is founded by", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?founder\",\n    \"WHERE {\",\n    \"  wd:Q248 wdt:P112 ?founder .\",\n    \"}\"\n  ]\n}"}
{"question": "Who founded Intel?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who founded Intel?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:5687 is Intel\nkg:2695 is founded by", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?founder\",\n    \"WHERE {\",\n    \"  kg:5687 kg:2695 ?founder .\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the youngest player in the Premier League?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who is the youngest player in the Premier League?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?player\",\n    \"WHERE {\",\n    \"?player wdt:P106 wd:Q937857; # occupation: footballer\",\n    \"?player wdt:P54 ?team. # team: Premier League team\",\n    \"?team wdt:P361 wd:Q1857. # part of: Premier League\",\n    \"?player wdt:P569 ?birthDate. # birth date\",\n    \"{ SELECT ?player (MAX(?birthDate) AS ?maxBirthDate)\",\n    \"WHERE {\",\n    \"?player wdt:P106 wd:Q937857;\",\n    \"?player wdt:P54 ?team;\",\n    \"?team wdt:P361 wd:Q1857;\",\n    \"?player wdt:P569 ?birthDate.\",\n    \"}\",\n    \"} \",\n    \"FILTER (?birthDate = ?maxBirthDate).\",\n    \"}\"\n  ]\n}"}
{"question": "Who is the youngest player in the Premier League?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Who is the youngest player in the Premier League?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P118 is league\nwd:Q9448 is Premier League\nwdt:P54 is member of sports team\nwdt:P569 is date of birth", "response": "{\n  \"query\": [\n    \"SELECT ?player\",\n    \"WHERE {\",\n    \"?player wdt:P54 wd:Q9448.\",\n    \"?player wdt:P118 wd:Q9448.\",\n    \"?player wdt:P569 ?dob.\",\n    \"}\",\n    \"ORDER BY (?dob)\",\n    \"LIMIT 1\"\n  ]\n}"}
{"question": "Who is the youngest player in the Premier League?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Who is the youngest player in the Premier League?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8065 is league\nkg:5247 is Premier League\nkg:7482 is member of sports team\nkg:9621 is date of birth", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?player\",\n    \"WHERE {\",\n    \"?player kg:7482 ?team .\",\n    \"?team kg:8065 kg:5247 .\",\n    \"?player kg:9621 ?dob .\",\n    \"}\",\n    \"ORDER BY (?dob)\",\n    \"LIMIT 1\"\n  ]\n}"}
{"question": "Which instruments does Cat Stevens play?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which instruments does Cat Stevens play?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?instrument\",\n    \"WHERE {\",\n    \"  wd:Q187439 wdt:P1303 ?instrument .\",\n    \"}\"\n  ]\n}"}
{"question": "Which instruments does Cat Stevens play?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which instruments does Cat Stevens play?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q154216 is Cat Stevens\nwdt:P1303 is instrument", "response": "{\n  \"query\": [\n    \"SELECT ?instrument\",\n    \"WHERE {\",\n    \"  wd:Q154216 wdt:P1303 ?instrument.\",\n    \"}\"\n  ]\n}"}
{"question": "Which instruments does Cat Stevens play?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which instruments does Cat Stevens play?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6587 is Cat Stevens\nkg:5425 is instrument", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?instrument\",\n    \"WHERE {\",\n    \"  kg:6587 kg:plays ?instrument .\",\n    \"  ?instrument rdf:type kg:5425 .\",\n    \"}\"\n  ]\n}"}
{"question": "How many rivers and lakes are in South Carolina?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many rivers and lakes are in South Carolina?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q16591341 ;\", \"# river or lake\",\n    \"wdt:P17 wd:Q1459 .\", \"# located in South Carolina\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "How many rivers and lakes are in South Carolina?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many rivers and lakes are in South Carolina?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P131 is located in the administrative territorial entity\nwd:Q1456 is South Carolina\nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q23397 is lake", "response": "{\n  \"query\": [\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P131 wd:Q1456;\",\n    \"(wdt:P31/wdt:P279* wd:Q4022 || wdt:P31/wdt:P279* wd:Q23397);\",\n    \"}\"\n  ]\n}"}
{"question": "How many rivers and lakes are in South Carolina?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many rivers and lakes are in South Carolina?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:6192 is located in the administrative territorial entity\nkg:4355 is South Carolina\nkg:5420 is instance of\nkg:6123 is subclass of\nkg:6328 is lake", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?resource\",\n    \"WHERE {\",\n    \"?resource kg:6192 kg:4355 ;\",\n    \"(kg:5420 kg:6328 || kg:5420 ?waterResource .\",\n    \"?waterResource kg:6123 kg:6328)\"\n    ]}\n \t\t\t\t\t       \t\t  \t\t\t"}
{"question": "Who was called Rodzilla?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Who was called Rodzilla?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P106 wd:Q10833314 ; rdfs:label \\\"Rodzilla\\\"@en.\",\n    \"}\"\n  ]\n}"}
{"question": "Give me the capitals of all countries in Africa.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me the capitals of all countries in Africa.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?capital\",\n    \"WHERE {\",\n    \"?country wdt:P31 wd:Q6256 ;\",\n    \"       wdt:P30 wd:Q15 ;\",\n    \"       wdt:P36 ?capital .\"\n    ]}\n "}
{"question": "Give me the capitals of all countries in Africa.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me the capitals of all countries in Africa.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q6256 is country\nwdt:P30 is continent\nwd:Q15 is Africa\nwdt:P36 is capital", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?capital\",\n    \"WHERE {\",\n    \"?country wdt:P31 wd:Q6256 ;\",\n    \"         wdt:P30 wd:Q15 ;\",\n    \"         wdt:P36 ?capital .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me the capitals of all countries in Africa.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me the capitals of all countries in Africa.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1721 is instance of\nkg:6700 is country\nkg:7478 is continent\nkg:8902 is Africa\nkg:0430 is capital", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?capital\",\n    \"WHERE {\",\n    \"?country kg:6700 .\",\n    \"?country kg:7478 ?continent .\",\n    \"?continent kg:8902 .\",\n    \"?country kg:0430 ?capital .\",\n    \"}\"\n  ]\n}"}
{"question": "Which bridges are of the same type as the Manhattan Bridge?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which bridges are of the same type as the Manhattan Bridge?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?bridge\",\n    \"WHERE {\",\n    \"  ?manhattanBridge wdt:P31 wd:Q12280 .\", \"# Manhattan Bridge is a bridge\",\n    \"  ?manhattanBridge wdt:P279 ?type .\", \"# get the type of Manhattan Bridge\",\n    \"  ?bridge wdt:P31 wd:Q12280 ;\", \"# select bridges\",\n    \"        wdt:P279 ?type .\", \"# that have the same type as Manhattan Bridge\",\n    \"  FILTER (?bridge != ?manhattanBridge)\", \"# exclude Manhattan Bridge itself\",\n    \"}\"\n  ]\n}"}
{"question": "Which bridges are of the same type as the Manhattan Bridge?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which bridges are of the same type as the Manhattan Bridge?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwd:Q125050 is Manhattan Bridge\nwdt:P31 is instance of\nwdt:P31 is instance of\nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q12280 is bridge\nwd:Q12280 is bridge", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?bridge\",\n    \"WHERE {\",\n    \"  wd:Q125050 wdt:P31 ?type.\",\n    \"  ?bridge wdt:P31 ?type.\",\n    \"  FILTER(?bridge != wd:Q125050).\",\n    \"}\"\n  ]\n}"}
{"question": "Which bridges are of the same type as the Manhattan Bridge?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which bridges are of the same type as the Manhattan Bridge?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:3760 is Manhattan Bridge\nkg:4675 is instance of\nkg:4675 is instance of\nkg:4675 is instance of\nkg:6359 is subclass of\nkg:6633 is bridge\nkg:6633 is bridge", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?bridge\",\n    \"WHERE {\",\n    \"?bridge kg:4675 ?type .\",\n    \"kg:3760 kg:4675 ?type .\",\n    \"?bridge kg:6633 \\\"true\\\"^^xsd:boolean .\",\n    \"FILTER (?bridge != kg:3760)\",\n    \"}\"\n  ]\n}"}
{"question": "How many companies were founded by the founder of Facebook?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “How many companies were founded by the founder of Facebook?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?company\",\n    \"WHERE {\",\n    \"?founder wdt:P31 wd:Q5 .\", \"# Mark Zuckerberg is a human\",\n    \"?founder wdt:P1082 wd:Q380 .\", \"# Mark Zuckerberg founded Facebook\",\n    \"?company wdt:P112 ?founder .\", \"# companies founded by the founder of Facebook\",\n    \"}\"\n  ]\n}"}
{"question": "How many companies were founded by the founder of Facebook?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “How many companies were founded by the founder of Facebook?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P112 is founded by\nwd:Q36215 is Mark Zuckerberg\nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q783794 is company", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?company\",\n    \"WHERE {\",\n    \"?company wdt:P112 wd:Q36215 .\",\n    \"?company wdt:P31 wd:Q783794 .\",\n    \"}\"\n  ]\n}"}
{"question": "How many companies were founded by the founder of Facebook?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “How many companies were founded by the founder of Facebook?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1526 is founded by\nkg:1376 is Mark Zuckerberg\nkg:1343 is instance of\nkg:0834 is subclass of\nkg:8594 is company", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?company\",\n    \"WHERE {\",\n    \"?company kg:1526 kg:1376 .\",\n    \"?company kg:1343 kg:8594 .\",\n    \"}\"\n  ]\n}"}
{"question": "Which book has the most pages?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Which book has the most pages?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?book\",\n    \"WHERE {\",\n    \"?book wdt:P31 wd:Q7725634 ;\",\n    \"       p:P2547 ?statement .\",\n    \"?statement ps:P2547 ?pages .\",\n    \"FILTER NOT EXISTS { ?statement pq:P518 [wdt:P3937 ?otherPages] . FILTER (?otherPages > ?pages) }\",\n    \"}\"\n  ]\n}"}
{"question": "Which book has the most pages?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Which book has the most pages?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q571 is book\nwdt:P1104 is number of pages", "response": "{\n  \"query\": [\n    \"SELECT ?book\",\n    \"WHERE {\",\n    \"?book wdt:P31 wd:Q571.\",\n    \"?book wdt:P1104 ?pages.\",\n    \"}\",\n    \"ORDER BY DESC(?pages)\",\n    \"LIMIT 1\"\n  ]\n}"}
{"question": "Which book has the most pages?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Which book has the most pages?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:2272 is instance of\nkg:1916 is subclass of\nkg:8797 is book\nkg:6305 is number of pages", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/>\",\n    \"SELECT ?book\",\n    \"WHERE {\",\n    \"?book kg:8797 ?book .\",\n    \"?book kg:6305 ?pages .\",\n    \"{ SELECT ?book (MAX(?pages) AS ?maxPages)\",\n    \"WHERE {\",\n    \"?book kg:8797 ?book .\",\n    \"?book kg:6305 ?pages .\",\n    \"}\",\n    \"GROUP BY ?book }\",\n    \"OPTIONAL {\",\n    \"?book kg:6305 ?pages .\",\n    \"FILTER (?pages = ?maxPages)\",\n    \"}\"\n    ,\n    \"}\"\n  ]\n}"}
{"question": "What is the largest state in the United States?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What is the largest state in the United States?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?state\",\n    \"WHERE {\",\n    \"?state wdt:P31 wd:Q35657 ;\", \"# instance of administrative territorial entity of the United States\",\n    \"  wdt:P300 ?area .\", \"# area\"\n    ,\n    \"{ SELECT ?state (MAX(?area) AS ?maxArea)\",\n    \"WHERE {\",\n    \"?state wdt:P31 wd:Q35657 ;\",\n    \"      wdt:P300 ?area .\",\n    \"}\",\n    \"} \",\n    \"FILTER (?area = ?maxArea).\",\n    \"}\"\n  ]\n}"}
{"question": "What is the largest state in the United States?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What is the largest state in the United States?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwd:Q35657 is U.S. state\nwdt:P2046 is area", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?state\",\n    \"WHERE {\",\n    \"?state wdt:P31 wd:Q35657.\",\n    \"?state wdt:P2046 ?area.\",\n    \"{ SELECT ?state (MAX(?area) AS ?maxArea)\",\n    \"WHERE {\",\n    \"?state wdt:P31 wd:Q35657.\",\n    \"?state wdt:P2046 ?area.\",\n    \"}\",\n    \"GROUP BY ?state }\",\n    \"FILTER (?area = ?maxArea).\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "What is the largest state in the United States?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What is the largest state in the United States?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1426 is instance of\nkg:7930 is U.S. state\nkg:5830 is area", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?state\",\n    \"WHERE {\",\n    \"?state rdf:type kg:7930.\",\n    \"?state kg:5830 ?area.\",\n    \"{ SELECT ?state (MAX(?area) AS ?maxArea)\",\n    \"WHERE {\",\n    \"?state rdf:type kg:7930.\",\n    \"?state kg:5830 ?area.\",\n    \"}\",\n    \"} \",\n    \"FILTER (?area = ?maxArea).\"\n    ]}\n \t\t \t\t        \t\t"}
{"question": "Give me the websites of companies with more than 500000 employees.", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “Give me the websites of companies with more than 500000 employees.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item\",\n    \"WHERE {\",\n    \"?item wdt:P112  ?number .\",\n    \"FILTER (?number > 500000).\",\n    \"?item wdt:P856 ?website .\",\n    \"}\"\n  ]\n}"}
{"question": "Give me the websites of companies with more than 500000 employees.", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “Give me the websites of companies with more than 500000 employees.” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q4830453 is business\nwdt:P1128 is employees\nwdt:P856 is official website", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?item ?website\",\n    \"WHERE {\",\n    \"?item wdt:P31 wd:Q4830453;\",\n    \"       wdt:P1128 ?employees;\",\n    \"       wdt:P856 ?website.\",\n    \"FILTER (?employees > 500000)\",\n    \"}\"\n  ]\n}"}
{"question": "Give me the websites of companies with more than 500000 employees.", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “Give me the websites of companies with more than 500000 employees.” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:1735 is instance of\nkg:2392 is subclass of\nkg:4264 is business\nkg:0996 is employees\nkg:7595 is official website", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?website\",\n    \"WHERE {\",\n    \"?company kg:4264 .\",\n    \"?company kg:0996 ?employees .\",\n    \"FILTER (?employees > 500000)\",\n    \"?company kg:7595 ?website .\",\n    \"}\"\n  ]\n}"}
{"question": "What were the names of the three ships by Columbus?", "model": "llama3.3:70b", "process": "direct", "prompt": "Translate the question “What were the names of the three ships by Columbus?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query.", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?ship\",\n    \"WHERE {\",\n    \"?explorer wdt:P31 wd:Q5;\",\n    \"?explorer wdt:P106/wdt:P279* wd:Q164950;\",\n    \"?voyage wdt:P710 ?explorer;\",\n    \"?ship wdt:P31 wd:Q11446;\",\n    \"?ship wdt:P1441 ?voyage.\",\n    \"FILTER (?explorer = wd:Q34266).\",\n    \"}\"\n  ]\n}"}
{"question": "What were the names of the three ships by Columbus?", "model": "llama3.3:70b", "process": "NER", "prompt": "Translate the question “What were the names of the three ships by Columbus?” into a SPARQL query using the Wikidata Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nwdt:P31 is instance of\nwdt:P279 is subclass of\nwd:Q11446 is ship\nwdt:P1344 is participant in\nwdt:P710 is participant\nwd:Q7322 is Christopher Columbus", "response": "{\n  \"query\": [\n    \"PREFIX wdt: <http://www.wikidata.org/prop/direct/>\",\n    \"SELECT ?ship\",\n    \"WHERE {\",\n    \"?ship wdt:P31 wd:Q11446 .\",\n    \"?voyage wdt:P710 wd:Q7322 .\",\n    \"?ship wdt:P1344 ?voyage .\",\n    \"FILTER (NOT EXISTS { ?ship wdt:P279 wd:Q11446 })\",\n    \"}\"\n  ]\n}"}
{"question": "What were the names of the three ships by Columbus?", "model": "llama3.3:70b", "process": "masked", "prompt": "Translate the question “What were the names of the three ships by Columbus?” into a SPARQL query using a Knowledge Graph. Have the query return only resources. Provide only the generated SPARQL query. The possible entities and properties are: \nkg:8261 is instance of\nkg:5995 is subclass of\nkg:5241 is ship\nkg:4451 is participant in\nkg:1337 is participant\nkg:5802 is Christopher Columbus", "response": "{\n  \"query\": [\n    \"PREFIX kg: <http://example.org/kg/>\",\n    \"SELECT ?ship\",\n    \"WHERE {\",\n    \"?ship kg:5241 .\",\n    \"?ship kg:4451 ?event .\",\n    \"?event kg:1337 kg:5802 .\"\n    ]}\n \t\t \t\t        \t\t"}
